{"version":3,"sources":["Common.tsx","DataManager.tsx","Customizable/TextInputData.tsx","Customizable/SelectData.tsx","Customizable/CheckboxData.tsx","Customizable/GroupData.tsx","Customizable/PersonalityData.tsx","Utils.tsx","Components/SavedSelect.tsx","Components/SavedText.tsx","Components/SavedPortrait.tsx","PhysicalChar.tsx","Components/SavedPersonality.tsx","Personality.tsx","ActionAbilities.tsx","DnaSkills.tsx","Flaws.tsx","Motive.tsx","BioItems.tsx","Components/PassiveAbilityAccordion.tsx","CharacterSheet.tsx","App.tsx","index.tsx","Data.js"],"names":["CustomizableDataType","SavedTextValue","value","Value","this","data","e","SavedArrayTextValue","values","Values","hasOwnProperty","Array","isArray","push","DataManager","Data","dataObj","Object","keys","key","customData","Map","dataItem","customizableData","Utils","GetCustomizableDataFromAny","set","_id","size","_customData","_data","getSaveData","CalculatePoints","has","fillFromData","get","jsonStr","JSON","stringify","MapReplacer","window","btoa","unescape","encodeURIComponent","saveData","clearOld","dataEntries","from","entries","console","log","savedData","dataParsed","parse","success","error","atobValue","atob","decodeURIComponent","escape","parsed","MapReviver","charUrl","authKey","onSaveDone","length","fetch","method","body","then","response","json","catch","charId","onLoadDone","text","loaded","LoadSaveData","SetSaveData","savedValue","GetData","parseInt","isNaN","_maxPoints","points","forEach","val","calculatePoints","_points","dataType","TextInputData","name","description","args","defaultValue","isNumber","_args","DataType","Text","Name","Description","DefaultValue","IsNumber","SetData","argsMap","SelectData","options","Select","Options","validatedOptions","option","i","splice","id","isValid","onValueChange","CheckboxData","isDefaultChecked","Checkbox","IsDefaultChecked","GroupData","items","Group","Items","item","GetItemsFromArgs","GetArgMap","PersonalityData","Personality","getDefaultAbilities","selected","onSelectedChange","abilities","savedAbilities","getDefaultSelected","groupData","validItems","ability","abilityItem","traits","savedTraits","trait","traitGroup","traitItem","urlParams","URLSearchParams","location","search","Args","CreateFromDataObject","SavedSelect","props","getDefaultValue","state","className","contClassName","htmlFor","onChange","target","map","setState","React","Component","SavedText","type","SavedPortrait","alt","src","PhysicalChar","customizations","portraitUrl","physicalData","GetCustomData","portrait","textInputData","customization","selectData","grouped","href","tabIndex","aria-labelledby","aria-hidden","data-bs-dismiss","aria-label","SavedPersonality","abilityItems","traitItems","getDefaultTraits","abilityGroup","keyPrefix","traitKeyPrefix","isChecked","defaultChecked","onAbilityStateChange","checked","onTraitStateChange","slice","index","indexOf","onAbilitiesChange","onTraitsChange","personalities","maxPoints","GetMaxPoints","GetPoints","personalityData","personality","onRecalculatePoints","ActionAbilities","disabled","DnaSkills","Flaws","Motive","BioItems","PassiveAbilityAccordion","isCollapsed","data-bs-toggle","aria-expanded","onClick","abilityName","persName","abilityDesc","CharacterSheet","physCustomizations","GetCharId","charLink","origin","portraitUrlSaved","charName","physItems","getValueOfOption","getArg","physGrouped","charTraits","charAbilities","placeholder","aria-describedby","loadOnline","saveOnline","role","data-bs-target","aria-controls","aria-selected","data-bs-parent","isSuccessful","onLoadingStateChange","appInstance","GetSaveData","SaveOnlineData","isSuccesful","App","loading","currentPage","InitializeCustomData","parseURL","addEventListener","loadingOverlay","isLoading","onComplete","firstParse","LoadOnlineCharacter","urlSplit","hash","split","ReactDOM","render","StrictMode","document","getElementById","module","exports","HideOnMGS"],"mappings":"mIAKYA,E,sFAAAA,K,YAAAA,E,gBAAAA,E,oBAAAA,E,cAAAA,E,2BAAAA,M,KAkBL,IAAMC,EAAb,WAGE,WAAYC,GAAgB,yBAFrBC,WAEoB,EACzBC,KAAKD,MAAQD,EAJjB,+CAOE,WACI,OAAOE,OARb,0BAWE,SAAoBC,GAClB,IAEE,OADAD,KAAKD,MAASE,EAAwBF,OAC/B,EACP,MAAOG,GACP,OAAO,OAhBb,KAqBaC,EAAb,WAGE,WAAYC,GAAmB,yBAFxBC,YAEuB,EAC5BL,KAAKK,OAASD,EAJlB,+CAOE,WACI,OAAOJ,OARb,0BAWE,SAAoBC,GAClB,GAAoB,kBAATA,IAAsBA,EAAKK,eAAe,YAAcC,MAAMC,QAASP,EAAaI,QAC7F,OAAO,EAGT,IALyC,EAKrCD,EAAmB,GALkB,cAMpBH,EAAaI,QANO,IAMzC,2BAA0C,CAAC,IAAhCP,EAA+B,QACxC,GAAqB,kBAAVA,EACT,OAAO,EAGTM,EAAOK,KAAKX,IAX2B,8BAezC,OADAE,KAAKK,OAASD,GACP,MA1BX,K,eCxCaM,EAAb,yGAME,WACE,GAAoB,kBAATC,EAMX,IAFA,IAAMC,EAAUD,EAEhB,MADuBE,OAAOC,KAAKF,GACnC,eAAwB,CAAnB,IAAMG,EAAG,KACZ,GAAKR,MAAMC,QAAQI,EAAQG,IAA3B,CAIA,IALsB,EAKhBC,EAAa,IAAIC,IALD,cAMCL,EAAQG,IANT,IAMtB,2BAAqC,CAAC,IAA3BG,EAA0B,QAC7BC,EAAmBC,EAAMC,2BAA2BH,GACjC,OAArBC,GACFH,EAAWM,IAAIH,EAAiBI,IAAKJ,IATnB,8BAalBH,EAAWQ,KAAO,GACpBxB,KAAKyB,YAAYH,IAAIP,EAAKC,OA3BlC,qBAgCE,SAAsBD,EAAad,GACjCD,KAAK0B,MAAMJ,IAAIP,EAAKd,EAAK0B,eACzB3B,KAAK4B,oBAlCT,qBAqCE,SAA4Cb,EAAaH,GACvD,OAAIZ,KAAK0B,MAAMG,IAAId,IAAQH,EAAQkB,aAAa9B,KAAK0B,MAAMK,IAAIhB,IACtDH,EAGF,OA1CX,2BA6CE,SAA4BG,GAC1B,OAAIf,KAAKyB,YAAYI,IAAId,GAChBf,KAAKyB,YAAYM,IAAIhB,GAGvB,OAlDX,yBAqDE,WACE,IAAMiB,EAAUC,KAAKC,UAAUlC,KAAK0B,MAAOhB,EAAYyB,aAEvD,OADiBC,OAAOC,KAAKC,SAASC,mBAAmBP,OAvD7D,yBA2DE,SAA0BQ,GAAgE,IAAjCC,IAAgC,yDACvF,GAAMD,aAAoBvB,IAA1B,CAKIwB,IACFzC,KAAK0B,MAAQ,IAAIT,KAInB,IADA,IAAMyB,EAAcnC,MAAMoC,KAAKH,EAASI,WACxC,MAA2BF,EAA3B,eAAwC,CAAnC,0BAAO3B,EAAP,KAAYjB,EAAZ,KACgB,kBAARiB,IAIU,kBAAVjB,GAIXE,KAAK0B,MAAMJ,IAAIP,EAAKjB,UAlBpB+C,QAAQC,IAAI,2BA7DlB,0BAmFE,SAA2BC,GACzB,IACE,IAAMC,EAAaf,KAAKgB,MAAMF,GAC9B,GAAMC,GAAcA,EAAW1C,eAAe,aAAe0C,EAAWE,QAEtE,OADAL,QAAQC,IAAI,WAAaE,EAAWG,OAC7B,KAET,MAAMjD,IAER,IAAIkD,EAAY,GAChB,IACEA,EAAYhB,OAAOiB,KAAKN,GAE1B,MAAM7C,GAEJ,OADA2C,QAAQC,IAAI,mBACL,KAGT,IAAIhD,EAAQsD,EACZ,IACEtD,EAAQwD,mBAAmBC,OAAOH,IAElCnB,KAAKgB,MAAMnD,GAEb,MAAMI,GACJJ,EAAQsD,EAGV,GAAc,KAAVtD,EACF,IACE,IAAM0D,EAA8BvB,KAAKgB,MAAMnD,EAAOY,EAAY+C,YAClE,GAAID,aAAkBvC,IACpB,OAAOuC,EAGPX,QAAQC,IAAI,qBAGhB,MAAM5C,GACJ2C,QAAQC,IAAI,wBAIdD,QAAQC,IAAI,mBAGd,OAAO,OAjIX,4BAoIE,SAA6BY,EAAiBC,EAAiBnB,EAAkBoB,GAC3EF,EAAQG,OAAS,GACnBhB,QAAQC,IAAI,yBACZc,GAAW,IAEJD,EAAQE,OAAS,GACxBhB,QAAQC,IAAI,oBACZc,GAAW,IAGXE,MAAM,mCAAoC,CACxCC,OAAQ,OACRC,KAAM,UAAYN,EAAU,aAAelB,EAAW,gBAAkBmB,EAAU,OAEnFM,MAAK,SAACC,GAAD,OAAcA,EAASC,UAC5BF,MAAK,SAACE,GACLP,EAAWO,EAAKjB,YAEjBkB,OAAM,SAACjB,GACNN,QAAQC,IAAIK,GACZS,GAAW,QAxJnB,iCA6JE,SAAkCS,EAAgBC,GAAmD,IAAD,OAC9FD,EAAOR,OAAS,EAClBhB,QAAQC,IAAI,yBAIdgB,MAAM,oCAAsCO,EAAQ,CAClDN,OAAQ,QAETE,MAAK,SAACC,GAAD,OAAcA,EAASK,UAC5BN,MAAK,SAACM,GACL,IACE,IAAMf,EAA4BvB,KAAKgB,MAAMsB,GAC7C1B,QAAQC,IAAIU,GACZc,GAAW,GAEb,MAAMpE,GACJ,IAAMsE,EAAS,EAAKC,aAAaF,GACnB,MAAVC,GACF,EAAKE,YAAYF,GACjBF,GAAW,IAGXA,GAAW,OAIhBF,OAAM,SAACjB,GACNN,QAAQC,IAAIK,GACZmB,GAAW,QA1LjB,6BA8LE,WACE,IAAMK,EAAajE,EAAYkE,QAAQ,gBAAiB,IAAI/E,EAAe,KAC3E,GAAmB,OAAf8E,EAAqB,CACvB,IAAMnB,EAASqB,SAASF,EAAW5E,OAC9B+E,MAAMtB,KACTxD,KAAK+E,WAAavB,GAItB,IAAIwB,EAAS,EACbhF,KAAKyB,YAAYwD,SAAQ,SAACC,GACxBA,EAAID,SAAQ,SAAChF,GACX+E,GAAU/E,EAAKkF,wBAGnBnF,KAAKoF,QAAUJ,IA7MnB,0BAgNE,WACE,OAAOhF,KAAK+E,aAjNhB,uBAoNE,WACE,OAAO/E,KAAKoF,UArNhB,yBAwNE,SAA2BrE,EAAUjB,GACnC,OAAGA,aAAiBmB,IACX,CACLoE,SAAU,MACVvF,MAAOS,MAAMoC,KAAK7C,EAAM8C,YAGnB9C,IA/Nb,wBAmOE,SAA0BiB,EAAUjB,GAClC,MAAoB,kBAAVA,GAAgC,OAAVA,GACP,QAAnBA,EAAMuF,SACD,IAAIpE,IAAInB,EAAMA,OAGlBA,MAzOX,KAAaY,EACIe,YAA2D,IAAIR,IADnEP,EAEIgB,MAA6B,IAAIT,IAFrCP,EAGIqE,WAAqB,IAHzBrE,EAII0E,QAAkB,EAyOpB1E,IC9OF4E,EAAb,WAUI,WAAY/D,EAAagE,EAAcC,EAAqBC,EAAwBC,EAAsBC,GAAoB,yBATtHC,WASqH,OAP7GrE,SAO6G,OAN7GsE,SAAWjG,EAAqBkG,KAM6E,KAL7GC,UAK6G,OAJ7GC,iBAI6G,OAH7GC,kBAG6G,OAF7GC,cAE6G,EACzHlG,KAAK4F,MAAQH,EACbzF,KAAKuB,IAAMA,EACXvB,KAAK+F,KAAOR,EACZvF,KAAKgG,YAAcR,EACnBxF,KAAKiG,aAAeP,EACpB1F,KAAKkG,SAAWP,EAhBxB,0CAmBI,SAAc5E,GACV,OAAIf,KAAK4F,MAAM/D,IAAId,GACRf,KAAK4F,MAAM7D,IAAIhB,GAGnB,OAxBf,6BA2BI,WACI,OAAO,IA5Bf,2BA+BI,SAAqBjB,GACjBY,EAAYyF,QAAQnG,KAAKuB,IAAK,IAAI1B,EAAeC,MAhCzD,6BAmCI,WACI,IAAM6E,EAAajE,EAAYkE,QAAQ5E,KAAKuB,IAAK,IAAI1B,EAAe,KACpE,OAAmB,OAAf8E,EACOA,EAAW5E,MAGfC,KAAKiG,gBAzCpB,mCA4CI,SAAmC1E,EAAagE,EAAcC,EAAqBC,GAC/E,GAAa,OAATA,GAAiC,kBAATA,IACpBA,EAAKnF,eAAe,iBAAgD,kBAAtBmF,EAAKQ,eACnDR,EAAKnF,eAAe,aAAwC,mBAAlBmF,EAAKS,SACnD,OAAO,KAGX,IAAME,EAAU,IAAInF,IACpB,IAAK,IAAMF,KAAO0E,EACVA,EAAKnF,eAAeS,IACpBqF,EAAQ9E,IAAIP,EAAK0E,EAAK1E,IAI9B,OAAO,IAAIuE,EAAc/D,EAAKgE,EAAMC,EAAaY,EAASX,EAAKQ,aAAwBR,EAAKS,cA1DpG,KCKaG,EAAb,WASI,WAAY9E,EAAagE,EAAcC,EAAqBC,EAAwBa,GAA+B,yBAR3GV,WAQ0G,OANlGrE,SAMkG,OALlGsE,SAAWjG,EAAqB2G,OAKkE,KAJlGR,UAIkG,OAHlGC,iBAGkG,OAF3GQ,aAE2G,EAC9GxG,KAAK4F,MAAQH,EACbzF,KAAKuB,IAAMA,EACXvB,KAAK+F,KAAOR,EACZvF,KAAKgG,YAAcR,EAEnB,IAAMiB,EAAwC,GAC9C,GAAgB,OAAZH,EAAkB,CAAC,IAAD,gBACGA,GADH,IAClB,2BAA8B,CAAC,IAApBI,EAAmB,QAC1B,KAAe,OAAXA,GAAkC,OAAfA,EAAOnF,KAAgBmF,EAAOnF,IAAIsC,OAAS,GAAsB,OAAjB6C,EAAO3G,OAAkB2G,EAAO3G,MAAM8D,OAAS,GAAtH,CAIA,IAAK,IAAI8C,EAAI,EAAGA,EAAIF,EAAiB5C,OAAQ8C,IACzC,GAAIF,EAAiBE,GAAGpF,MAAQmF,EAAOnF,IAAK,CACxCkF,EAAiBG,OAAOD,EAAG,GAC3B,MAIRF,EAAiBhG,KAAKiG,KAbR,+BAiBtB1G,KAAKwG,QAAUC,EAjCvB,oDAoCI,SAAwBI,GAA4B,IAAD,gBAC1B7G,KAAKwG,SADqB,IAC/C,2BAAmC,CAAC,IAAzBE,EAAwB,QAC/B,GAAIA,EAAOnF,MAAQsF,EACf,OAAOH,EAAO3G,OAHyB,8BAO/C,OAAO,OA3Cf,oBA8CI,SAAcgB,GACV,OAAIf,KAAK4F,MAAM/D,IAAId,GACRf,KAAK4F,MAAM7D,IAAIhB,GAGnB,OAnDf,6BAsDI,WACI,OAAO,IAvDf,2BA0DI,SAAqBjB,GACjBY,EAAYyF,QAAQnG,KAAKuB,IAAK,IAAI1B,EAAeC,MA3DzD,6BA8DI,WACI,IAAM6E,EAAajE,EAAYkE,QAAQ5E,KAAKuB,IAAK,IAAI1B,EAAe,KAChEiH,GAAU,EACd,GAAmB,OAAfnC,EAAqB,CAAC,IAAD,gBACA3E,KAAKwG,SADL,IACrB,2BAAmC,CAAC,IAAzBE,EAAwB,QACjC,GAAI/B,EAAW5E,QAAU2G,EAAOnF,IAAK,CACnCuF,GAAU,EACV,QAJiB,+BASzB,OAAIA,GAA0B,OAAfnC,EACJA,EAAW5E,MAGlBC,KAAKwG,QAAQ3C,OAAS,GACtB7D,KAAK+G,cAAc/G,KAAKwG,QAAQ,GAAGjF,KAC5BvB,KAAKwG,QAAQ,GAAGjF,KAGpB,MAnFf,mCAsFI,SAAmCA,EAAagE,EAAcC,EAAqBC,GAC/E,GAAa,OAATA,GAAiC,kBAATA,IAAsBA,EAAKnF,eAAe,aAAeC,MAAMC,QAAQiF,EAAKe,SACpG,OAAO,KAGX,IAAMJ,EAAU,IAAInF,IACpB,IAAK,IAAMF,KAAO0E,EACVA,EAAKnF,eAAeS,IACpBqF,EAAQ9E,IAAIP,EAAK0E,EAAK1E,IAI9B,IAZ6G,EAYvGuF,EAA+B,GAZwE,cAaxFb,EAAKe,SAbmF,IAa7G,2BAAmC,CAAC,IAAzBE,EAAwB,QAC/B,GAAe,OAAXA,GAAqC,kBAAXA,IACtBA,EAAOpG,eAAe,QAAgC,kBAAfoG,EAAOnF,MAC9CmF,EAAOpG,eAAe,UAAoC,kBAAjBoG,EAAO3G,MACpD,OAAO,KAGXuG,EAAQ7F,KAAK,CAACc,IAAKmF,EAAOnF,IAAKxB,MAAO2G,EAAO3G,SApB4D,8BAuB7G,OAAO,IAAIsG,EAAW9E,EAAKgE,EAAMC,EAAaY,EAASE,OA7G/D,KCNaU,EAAb,WASI,WAAsBzF,EAAagE,EAAcC,EAAqBC,EAAwBwB,GAA4B,yBARlHrB,WAQiH,OANzGrE,SAMyG,OALzGsE,SAAWjG,EAAqBsH,SAKyE,KAJzGnB,UAIyG,OAHzGC,iBAGyG,OAFzGmB,sBAEyG,EACrHnH,KAAK4F,MAAQH,EACbzF,KAAKuB,IAAMA,EACXvB,KAAK+F,KAAOR,EACZvF,KAAKgG,YAAcR,EACnBxF,KAAKmH,iBAAmBF,EAdhC,0CAiBI,SAAclG,GACV,OAAIf,KAAK4F,MAAM/D,IAAId,GACRf,KAAK4F,MAAM7D,IAAIhB,GAGnB,OAtBf,6BAyBI,WACI,OAAO,KA1Bf,mCA6BI,SAAmCQ,EAAagE,EAAcC,EAAqBC,GAC/E,GAAa,OAATA,GAAiC,kBAATA,IACpBA,EAAKnF,eAAe,qBAAwD,mBAA1BmF,EAAK0B,iBAC3D,OAAO,KAGX,IAAMf,EAAU,IAAInF,IACpB,IAAK,IAAMF,KAAO0E,EACVA,EAAKnF,eAAeS,IACpBqF,EAAQ9E,IAAIP,EAAK0E,EAAK1E,IAI9B,OAAO,IAAIiG,EAAazF,EAAKgE,EAAMC,EAAaY,EAASX,EAAK0B,sBA1CtE,KCCaC,EAAb,WASI,WAAY7F,EAAagE,EAAcC,EAAqBC,EAAwB4B,GAA6B,yBARzGzB,WAQwG,OANhGrE,SAMgG,OALhGsE,SAAiCjG,EAAqB0H,MAK0C,KAJhGvB,UAIgG,OAHhGC,iBAGgG,OAFhGuB,WAEgG,EAC5GvH,KAAK4F,MAAQH,EACbzF,KAAKuB,IAAMA,EACXvB,KAAK+F,KAAOR,EACZvF,KAAKgG,YAAcR,EACnBxF,KAAKuH,MAAQF,EAdrB,0CAiBI,SAActG,GACV,OAAIf,KAAK4F,MAAM/D,IAAId,GACRf,KAAK4F,MAAM7D,IAAIhB,GAGnB,OAtBf,6BAyBI,WACI,OAAO,KA1Bf,+BA6BI,SAA+B0E,GAC3B,GAAa,OAATA,GAAiC,kBAATA,IACpBA,EAAKnF,eAAe,WAAaC,MAAMC,QAAQiF,EAAK8B,OACxD,OAAO,KAGX,IANkE,EAM5DF,EAA6B,GAN+B,cAO/C5B,EAAK8B,OAP0C,IAOlE,2BAAwC,CAAC,IAA9BC,EAA6B,QAC9BtG,EAAWE,EAAMC,2BAA2BmG,GAClD,GAAiB,OAAbtG,EACA,OAAO,KAGXmG,EAAM5G,KAAKS,IAbmD,8BAgBlE,OAAOmG,IA7Cf,kCAgDI,SAAmC9F,EAAagE,EAAcC,EAAqBC,GAC/E,IAAM4B,EAAQD,EAAUK,iBAAiBhC,GACzC,OAAc,OAAV4B,EACO,KAGJ,IAAID,EAAU7F,EAAKgE,EAAMC,EAAapE,EAAMsG,UAAUjC,GAAO4B,OAtD5E,KCEaM,EAAb,4MACoB9B,SAAWjG,EAAqBgI,YADpD,qDAGI,WAEI,OAA0B,GADR5H,KAAK6H,sBACNhE,SALzB,8BAQI,SAAwBiE,GACpB,IAAMnD,EAAajE,EAAYkE,QAAQ5E,KAAKuB,IAAM,YAAa,IAAI1B,EAAe,KAC/D,OAAf8E,GAAuBmD,IAAanD,EAAW5E,QAInDW,EAAYyF,QAAQnG,KAAKuB,IAAM,UAAW,IAAIpB,EAAoB,KAClEO,EAAYyF,QAAQnG,KAAKuB,IAAM,aAAc,IAAIpB,EAAoB,KACrEO,EAAYyF,QAAQnG,KAAKuB,IAAM,YAAa,IAAI1B,EAAeiI,OAhBvE,gCAmBI,WACI,IAAMnD,EAAajE,EAAYkE,QAAQ5E,KAAKuB,IAAM,YAAa,IAAI1B,EAAe,KAC9EiH,GAAU,EACd,GAAmB,OAAfnC,EAAqB,CAAC,IAAD,gBACF3E,KAAKuH,OADH,IACrB,2BAA+B,CAAC,IAArBC,EAAoB,QAC7B,GAAI7C,EAAW5E,QAAUyH,EAAKjG,IAAK,CACjCuF,GAAU,EACV,QAJiB,+BASzB,OAAIA,GAA0B,OAAfnC,EACJA,EAAW5E,MAGlBC,KAAKuH,MAAM1D,OAAS,GACpB7D,KAAK+H,iBAAiB/H,KAAKuH,MAAM,GAAGhG,KAC7BvB,KAAKuH,MAAM,GAAGhG,KAGlB,KAxCf,+BA2CI,SAAyByG,GACrBtH,EAAYyF,QAAQnG,KAAKuB,IAAM,aAAc,IAAIpB,EAAoB6H,MA5C7E,iCA+CI,WACI,IAAMC,EAAiBvH,EAAYkE,QAAQ5E,KAAKuB,IAAM,aAAc,IAAIpB,EAAoB,KAC5F,GAAuB,OAAnB8H,GAA2BA,EAAe5H,OAAOwD,OAAS,EAAG,CAC7D,IAD6D,EACvDiE,EAAW9H,KAAKkI,qBADuC,cAE1ClI,KAAKuH,OAFqC,IAE7D,2BAA+B,CAAC,IAArBC,EAAoB,QAC3B,GAAIA,EAAKjG,MAAQuG,EAAU,CACvB,IADuB,EACjBK,EAAYX,EACdY,EAAkC,GAFf,cAGDH,EAAe5H,QAHd,IAGvB,2BAA6C,CAAC,IAAD,EAAlCgI,EAAkC,sBACfF,EAAUZ,OADK,IACzC,2BAA2C,CAAC,IAAjCe,EAAgC,QACvC,GAAIA,EAAYzC,WAAajG,EAAqBsH,UAAYmB,IAAYC,EAAY/G,IAAK,CACvF6G,EAAW3H,KAAK6H,GAChB,QAJiC,gCAHtB,8BAYvB,OAAOF,IAf8C,+BAoBjE,MAAO,KArEf,4BAwEI,SAAsBG,GAClB7H,EAAYyF,QAAQnG,KAAKuB,IAAM,UAAW,IAAIpB,EAAoBoI,MAzE1E,8BA4EI,WACI,IAAMC,EAAc9H,EAAYkE,QAAQ5E,KAAKuB,IAAM,UAAW,IAAIpB,EAAoB,KACtF,GAAoB,OAAhBqI,GAAwBA,EAAYnI,OAAOwD,OAAS,EAAG,CACvD,IADuD,EACjDiE,EAAW9H,KAAKkI,qBADiC,cAEpClI,KAAKuH,OAF+B,IAEvD,2BAA+B,CAAC,IAArBC,EAAoB,QAC3B,GAAIA,EAAKjG,MAAQuG,EAAU,CACvB,IADuB,EACjBK,EAAYX,EACdY,EAAkC,GAFf,cAGHI,EAAYnI,QAHT,IAGvB,2BAAwC,CAAC,IAAD,EAA7BoI,EAA6B,sBACVN,EAAUZ,OADA,IACpC,2BAA2C,CAAC,IAAjCe,EAAgC,QACvC,GAAIA,EAAYzC,WAAajG,EAAqB0H,MAAO,CACrD,IADqD,EAC/CoB,EAAaJ,EADkC,cAE7BI,EAAWnB,OAFkB,IAErD,2BAA0C,CAAC,IAAhCoB,EAA+B,QACtC,GAAIF,IAAUE,EAAUpH,IAAK,CACzB6G,EAAW3H,KAAKkI,GAChB,QAL6C,iCAFzB,gCAHjB,8BAiBvB,OAAOP,IApBwC,+BAyB3D,MAAO,MAvGf,mCA0GI,SAAmC7G,EAAagE,EAAcC,EAAqBC,GAC/E,IAAM4B,EAAQD,EAAUK,iBAAiBhC,GACzC,OAAc,OAAV4B,EACO,KAGJ,IAAIM,EAAgBpG,EAAKgE,EAAMC,EAAapE,EAAMsG,UAAUjC,GAAO4B,OAhHlF,GAAqCD,GCExBhG,EAAb,8FACI,WACI,IAAMwH,EAAY,IAAIC,gBAAgBzG,OAAO0G,SAASC,QAChD1E,EAASuE,EAAU/G,IAAI,KAAO+G,EAAU7G,IAAI,KAAO,GACzD,OAAMsC,GAAUA,EAAOR,OAAS,EACrBQ,EAGJ,OARf,wCAWI,SAAyCnD,GACrC,GAAiB,OAAbA,GAAyC,kBAAbA,IAC1BA,EAASZ,eAAe,QAA2B,OAAjBY,EAASK,KAAwC,kBAAjBL,EAASK,KAAoBL,EAASK,IAAIsC,OAAS,IACrH3C,EAASZ,eAAe,aAAqC,OAAtBY,EAAS2E,UAAkD,kBAAtB3E,EAAS2E,UAAyB3E,EAAS2E,SAAShC,OAAS,IACzI3C,EAASZ,eAAe,SAA6B,OAAlBY,EAAS6E,MAA0C,kBAAlB7E,EAAS6E,MAAqB7E,EAAS6E,KAAKlC,OAAS,IACzH3C,EAASZ,eAAe,gBAA2C,OAAzBY,EAAS8E,aAAwD,kBAAzB9E,EAAS8E,YAC/F,OAAO,KAGT,IAAKpG,EAAqBU,eAAeY,EAAS2E,UAC9C,OAAO,KAGX,IAAMJ,EAAOvE,EAASZ,eAAe,QAAUY,EAAS8H,KAAO,KAC/D,OAAO9H,EAAS2E,UACZ,KAAKjG,EAAqBkG,KACtB,OAAOR,EAAc2D,qBAAqB/H,EAASK,IAAKL,EAAS6E,KAAM7E,EAAS8E,YAAaP,GACjG,KAAK7F,EAAqB2G,OACtB,OAAOF,EAAW4C,qBAAqB/H,EAASK,IAAKL,EAAS6E,KAAM7E,EAAS8E,YAAaP,GAC9F,KAAK7F,EAAqBsH,SACtB,OAAOF,EAAaiC,qBAAqB/H,EAASK,IAAKL,EAAS6E,KAAM7E,EAAS8E,YAAaP,GAChG,KAAK7F,EAAqB0H,MACtB,OAAOF,EAAU6B,qBAAqB/H,EAASK,IAAKL,EAAS6E,KAAM7E,EAAS8E,YAAaP,GAC7F,KAAK7F,EAAqBgI,YACtB,OAAOD,EAAgBsB,qBAAqB/H,EAASK,IAAKL,EAAS6E,KAAM7E,EAAS8E,YAAaP,GACnG,QACI,OAAO,QArCvB,uBAyCI,SAAwBA,GACpB,IAAMW,EAAU,IAAInF,IACpB,GAAoB,kBAATwE,EACP,IAAK,IAAM1E,KAAO0E,EACVA,EAAKnF,eAAeS,IACpBqF,EAAQ9E,IAAIP,EAAK0E,EAAK1E,IAKlC,OAAOqF,MAnDf,K,OCMa8C,EAAb,kDACE,WAAYC,GAA2B,IAAD,sBAGpC,IAAMrJ,GAFN,cAAMqJ,IAEaA,MAAMlJ,KAAKmJ,kBAHM,OAIpC,EAAKC,MAAQ,CAAEvJ,MAAOA,GAJc,EADxC,0CAQE,WAAiB,IAAD,OACd,OAAO,sBAAKwJ,UAAWtJ,KAAKmJ,MAAMI,cAA3B,UACL,uBAAOC,QAASxJ,KAAKmJ,MAAMlJ,KAAKsB,IAAK+H,UAAU,oCAA/C,SAAoFtJ,KAAKmJ,MAAMlJ,KAAK8F,OACpG,wBAAQuD,UAAU,sCAAsCzC,GAAI7G,KAAKmJ,MAAMlJ,KAAKsB,IAAKzB,MAAOE,KAAKqJ,MAAMvJ,MAAO2J,SAAU,SAACvJ,GAAO,EAAKuJ,SAASvJ,EAAEwJ,OAAO5J,QAAnJ,SAEIE,KAAKmJ,MAAMlJ,KAAKuG,QAAQmD,KAAI,SAACjD,GAC3B,OAAO,wBAAyB5G,MAAO4G,EAAOnF,IAAvC,SAA6CmF,EAAO3G,OAAvC2G,EAAOnF,eAdvC,sBAqBE,SAAiBzB,GACfE,KAAKmJ,MAAMlJ,KAAK8G,cAAcjH,GAC9BE,KAAKmJ,MAAMpC,cAAcjH,GACzBE,KAAK4J,SAAS,CAAE9J,MAAOA,QAxB3B,GAAiC+J,IAAMC,WCA1BC,EAAb,kDACE,WAAYZ,GAAyB,IAAD,sBAClC,cAAMA,GAEN,IAAMrJ,EAAQqJ,EAAMlJ,KAAKmJ,kBAHS,OAIlC,EAAKC,MAAQ,CAAEvJ,MAAOA,GAJY,EADtC,0CAQE,WAAiB,IAAD,OACd,OAAO,sBAAKwJ,UAAWtJ,KAAKmJ,MAAMI,cAA3B,UACL,uBAAOC,QAASxJ,KAAKmJ,MAAMlJ,KAAKsB,IAAK+H,UAAU,oCAA/C,SAAoFtJ,KAAKmJ,MAAMlJ,KAAK8F,OACpG,qBAAKuD,UAAU,eAAf,SACE,uBAAOU,KAAMhK,KAAKmJ,MAAMlJ,KAAKiG,SAAW,SAAW,OAAQoD,UAAU,4CAA4CzC,GAAI7G,KAAKmJ,MAAMlJ,KAAKsB,IAAKzB,MAAOE,KAAKqJ,MAAMvJ,MAAO2J,SAAU,SAACvJ,GAAQ,EAAKuJ,SAASvJ,EAAEwJ,OAAO5J,iBAZrN,sBAiBE,SAAiBA,GACfE,KAAKmJ,MAAMlJ,KAAK8G,cAAcjH,GAC9BE,KAAKmJ,MAAMpC,cAAcjH,GACzBE,KAAK4J,SAAS,CAAE9J,MAAOA,QApB3B,GAA+B+J,IAAMC,WCAxBG,EAAb,kDACE,WAAYd,GAA6B,IAAD,sBACtC,cAAMA,GAEN,IAAMrJ,EAAQqJ,EAAMlJ,KAAKmJ,kBAHa,OAItC,EAAKC,MAAQ,CAAEvJ,MAAOA,GAJgB,EAD1C,0CAQE,WAAiB,IAAD,OACd,OAAO,sBAAKwJ,UAAWtJ,KAAKmJ,MAAMI,cAA3B,UACL,qBAAKD,UAAU,eAAf,SACE,qBAAKA,UAAU,gBAAgBY,IAAI,GAAGC,IAAKnK,KAAKqJ,MAAMvJ,MAAM+D,OAAS,EAAI7D,KAAKqJ,MAAMvJ,MAAQ,oCAE9F,sBAAKwJ,UAAU,QAAf,UACE,uBAAOE,QAASxJ,KAAKmJ,MAAMlJ,KAAKsB,IAAK+H,UAAU,oCAA/C,SAAoFtJ,KAAKmJ,MAAMlJ,KAAK8F,OACpG,qBAAKuD,UAAU,eAAf,SACE,uBAAOU,KAAK,OAAOV,UAAU,4CAA4CzC,GAAI7G,KAAKmJ,MAAMlJ,KAAKsB,IAAKzB,MAAOE,KAAKqJ,MAAMvJ,MAAO2J,SAAU,SAACvJ,GAAQ,EAAKuJ,SAASvJ,EAAEwJ,OAAO5J,oBAhB/K,sBAsBE,SAAiBA,GACfE,KAAKmJ,MAAMlJ,KAAK8G,cAAcjH,GAC9BE,KAAKmJ,MAAMpC,cAAcjH,GACzBE,KAAK4J,SAAS,CAAE9J,MAAOA,QAzB3B,GAAmC+J,IAAMC,WCG5BM,EAAb,kDAIE,WAAYjB,GAA4B,IAAD,uBACrC,cAAMA,IAJAkB,oBAG+B,IAF/BC,iBAE+B,EAErC,EAAKjB,MAAQ,GAEb,EAAKgB,eAAiB,GACtB,EAAKC,YAAc,KACnB,IAAMC,EAAe7J,EAAY8J,cAAc,gBANV,OAOjB,MAAhBD,GACFA,EAAatF,SAAQ,SAAChF,GACR,MAARA,IACe,qBAAbA,EAAKsB,IACP,EAAK+I,YAAcrK,EAGnB,EAAKoK,eAAe5J,KAAKR,OAdI,EAJzC,0CAyBE,WACE,IAAIwK,EAAW,yBACf,GAAyB,OAArBzK,KAAKsK,YAAsB,CAC7B,IAAMI,EAAgB1K,KAAKsK,YAC3BG,EAAW,cAAC,EAAD,CAAuDxK,KAAMyK,EAAenB,cAAc,sDAAsDxC,cAAe,SAACjH,MAA5I,cAAgB4K,EAAcnJ,KAG/D,IAPc,EAOV8F,EAAQ,GAPE,cAQcrH,KAAKqK,gBARnB,IAQd,2BAAiD,CAAC,IAAvCM,EAAsC,QAC/C,GAAIA,EAAc9E,WAAajG,EAAqB2G,OAAQ,CAC1D,IAAMqE,EAAaD,EACnBtD,EAAM5G,KAAK,cAAC,EAAD,CAAkDR,KAAM2K,EAAYrB,cAAc,WAAWxC,cAAe,SAACjH,MAA3F,cAAgB8K,EAAWrJ,WAErD,GAAIoJ,EAAc9E,WAAajG,EAAqBkG,KAAM,CAC7D,IAAM4E,EAAgBC,EACtBtD,EAAM5G,KAAK,cAAC,EAAD,CAAmDR,KAAMyK,EAAenB,cAAc,WAAWxC,cAAe,SAACjH,MAAjG,cAAgB4K,EAAcnJ,QAf/C,8BAoBd,IADA,IAAIsJ,EAAU,GACLlE,EAAI,EAAGA,EAAIU,EAAMxD,OAAQ8C,GAAK,EACrCkE,EAAQpK,KACN,sBAA6B6I,UAAU,sDAAvC,UACGjC,EAAMV,GACLA,EAAI,EAAKU,EAAMxD,OAASwD,EAAMV,EAAI,GAAK,KAFjC,cAAgBA,IAM9B,OACE,qCACE,sBAAK2C,UAAU,kDAAf,UACE,oBAAIA,UAAU,kBAAd,sCACA,mBAAGA,UAAU,aAAb,iKAEF,qBAAKA,UAAU,kDAAf,SACGmB,IAEH,sBAAKnB,UAAU,oCAAf,UACGuB,EACD,qBAAKvB,UAAU,4BAAf,SACE,qBAAKA,UAAU,MAAf,SACE,mBAAGA,UAAU,qEAAqEwB,KAAK,eAAvF,4CAKN,qBAAKxB,UAAU,aAAazC,GAAG,aAAakE,UAAW,EAAGC,kBAAgB,kBAAkBC,cAAY,OAAxG,SACE,qBAAK3B,UAAU,eAAf,SACE,sBAAKA,UAAU,gBAAf,UACE,sBAAKA,UAAU,eAAf,UACE,oBAAIA,UAAU,cAAczC,GAAG,kBAA/B,yBACA,wBAAQmD,KAAK,SAASV,UAAU,YAAY4B,kBAAgB,QAAQC,aAAW,aAEjF,sBAAK7B,UAAU,aAAf,UACE,+OACA,2CACA,mBAAGA,UAAU,GAAb,4NAGA,2CACA,mBAAGA,UAAU,GAAb,uGAGA,2CACA,mBAAGA,UAAU,GAAb,qEAIF,qBAAKA,UAAU,eAAf,SACE,wBAAQU,KAAK,SAASkB,kBAAgB,QAAQ5B,UAAU,kBAAxD,2CA9FhB,GAAkCO,IAAMC,WCC3BsB,EAAb,kDACE,WAAYjC,GAAgC,IAAD,sBACzC,cAAMA,GAEN,IAHyC,EAGnCrB,EAAWqB,EAAMlJ,KAAKiI,qBACtBmD,EAAelC,EAAMlJ,KAAK4H,sBAC1BG,EAAsB,GALa,cAMtBqD,GANsB,IAMzC,2BAAiC,CAAC,IAAvB7D,EAAsB,QAAEQ,EAAUvH,KAAK+G,EAAKjG,MANd,8BAOzC,IAPyC,EAOnC+J,EAAanC,EAAMlJ,KAAKsL,mBACxBhD,EAAmB,GARgB,cAStB+C,GATsB,IASzC,2BAA+B,CAAC,IAArB9D,EAAoB,QAAEe,EAAO9H,KAAK+G,EAAKjG,MATT,qCAUzC,EAAK8H,MAAQ,CAAEvB,SAAUA,EAAUE,UAAWA,EAAWO,OAAQA,GAVxB,EAD7C,0CAcE,WAAiB,IAAD,SACVP,EAAY,GACZO,EAAS,GAFC,cAGKvI,KAAKmJ,MAAMlJ,KAAKsH,OAHrB,IAGd,2BAA0C,CAAC,IAAhCC,EAA+B,QACxC,GAAIA,EAAKjG,MAAQvB,KAAKqJ,MAAMvB,SAAU,CACpC,IADoC,EAC9B0D,EAAehE,EACfiE,EAAYzL,KAAKmJ,MAAMlJ,KAAKsB,IAAM,SAAWiG,EAAKjG,IAAM,UACxDmK,EAAiB1L,KAAKmJ,MAAMlJ,KAAKsB,IAAM,SAAWiG,EAAKjG,IAAM,UAH/B,cAIViK,EAAajE,OAJH,yBAIzBe,EAJyB,QAKlC,GAAIA,EAAYzC,WAAajG,EAAqBsH,SAAU,CAC1D,IAD0D,EACtDyE,GAAY,EAD0C,cAEpC,EAAKtC,MAAMrB,WAFyB,IAE1D,2BAA4C,CAC1C,GAD0C,UAC1BM,EAAY/G,IAAK,CAC/BoK,GAAY,EACZ,QALsD,8BAS1D3D,EAAUvH,KAAK,sBAAuC6I,UAAU,gDAAjD,UACb,uBAAOU,KAAK,WAAWmB,aAAY7C,EAAYvC,KAAMc,GAAI4E,EAAY,SAAWnD,EAAY/G,IAAK+H,UAAU,mBAAmBsC,eAAgBD,EAC5IlC,SAAU,SAACvJ,GAAQ,EAAK2L,qBAAqBvD,EAAY/G,IAAKrB,EAAEwJ,OAAOoC,YACzE,wBAAOtC,QAASiC,EAAY,SAAWnD,EAAY/G,IAAK+H,UAAU,kDAAlE,UACE,oBAAIA,UAAU,qBAAd,SAAoChB,EAAYvC,OAChD,mBAAGuD,UAAU,kBAAb,SAAgChB,EAAYtC,mBALvByF,EAAYnD,EAAY/G,WAS9C,GAAI+G,EAAYzC,WAAajG,EAAqB0H,MAAO,CAC5D,IAD4D,EACtDoB,EAAaJ,EADyC,cAEpCI,EAAWnB,OAFyB,2BAEjDoB,EAFiD,QAGtDgD,GAAY,EAH0C,cAItC,EAAKtC,MAAMd,QAJ2B,IAI1D,2BAAuC,CACrC,GADqC,UACvBI,EAAUpH,IAAK,CAC3BoK,GAAY,EACZ,QAPsD,8BAW1DpD,EAAO9H,KAAK,sBAA0C6I,UAAU,2CAApD,UACV,uBAAOU,KAAK,WAAWmB,aAAYxC,EAAU5C,KAAMc,GAAI6E,EAAiB,SAAW/C,EAAUpH,IAAK+H,UAAU,wBAAwBsC,eAAgBD,EACpJlC,SAAU,SAACvJ,GAAQ,EAAK6L,mBAAmBpD,EAAUpH,IAAKrB,EAAEwJ,OAAOoC,YACnE,uBAAOtC,QAASkC,EAAiB,SAAW/C,EAAUpH,IAAK+H,UAAU,wCAArE,SAA8GX,EAAU5C,SAHpG2F,EAAiB/C,EAAUpH,OATnD,2BAA2C,IAFiB,iCAnBhE,2BAA+C,IAJX,8BA2CpC,QA/CU,8BAmDd,OAAO,sBAAK+H,UAAWtJ,KAAKmJ,MAAMI,cAA3B,UACL,oBAAID,UAAU,0BAAd,SAAyCtJ,KAAKmJ,MAAMlJ,KAAK8F,OACzD,mBAAGuD,UAAU,aAAb,SAA2BtJ,KAAKmJ,MAAMlJ,KAAK+F,cAC3C,gCACE,oBAAIsD,UAAU,+BAAd,8FACA,qBAAKA,UAAU,SAAf,SAEItJ,KAAKmJ,MAAMlJ,KAAKsH,MAAMoC,KAAI,SAACnC,GACzB,OAAO,sBAAqD8B,UAAU,mBAA/D,UACL,uBAAOU,KAAK,QAAQmB,aAAW,cAAc5F,KAAM,EAAK4D,MAAMlJ,KAAKsB,IAAKsF,GAAI,EAAKsC,MAAMlJ,KAAKsB,IAAM,YAAciG,EAAKjG,IAAK+H,UAAU,wBAAwBsC,eAAgB,EAAKvC,MAAMvB,WAAaN,EAAKjG,IACvMzB,MAAO0H,EAAKjG,IAAKkI,SAAU,SAACvJ,GAAQ,EAAKuJ,SAASvJ,EAAEwJ,OAAO5J,UAC7D,uBAAO0J,QAAS,EAAKL,MAAMlJ,KAAKsB,IAAM,YAAciG,EAAKjG,IAAK+H,UAAU,wCAAxE,SAAiH9B,EAAKzB,SAHvG,EAAKoD,MAAMlJ,KAAKsB,IAAM,SAAWiG,EAAKjG,aAS/D,gCACE,oBAAI+H,UAAU,+BAAd,gDACCtB,KAEH,gCACE,oBAAIsB,UAAU,+BAAd,8BACA,qBAAKA,UAAU,mBAAf,SACGf,YAzFX,sBA+FE,SAAiBzI,GAAgB,IAAD,OAC9BE,KAAKmJ,MAAMlJ,KAAK8H,iBAAiBjI,GACjCE,KAAK4J,SAAS,CAAE9B,SAAUhI,EAAOkI,UAAWhI,KAAKqJ,MAAMvB,WAAahI,EAAQ,GAAKE,KAAKqJ,MAAMrB,YAAa,WAAO,EAAKmB,MAAMpC,cAAc,SAjG7I,kCAoGE,SAA6BjH,EAAe6L,GAAqB,IAAD,OAC1D3D,EAAYhI,KAAKqJ,MAAMrB,UAAUgE,QAC/BC,EAAQjE,EAAUkE,QAAQpM,GAC5BmM,GAAS,GACXjE,EAAUpB,OAAOqF,EAAO,GAGtBN,GACF3D,EAAUvH,KAAKX,GAGjBE,KAAKmJ,MAAMlJ,KAAKkM,kBAAkBnE,GAClChI,KAAK4J,SAAS,CAAE5B,UAAWA,IAAa,WAAO,EAAKmB,MAAMpC,cAAc,SAhH5E,gCAmHE,SAA2BjH,EAAe6L,GACxC,IAAIpD,EAASvI,KAAKqJ,MAAMd,OAAOyD,QACzBC,EAAQ1D,EAAO2D,QAAQpM,GACzBmM,GAAS,GACX1D,EAAO3B,OAAOqF,EAAO,GAGnBN,GACFpD,EAAO9H,KAAKX,GAGdE,KAAKmJ,MAAMlJ,KAAKmM,eAAe7D,GAC/BvI,KAAK4J,SAAS,CAAErB,OAAQA,QA/H5B,GAAsCsB,IAAMC,WCH/BlC,EAAb,kDAEE,WAAYuB,GAA2B,IAAD,uBACpC,cAAMA,IAFAkD,mBAC8B,EAGpC3L,EAAYkB,kBACZ,IAAM0K,EAAY5L,EAAY6L,eACxBvH,EAAStE,EAAY8L,YAC3B,EAAKnD,MAAQ,CAAErE,OAAQA,EAAQsH,UAAWA,GAE1C,EAAKD,cAAgB,GACrB,IAAMI,EAAkB/L,EAAY8J,cAAc,mBATd,OAUb,MAAnBiC,GACFA,EAAgBxH,SAAQ,SAAChF,GACX,MAARA,GAAgBA,EAAK4F,WAAajG,EAAqBgI,aACzD,EAAKyE,cAAc5L,KAAKR,MAbM,EAFxC,0CAqBE,WAAiB,IAAD,SACVoH,EAAQ,GADE,cAEYrH,KAAKqM,eAFjB,IAEd,2BAA8C,CAAC,IAApCK,EAAmC,QAC5CrF,EAAM5G,KAAK,cAAC,EAAD,CAAwDR,KAAMyM,EAAanD,cAAc,qBAAqBxC,cAAe,SAACjH,GAAY,EAAK6M,wBAAxH,cAAgBD,EAAYnL,OAHlD,8BAMd,OACE,qCACE,sBAAK+H,UAAU,qCAAf,UACE,oBAAIA,UAAU,kBAAd,yBACA,mBAAGA,UAAU,aAAb,wPAEF,qBAAKA,UAAU,0BAAf,SACE,sBAAKA,UAAU,8BAAf,UACE,qBAAKA,UAAU,qBAAf,SACGjC,IAEH,qBAAKiC,UAAU,gBAAf,SACE,sBAAKA,UAAU,kCAAf,UACE,oBAAIA,UAAU,qBAAd,qCACA,qBAAIA,UAAU,aAAd,UAA2B,sBAAMA,UAAU,WAAhB,SAA4BtJ,KAAKqJ,MAAMrE,SAAlE,MAAoFhF,KAAKqJ,MAAMiD,UAA/F,eACA,mBAAGhD,UAAU,kBAAb,SAA+B,gHAKvC,qBAAKA,UAAU,iBAAf,SACE,sBAAKA,UAAU,8EAAf,UACE,mBAAGA,UAAU,mCAAmCwB,KAAK,YAArD,8BACA,mBAAGxB,UAAU,gEAAgEwB,KAAK,mBAAlF,oDAlDZ,iCAyDE,WACEpK,EAAYkB,kBACZ,IAAM0K,EAAY5L,EAAY6L,eACxBvH,EAAStE,EAAY8L,YAC3BxM,KAAK4J,SAAS,CAAE5E,OAAQA,EAAQsH,UAAWA,QA7D/C,GAAiCzC,IAAMC,WCL1B8C,EAAb,kDACE,WAAYzD,GAA+B,IAAD,8BACxC,cAAMA,IACDE,MAAQ,GAF2B,EAD5C,0CAME,WACE,OACE,qCACE,sBAAKC,UAAU,qCAAf,UACE,oBAAIA,UAAU,kBAAd,yBACA,mBAAGA,UAAU,aAAb,0NAEF,sBAAKA,UAAU,YAAf,UACE,qBAAKA,UAAU,4CAAf,SACE,sBAAKA,UAAU,qBAAf,UACE,gCACE,oBAAIA,UAAU,0BAAd,gCACA,gCACE,sBAAKA,UAAU,gDAAf,UACE,uBAAOU,KAAK,WAAWmB,aAAW,mBAAmBtE,GAAG,YAAYyC,UAAU,qBAC9E,wBAAOE,QAAQ,YAAYF,UAAU,uDAArC,UACE,oBAAIA,UAAU,qBAAd,8BACA,mBAAGA,UAAU,kBAAb,sVACA,mBAAGA,UAAU,uBAAb,SAAoC,kCAAO,2CAAP,wBAGxC,sBAAKA,UAAU,gDAAf,UACE,uBAAOU,KAAK,WAAWmB,aAAW,aAAatE,GAAG,YAAYyC,UAAU,qBACxE,wBAAOE,QAAQ,YAAYF,UAAU,uDAArC,UACE,oBAAIA,UAAU,qBAAd,wBACA,mBAAGA,UAAU,kBAAb,kEACA,sBAAKA,UAAU,cAAf,UACE,mBAAGA,UAAU,uBAAb,SAAoC,kCAAO,2CAAP,iBACpC,mBAAGA,UAAU,kBAAb,SAA+B,kCAAO,6CAAP,2BAIrC,sBAAKA,UAAU,gDAAf,UAEE,uBAAOU,KAAK,WAAWmB,aAAW,gBAAgBtE,GAAG,MAAMyC,UAAU,mBAAmBuD,UAAQ,IAChG,wBAAOrD,QAAQ,MAAMF,UAAU,uDAA/B,UACE,qBAAIA,UAAU,qBAAd,2BAAiD,sBAAMA,UAAU,iBAAhB,uCACjD,mBAAGA,UAAU,kBAAb,kEACA,qBAAKA,UAAU,cAAf,SACE,mBAAGA,UAAU,uBAAb,SAAoC,kCAAO,2CAAP,yBAI1C,sBAAKA,UAAU,gDAAf,UACE,uBAAOU,KAAK,WAAWmB,aAAW,mBAAmBtE,GAAG,KAAKyC,UAAU,qBACvE,wBAAOE,QAAQ,KAAKF,UAAU,uDAA9B,UACE,oBAAIA,UAAU,qBAAd,8BACA,mBAAGA,UAAU,kBAAb,6GAKR,sBAAKA,UAAU,qBAAf,UACE,oBAAIA,UAAU,+BAAd,2CACA,gCACE,sBAAKA,UAAU,gDAAf,UACE,uBAAOU,KAAK,WAAWmB,aAAW,mBAAmBtE,GAAG,YAAYyC,UAAU,qBAC9E,wBAAOE,QAAQ,YAAYF,UAAU,uDAArC,UACE,oBAAIA,UAAU,qBAAd,8BACA,mBAAGA,UAAU,kBAAb,sVACA,mBAAGA,UAAU,uBAAb,SAAoC,kCAAO,2CAAP,wBAGxC,sBAAKA,UAAU,gDAAf,UAEE,uBAAOU,KAAK,WAAWmB,aAAW,aAAatE,GAAG,YAAYyC,UAAU,qBACxE,wBAAOE,QAAQ,YAAYF,UAAU,uDAArC,UACE,oBAAIA,UAAU,qBAAd,wBACA,mBAAGA,UAAU,kBAAb,kEACA,sBAAKA,UAAU,cAAf,UACE,mBAAGA,UAAU,uBAAb,SAAoC,kCAAO,2CAAP,iBACpC,mBAAGA,UAAU,kBAAb,SAA+B,kCAAO,6CAAP,2BAIrC,sBAAKA,UAAU,gDAAf,UAEE,uBAAOU,KAAK,WAAWmB,aAAW,gBAAgBtE,GAAG,MAAMyC,UAAU,mBAAmBuD,UAAQ,IAChG,wBAAOrD,QAAQ,MAAMF,UAAU,uDAA/B,UACE,qBAAIA,UAAU,qBAAd,2BAAiD,sBAAMA,UAAU,iBAAhB,uCACjD,mBAAGA,UAAU,kBAAb,kEACA,qBAAKA,UAAU,cAAf,SACE,mBAAGA,UAAU,uBAAb,SAAoC,kCAAO,2CAAP,yBAI1C,sBAAKA,UAAU,gDAAf,UAEE,uBAAOU,KAAK,WAAWmB,aAAW,mBAAmBtE,GAAG,KAAKyC,UAAU,qBACvE,wBAAOE,QAAQ,KAAKF,UAAU,uDAA9B,UACE,oBAAIA,UAAU,qBAAd,8BACA,mBAAGA,UAAU,kBAAb,6GAKR,gCACE,oBAAIA,UAAU,+BAAd,iCACA,gCACE,sBAAKA,UAAU,gDAAf,UAEE,uBAAOU,KAAK,WAAWmB,aAAW,mBAAmBtE,GAAG,YAAYyC,UAAU,qBAC9E,wBAAOE,QAAQ,YAAYF,UAAU,uDAArC,UACE,oBAAIA,UAAU,qBAAd,8BACA,mBAAGA,UAAU,kBAAb,sVACA,mBAAGA,UAAU,uBAAb,SAAoC,kCAAO,2CAAP,wBAGxC,sBAAKA,UAAU,gDAAf,UAEE,uBAAOU,KAAK,WAAWmB,aAAW,aAAatE,GAAG,YAAYyC,UAAU,qBACxE,wBAAOE,QAAQ,YAAYF,UAAU,uDAArC,UACE,oBAAIA,UAAU,qBAAd,wBACA,mBAAGA,UAAU,kBAAb,kEACA,sBAAKA,UAAU,cAAf,UACE,mBAAGA,UAAU,uBAAb,SAAoC,kCAAO,2CAAP,iBACpC,mBAAGA,UAAU,kBAAb,SAA+B,kCAAO,6CAAP,2BAIrC,sBAAKA,UAAU,gDAAf,UAEE,uBAAOU,KAAK,WAAWmB,aAAW,gBAAgBtE,GAAG,MAAMyC,UAAU,mBAAmBuD,UAAQ,IAChG,wBAAOrD,QAAQ,MAAMF,UAAU,uDAA/B,UACE,qBAAIA,UAAU,qBAAd,2BAAiD,sBAAMA,UAAU,iBAAhB,uCACjD,mBAAGA,UAAU,kBAAb,kEACA,qBAAKA,UAAU,cAAf,SACE,mBAAGA,UAAU,uBAAb,SAAoC,kCAAO,2CAAP,yBAI1C,sBAAKA,UAAU,gDAAf,UAEE,uBAAOU,KAAK,WAAWmB,aAAW,mBAAmBtE,GAAG,KAAKyC,UAAU,qBACvE,wBAAOE,QAAQ,KAAKF,UAAU,uDAA9B,UACE,oBAAIA,UAAU,qBAAd,8BACA,mBAAGA,UAAU,kBAAb,kHAOZ,qBAAKA,UAAU,wBAAf,SACE,sBAAKA,UAAU,kCAAf,UACE,oBAAIA,UAAU,qBAAd,qCACA,qBAAIA,UAAU,aAAd,UAA2B,sBAAMA,UAAU,WAAhB,eAA3B,qBACA,mBAAGA,UAAU,kBAAb,SAA+B,8GAIrC,qBAAKA,UAAU,iBAAf,SACE,sBAAKA,UAAU,8EAAf,UACE,mBAAGA,UAAU,mCAAmCwB,KAAK,eAArD,iCACA,mBAAGxB,UAAU,gEAAgEwB,KAAK,aAAlF,kDAhKZ,GAAqCjB,IAAMC,WCA9BgD,EAAb,kDACE,WAAY3D,GAAyB,IAAD,8BAClC,cAAMA,IACDE,MAAQ,GAFqB,EADtC,0CAME,WACE,OACE,qCACE,sBAAKC,UAAU,qCAAf,UACE,oBAAIA,UAAU,kBAAd,0BACA,mBAAGA,UAAU,aAAb,4TAEF,qBAAKA,UAAU,0BAAf,SACE,sBAAKA,UAAU,8BAAf,UACE,sBAAKA,UAAU,qBAAf,UACE,sBAAKA,UAAU,qBAAf,UACE,oBAAIA,UAAU,0BAAd,sBACA,mBAAGA,UAAU,aAAb,iRACA,gCACE,oBAAIA,UAAU,+BAAd,8FACA,sBAAKA,UAAU,SAAf,UACE,sBAAKA,UAAU,mBAAf,UACE,uBAAOU,KAAK,QAAQmB,aAAW,cAAc5F,KAAK,WAAWsB,GAAG,cAAcyC,UAAU,wBAAwBsC,gBAAc,IAAG,uBAAOpC,QAAQ,cAAcF,UAAU,wCAAvC,4BAEnI,sBAAKA,UAAU,aAAf,UACE,uBAAOU,KAAK,QAAQmB,aAAW,cAAc5F,KAAK,WAAWsB,GAAG,cAAcyC,UAAU,0BAA0B,uBAAOE,QAAQ,cAAcF,UAAU,wCAAvC,kCAIxH,gCACE,oBAAIA,UAAU,+BAAd,gDACA,sBAAKA,UAAU,gDAAf,UACE,uBAAOU,KAAK,WAAWmB,aAAW,wBAAwBtE,GAAG,mBAAmByC,UAAU,qBAC1F,wBAAOE,QAAQ,mBAAmBF,UAAU,kDAA5C,UACE,oBAAIA,UAAU,qBAAd,mCACA,mBAAGA,UAAU,kBAAb,6IAGJ,sBAAKA,UAAU,gDAAf,UACE,uBAAOU,KAAK,WAAWmB,aAAW,wBAAwBtE,GAAG,gBAAgByC,UAAU,qBACvF,wBAAOE,QAAQ,gBAAgBF,UAAU,kDAAzC,UACE,oBAAIA,UAAU,qBAAd,0CACA,mBAAGA,UAAU,kBAAb,+GAGJ,sBAAKA,UAAU,gDAAf,UACE,uBAAOU,KAAK,WAAWmB,aAAW,wBAAwBtE,GAAG,mBAAmByC,UAAU,qBAC1F,wBAAOE,QAAQ,sBAAsBF,UAAU,kDAA/C,UACE,oBAAIA,UAAU,qBAAd,yBACA,mBAAGA,UAAU,kBAAb,oKAGJ,sBAAKA,UAAU,gDAAf,UACE,uBAAOU,KAAK,WAAWmB,aAAW,wBAAwBtE,GAAG,OAAOyC,UAAU,qBAC9E,wBAAOE,QAAQ,OAAOF,UAAU,kDAAhC,UACE,oBAAIA,UAAU,qBAAd,2BACA,mBAAGA,UAAU,kBAAb,0PAIN,gCACE,oBAAIA,UAAU,+BAAd,8BACA,sBAAKA,UAAU,mBAAf,UACE,sBAAKA,UAAU,2CAAf,UACE,uBAAOU,KAAK,WAAWmB,aAAW,aAAa5F,KAAK,kBAAkBsB,GAAG,aAAayC,UAAU,0BAA0B,uBAAOE,QAAQ,aAAaF,UAAU,wCAAtC,2BAE5H,sBAAKA,UAAU,sCAAf,UACE,uBAAOU,KAAK,WAAWmB,aAAW,eAAe5F,KAAK,kBAAkBsB,GAAG,eAAeyC,UAAU,0BAA0B,uBAAOE,QAAQ,eAAeF,UAAU,wCAAxC,6BAEhI,sBAAKA,UAAU,sCAAf,UACE,uBAAOU,KAAK,WAAWmB,aAAW,cAAc5F,KAAK,kBAAkBsB,GAAG,aAAayC,UAAU,0BAA0B,uBAAOE,QAAQ,aAAaF,UAAU,wCAAtC,4BAE7H,sBAAKA,UAAU,sCAAf,UACE,uBAAOU,KAAK,WAAWmB,aAAW,WAAW5F,KAAK,kBAAkBsB,GAAG,WAAWyC,UAAU,0BAA0B,uBAAOE,QAAQ,WAAWF,UAAU,wCAApC,yBAExH,sBAAKA,UAAU,sCAAf,UACE,uBAAOU,KAAK,WAAWmB,aAAW,OAAO5F,KAAK,kBAAkBsB,GAAG,OAAOyC,UAAU,0BAA0B,uBAAOE,QAAQ,OAAOF,UAAU,wCAAhC,qBAEhH,gCACE,uBAAOU,KAAK,WAAWmB,aAAW,cAAc5F,KAAK,kBAAkBsB,GAAG,cAAcyC,UAAU,0BAA0B,uBAAOE,QAAQ,cAAcF,UAAU,wCAAvC,qCAKpI,sBAAKA,UAAU,qBAAf,UACE,oBAAIA,UAAU,+BAAd,0BACA,mBAAGA,UAAU,aAAb,6cACA,gCACE,oBAAIA,UAAU,+BAAd,gHACA,sBAAKA,UAAU,SAAf,UACE,sBAAKA,UAAU,iCAAf,UACE,uBAAOU,KAAK,QAAQmB,aAAW,cAAc5F,KAAK,eAAesB,GAAG,cAAcyC,UAAU,wBAAwBsC,gBAAc,IAAG,uBAAOpC,QAAQ,cAAcF,UAAU,wCAAvC,4BAEvI,sBAAKA,UAAU,4BAAf,UACE,uBAAOU,KAAK,QAAQmB,aAAW,cAAc5F,KAAK,eAAesB,GAAG,cAAcyC,UAAU,0BAA0B,uBAAOE,QAAQ,cAAcF,UAAU,wCAAvC,kCAI5H,gCACE,oBAAIA,UAAU,+BAAd,gDACA,sBAAKA,UAAU,gDAAf,UACE,uBAAOU,KAAK,WAAWmB,aAAW,mBAAmBtE,GAAG,mBAAmByC,UAAU,qBACrF,wBAAOE,QAAQ,mBAAmBF,UAAU,kDAA5C,UACE,oBAAIA,UAAU,qBAAd,8BACA,mBAAGA,UAAU,kBAAb,mFAGJ,sBAAKA,UAAU,gDAAf,UACE,uBAAOU,KAAK,WAAWmB,aAAW,oBAAoBtE,GAAG,aAAayC,UAAU,qBAChF,wBAAOE,QAAQ,aAAaF,UAAU,kDAAtC,UACE,oBAAIA,UAAU,qBAAd,+BACA,mBAAGA,UAAU,kBAAb,+DAGJ,sBAAKA,UAAU,gDAAf,UACE,uBAAOU,KAAK,WAAWmB,aAAW,wBAAwBtE,GAAG,UAAUyC,UAAU,qBACjF,wBAAOE,QAAQ,UAAUF,UAAU,kDAAnC,UACE,oBAAIA,UAAU,qBAAd,qCACA,mBAAGA,UAAU,kBAAb,+JAGJ,sBAAKA,UAAU,gDAAf,UACE,uBAAOU,KAAK,WAAWmB,aAAW,yBAAyBtE,GAAG,cAAcyC,UAAU,qBACtF,wBAAOE,QAAQ,cAAcF,UAAU,kDAAvC,UACE,oBAAIA,UAAU,qBAAd,oCACA,mBAAGA,UAAU,kBAAb,sHAIN,gCACE,oBAAIA,UAAU,+BAAd,8BACA,sBAAKA,UAAU,mBAAf,UACE,sBAAKA,UAAU,2CAAf,UACE,uBAAOU,KAAK,WAAWmB,aAAW,WAAW5F,KAAK,sBAAsBsB,GAAG,WAAWyC,UAAU,0BAA0B,uBAAOE,QAAQ,WAAWF,UAAU,wCAApC,yBAE5H,sBAAKA,UAAU,sCAAf,UACE,uBAAOU,KAAK,WAAWmB,aAAW,aAAa5F,KAAK,sBAAsBsB,GAAG,aAAayC,UAAU,0BAA0B,uBAAOE,QAAQ,aAAaF,UAAU,wCAAtC,2BAEhI,sBAAKA,UAAU,sCAAf,UACE,uBAAOU,KAAK,WAAWmB,aAAW,YAAY5F,KAAK,sBAAsBsB,GAAG,YAAYyC,UAAU,0BAA0B,uBAAOE,QAAQ,YAAYF,UAAU,wCAArC,0BAE9H,sBAAKA,UAAU,sCAAf,UACE,uBAAOU,KAAK,WAAWmB,aAAW,SAAS5F,KAAK,sBAAsBsB,GAAG,SAASyC,UAAU,0BAA0B,uBAAOE,QAAQ,SAASF,UAAU,wCAAlC,uBAExH,sBAAKA,UAAU,sCAAf,UACE,uBAAOU,KAAK,WAAWmB,aAAW,aAAa5F,KAAK,sBAAsBsB,GAAG,aAAayC,UAAU,0BAA0B,uBAAOE,QAAQ,aAAaF,UAAU,wCAAtC,2BAEhI,sBAAKA,UAAU,sCAAf,UACE,uBAAOU,KAAK,WAAWmB,aAAW,eAAe5F,KAAK,sBAAsBsB,GAAG,eAAeyC,UAAU,0BAA0B,uBAAOE,QAAQ,eAAeF,UAAU,wCAAxC,6BAEpI,gCACE,uBAAOU,KAAK,WAAWmB,aAAW,YAAY5F,KAAK,sBAAsBsB,GAAG,YAAYyC,UAAU,0BAA0B,uBAAOE,QAAQ,YAAYF,UAAU,wCAArC,mCAKpI,sBAAKA,UAAU,qBAAf,UACE,oBAAIA,UAAU,+BAAd,2BACA,mBAAGA,UAAU,aAAb,0cACA,gCACE,oBAAIA,UAAU,+BAAd,yGACA,sBAAKA,UAAU,SAAf,UACE,sBAAKA,UAAU,iCAAf,UACE,uBAAOU,KAAK,QAAQmB,aAAW,WAAW5F,KAAK,eAAesB,GAAG,WAAWyC,UAAU,wBAAwBsC,gBAAc,IAAG,uBAAOpC,QAAQ,WAAWF,UAAU,wCAApC,yBAEjI,sBAAKA,UAAU,4BAAf,UACE,uBAAOU,KAAK,QAAQmB,aAAW,UAAU5F,KAAK,eAAesB,GAAG,UAAUyC,UAAU,0BAA0B,uBAAOE,QAAQ,UAAUF,UAAU,wCAAnC,8BAIpH,gCACE,oBAAIA,UAAU,+BAAd,gDACA,sBAAKA,UAAU,gDAAf,UACE,uBAAOU,KAAK,WAAWmB,aAAW,mBAAmBtE,GAAG,UAAUyC,UAAU,qBAC5E,wBAAOE,QAAQ,UAAUF,UAAU,kDAAnC,UACE,oBAAIA,UAAU,qBAAd,qBACA,mBAAGA,UAAU,kBAAb,2SAGJ,sBAAKA,UAAU,gDAAf,UACE,uBAAOU,KAAK,WAAWmB,aAAW,gBAAgBtE,GAAG,gBAAgByC,UAAU,qBAC/E,wBAAOE,QAAQ,gBAAgBF,UAAU,kDAAzC,UACE,oBAAIA,UAAU,qBAAd,2BACA,mBAAGA,UAAU,kBAAb,+JAGJ,sBAAKA,UAAU,gDAAf,UACE,uBAAOU,KAAK,WAAWmB,aAAW,aAAatE,GAAG,aAAayC,UAAU,qBACzE,wBAAOE,QAAQ,aAAaF,UAAU,kDAAtC,UACE,oBAAIA,UAAU,qBAAd,wBACA,mBAAGA,UAAU,kBAAb,4SAGJ,sBAAKA,UAAU,gDAAf,UACE,uBAAOU,KAAK,WAAWmB,aAAW,yBAAyBtE,GAAG,cAAcyC,UAAU,qBACtF,wBAAOE,QAAQ,cAAcF,UAAU,kDAAvC,UACE,oBAAIA,UAAU,qBAAd,oCACA,mBAAGA,UAAU,kBAAb,sHAIN,gCACE,oBAAIA,UAAU,+BAAd,8BACA,sBAAKA,UAAU,mBAAf,UACE,sBAAKA,UAAU,2CAAf,UACE,uBAAOU,KAAK,WAAWmB,aAAW,WAAW5F,KAAK,sBAAsBsB,GAAG,WAAWyC,UAAU,0BAA0B,uBAAOE,QAAQ,WAAWF,UAAU,wCAApC,yBAE5H,sBAAKA,UAAU,sCAAf,UACE,uBAAOU,KAAK,WAAWmB,aAAW,aAAa5F,KAAK,sBAAsBsB,GAAG,aAAayC,UAAU,0BAA0B,uBAAOE,QAAQ,aAAaF,UAAU,wCAAtC,2BAEhI,sBAAKA,UAAU,sCAAf,UACE,uBAAOU,KAAK,WAAWmB,aAAW,YAAY5F,KAAK,sBAAsBsB,GAAG,YAAYyC,UAAU,0BAA0B,uBAAOE,QAAQ,YAAYF,UAAU,wCAArC,0BAE9H,sBAAKA,UAAU,sCAAf,UACE,uBAAOU,KAAK,WAAWmB,aAAW,SAAS5F,KAAK,sBAAsBsB,GAAG,SAASyC,UAAU,0BAA0B,uBAAOE,QAAQ,SAASF,UAAU,wCAAlC,uBAExH,sBAAKA,UAAU,sCAAf,UACE,uBAAOU,KAAK,WAAWmB,aAAW,aAAa5F,KAAK,sBAAsBsB,GAAG,aAAayC,UAAU,0BAA0B,uBAAOE,QAAQ,aAAaF,UAAU,wCAAtC,2BAEhI,sBAAKA,UAAU,sCAAf,UACE,uBAAOU,KAAK,WAAWmB,aAAW,eAAe5F,KAAK,sBAAsBsB,GAAG,eAAeyC,UAAU,0BAA0B,uBAAOE,QAAQ,eAAeF,UAAU,wCAAxC,6BAEpI,gCACE,uBAAOU,KAAK,WAAWmB,aAAW,YAAY5F,KAAK,sBAAsBsB,GAAG,YAAYyC,UAAU,0BAA0B,uBAAOE,QAAQ,YAAYF,UAAU,wCAArC,mCAKpI,sBAAKA,UAAU,OAAf,UACE,oBAAIA,UAAU,+BAAd,yBACA,mBAAGA,UAAU,aAAb,6cACA,gCACE,oBAAIA,UAAU,+BAAd,gHACA,sBAAKA,UAAU,SAAf,UACE,sBAAKA,UAAU,iCAAf,UACE,uBAAOU,KAAK,QAAQmB,aAAW,cAAc5F,KAAK,eAAesB,GAAG,cAAcyC,UAAU,wBAAwBsC,gBAAc,IAAG,uBAAOpC,QAAQ,cAAcF,UAAU,wCAAvC,4BAEvI,sBAAKA,UAAU,4BAAf,UACE,uBAAOU,KAAK,QAAQmB,aAAW,cAAc5F,KAAK,eAAesB,GAAG,cAAcyC,UAAU,0BAA0B,uBAAOE,QAAQ,cAAcF,UAAU,wCAAvC,kCAI5H,gCACE,oBAAIA,UAAU,+BAAd,gDACA,sBAAKA,UAAU,gDAAf,UACE,uBAAOU,KAAK,WAAWmB,aAAW,mBAAmBtE,GAAG,mBAAmByC,UAAU,qBACrF,wBAAOE,QAAQ,mBAAmBF,UAAU,kDAA5C,UACE,oBAAIA,UAAU,qBAAd,8BACA,mBAAGA,UAAU,kBAAb,mFAGJ,sBAAKA,UAAU,gDAAf,UACE,uBAAOU,KAAK,WAAWmB,aAAW,oBAAoBtE,GAAG,aAAayC,UAAU,qBAChF,wBAAOE,QAAQ,aAAaF,UAAU,kDAAtC,UACE,oBAAIA,UAAU,qBAAd,+BACA,mBAAGA,UAAU,kBAAb,+DAGJ,sBAAKA,UAAU,gDAAf,UACE,uBAAOU,KAAK,WAAWmB,aAAW,wBAAwBtE,GAAG,UAAUyC,UAAU,qBACjF,wBAAOE,QAAQ,UAAUF,UAAU,kDAAnC,UACE,oBAAIA,UAAU,qBAAd,qCACA,mBAAGA,UAAU,kBAAb,+JAGJ,sBAAKA,UAAU,gDAAf,UACE,uBAAOU,KAAK,WAAWmB,aAAW,yBAAyBtE,GAAG,cAAcyC,UAAU,qBACtF,wBAAOE,QAAQ,cAAcF,UAAU,kDAAvC,UACE,oBAAIA,UAAU,qBAAd,oCACA,mBAAGA,UAAU,kBAAb,sHAIN,gCACE,oBAAIA,UAAU,+BAAd,8BACA,sBAAKA,UAAU,mBAAf,UACE,sBAAKA,UAAU,2CAAf,UACE,uBAAOU,KAAK,WAAWmB,aAAW,WAAW5F,KAAK,sBAAsBsB,GAAG,WAAWyC,UAAU,0BAA0B,uBAAOE,QAAQ,WAAWF,UAAU,wCAApC,yBAE5H,sBAAKA,UAAU,sCAAf,UACE,uBAAOU,KAAK,WAAWmB,aAAW,aAAa5F,KAAK,sBAAsBsB,GAAG,aAAayC,UAAU,0BAA0B,uBAAOE,QAAQ,aAAaF,UAAU,wCAAtC,2BAEhI,sBAAKA,UAAU,sCAAf,UACE,uBAAOU,KAAK,WAAWmB,aAAW,YAAY5F,KAAK,sBAAsBsB,GAAG,YAAYyC,UAAU,0BAA0B,uBAAOE,QAAQ,YAAYF,UAAU,wCAArC,0BAE9H,sBAAKA,UAAU,sCAAf,UACE,uBAAOU,KAAK,WAAWmB,aAAW,SAAS5F,KAAK,sBAAsBsB,GAAG,SAASyC,UAAU,0BAA0B,uBAAOE,QAAQ,SAASF,UAAU,wCAAlC,uBAExH,sBAAKA,UAAU,sCAAf,UACE,uBAAOU,KAAK,WAAWmB,aAAW,aAAa5F,KAAK,sBAAsBsB,GAAG,aAAayC,UAAU,0BAA0B,uBAAOE,QAAQ,aAAaF,UAAU,wCAAtC,2BAEhI,sBAAKA,UAAU,sCAAf,UACE,uBAAOU,KAAK,WAAWmB,aAAW,eAAe5F,KAAK,sBAAsBsB,GAAG,eAAeyC,UAAU,0BAA0B,uBAAOE,QAAQ,eAAeF,UAAU,wCAAxC,6BAEpI,gCACE,uBAAOU,KAAK,WAAWmB,aAAW,YAAY5F,KAAK,sBAAsBsB,GAAG,YAAYyC,UAAU,0BAA0B,uBAAOE,QAAQ,YAAYF,UAAU,wCAArC,sCAMtI,qBAAKA,UAAU,gBAAf,SACE,sBAAKA,UAAU,kCAAf,UACE,oBAAIA,UAAU,qBAAd,qCACA,qBAAIA,UAAU,aAAd,UAA2B,sBAAMA,UAAU,WAAhB,eAA3B,qBACA,mBAAGA,UAAU,kBAAb,SAA+B,gHAKvC,qBAAKA,UAAU,iBAAf,SACE,sBAAKA,UAAU,8EAAf,UACE,mBAAGA,UAAU,mCAAmCwB,KAAK,mBAArD,sCACA,mBAAGxB,UAAU,gEAAgEwB,KAAK,SAAlF,2CA1TZ,GAA+BjB,IAAMC,WCAxBiD,EAAb,kDACE,WAAY5D,GAAqB,IAAD,8BAC9B,cAAMA,IACDE,MAAQ,GAFiB,EADlC,0CAME,WACE,OACE,qCACE,sBAAKC,UAAU,qCAAf,UACE,oBAAIA,UAAU,kBAAd,mBACA,mBAAGA,UAAU,aAAb,iKAEF,qBAAKA,UAAU,0BAAf,SACE,sBAAKA,UAAU,8BAAf,UACE,qBAAKA,UAAU,wBAAf,SACE,gCACE,oBAAIA,UAAU,0BAAd,uBACA,sBAAKA,UAAU,sBAAf,UACE,qBAAKA,UAAU,MAAf,SACE,sBAAKA,UAAU,MAAf,UACE,uBAAOE,QAAQ,YAAYF,UAAU,gCAArC,uBACA,qBAAKA,UAAU,eAAf,SACE,uBAAOU,KAAK,OAAOV,UAAU,oCAAoCzC,GAAG,qBAI1E,sBAAKyC,UAAU,MAAf,UACE,sBAAKA,UAAU,WAAf,UACE,uBAAOE,QAAQ,UAAUF,UAAU,gCAAnC,mBACA,yBAAQA,UAAU,8BAA8BzC,GAAG,QAAnD,UACE,wBAAQgG,UAAQ,EAAhB,6BACA,0CACA,gDACA,kDACA,6CACA,0DACA,0CACA,4CACA,+CACA,sDAGJ,sBAAKvD,UAAU,WAAf,UACE,uBAAOE,QAAQ,UAAUF,UAAU,gCAAnC,2BACA,yBAAQA,UAAU,8BAA8BzC,GAAG,QAAnD,UACE,wBAAQgG,UAAQ,EAAhB,wBACA,8CACA,+CACA,wDAGJ,sBAAKvD,UAAU,WAAf,UACE,uBAAOE,QAAQ,UAAUF,UAAU,gCAAnC,uBACA,yBAAQA,UAAU,8BAA8BzC,GAAG,QAAnD,UACE,wBAAQgG,UAAQ,EAAhB,8BACA,wDACA,wDACA,iEAIN,qBAAKvD,UAAU,WAAf,SACE,sBAAKA,UAAU,MAAf,UACE,uBAAOE,QAAQ,UAAUF,UAAU,gCAAnC,oBACA,yBAAQA,UAAU,8BAA8BzC,GAAG,QAAnD,UACE,wBAAQgG,UAAQ,EAAhB,2BACA,iLACA,mJACA,iKACA,sGACA,sIAKR,8BACE,yBAAQ7C,KAAK,SAASV,UAAU,eAAhC,UACE,qBAAKa,IAAI,uBAAuBD,IAAI,KADtC,gCAON,qBAAKZ,UAAU,gBAAf,SACE,sBAAKA,UAAU,uCAAf,UACE,sBAAKA,UAAU,qBAAf,UACE,oBAAIA,UAAU,qBAAd,0BACA,qBAAIA,UAAU,aAAd,UAA2B,sBAAMA,UAAU,WAAhB,eAA3B,oBACA,mBAAGA,UAAU,kBAAb,SAA+B,0EAEjC,sBAAKA,UAAU,OAAf,UACE,oBAAIA,UAAU,qBAAd,qCACA,qBAAIA,UAAU,aAAd,UAA2B,sBAAMA,UAAU,WAAhB,eAA3B,qBACA,mBAAGA,UAAU,kBAAb,SAA+B,mHAMzC,qBAAKA,UAAU,iBAAf,SACE,sBAAKA,UAAU,8EAAf,UACE,mBAAGA,UAAU,mCAAmCwB,KAAK,aAArD,kCACA,mBAAGxB,UAAU,gEAAgEwB,KAAK,UAAlF,4CAvGZ,GAA2BjB,IAAMC,WCApBkD,EAAb,kDACE,WAAY7D,GAAsB,IAAD,8BAC/B,cAAMA,IACDE,MAAQ,GAFkB,EADnC,0CAME,WACE,OACE,qCACE,sBAAKC,UAAU,qCAAf,UACE,oBAAIA,UAAU,kBAAd,oBACA,mBAAGA,UAAU,aAAb,yEAEF,qBAAKA,UAAU,0BAAf,SACE,sBAAKA,UAAU,8BAAf,UACE,qBAAKA,UAAU,qBAAf,SACE,gCACE,oBAAIA,UAAU,0BAAd,+BACA,qBAAKA,UAAU,MAAf,SACE,sBAAKA,UAAU,MAAf,UACE,uBAAOE,QAAQ,UAAUF,UAAU,gCAAnC,6BACA,yBAAQA,UAAU,6BAA6BzC,GAAG,QAAlD,UACE,wBAAQgG,UAAQ,EAAhB,+BACA,4CACA,4EACA,uEACA,4DACA,6DACA,sEACA,iEACA,iFACA,8DACA,iFACA,4DACA,iEACA,0FACA,gEACA,0DACA,kEACA,iEACA,4EACA,+DACA,2FACA,2EACA,iFACA,mEACA,iEACA,2DACA,oEACA,4EACA,2FACA,uDACA,0DACA,8DACA,2DACA,uDACA,kEACA,mEACA,sEACA,gEACA,yEACA,2DACA,4DACA,yDACA,iEACA,+DACA,uDACA,yEACA,4DACA,uDACA,oDACA,0DACA,0GACA,gFACA,gEACA,0DACA,qFACA,kEACA,gFACA,8EACA,yEACA,4EACA,0DACA,oEACA,gEACA,wEACA,yDACA,4DACA,4DACA,uEACA,gEACA,+EACA,2DACA,wDACA,oEACA,4EACA,wDACA,2EACA,uDACA,iFACA,qDACA,wEACA,sEACA,wEACA,2DACA,mEACA,yEACA,sDACA,0DACA,oDACA,gEACA,sEACA,oEACA,oDACA,wEACA,oEACA,mEACA,uFACA,mEAIN,sBAAKvD,UAAU,OAAf,UACE,uBAAOE,QAAQ,oBAAoBF,UAAU,0BAA7C,yBACA,0BAAUzC,GAAG,oBAAoByC,UAAU,wBAE7C,sBAAKA,UAAU,OAAf,UACE,uBAAOE,QAAQ,aAAaF,UAAU,0BAAtC,wBACA,0BAAUzC,GAAG,aAAayC,UAAU,6BAI1C,qBAAKA,UAAU,wBAAf,SACE,sBAAKA,UAAU,kCAAf,UACE,sBAAKA,UAAU,qBAAf,UACE,oBAAIA,UAAU,qBAAd,0BACA,qBAAIA,UAAU,aAAd,UAA2B,sBAAMA,UAAU,WAAhB,eAA3B,oBACA,mBAAGA,UAAU,kBAAb,SAA+B,0EAEjC,sBAAKA,UAAU,OAAf,UACE,oBAAIA,UAAU,qBAAd,qCACA,qBAAIA,UAAU,aAAd,UAA2B,sBAAMA,UAAU,WAAhB,eAA3B,qBACA,mBAAGA,UAAU,kBAAb,SAA+B,mHAMzC,qBAAKA,UAAU,iBAAf,SACE,sBAAKA,UAAU,8EAAf,UACE,mBAAGA,UAAU,mCAAmCwB,KAAK,SAArD,2BACA,mBAAGxB,UAAU,gEAAgEwB,KAAK,YAAlF,iDAvJZ,GAA4BjB,IAAMC,WCArBmD,EAAb,kDACE,WAAY9D,GAAwB,IAAD,8BACjC,cAAMA,IACDE,MAAQ,GAFoB,EADrC,0CAME,WACE,OACE,qCACE,sBAAKC,UAAU,qCAAf,UACE,oBAAIA,UAAU,kBAAd,+BACA,mBAAGA,UAAU,aAAb,4EAEF,qBAAKA,UAAU,0BAAf,SACE,sBAAKA,UAAU,8BAAf,UACE,sBAAKA,UAAU,gBAAf,UACE,sBAAKA,UAAU,yBAAf,UACE,oBAAIA,UAAU,+BAAd,sCACA,sBAAKA,UAAU,YAAf,UACE,uBAAOE,QAAQ,kBAAkBF,UAAU,0BAA3C,6BACA,0BAAUzC,GAAG,kBAAkByC,UAAU,mCAE3C,sBAAKA,UAAU,iBAAf,UACE,uBAAOE,QAAQ,kBAAkBF,UAAU,0BAA3C,gCACA,0BAAUzC,GAAG,kBAAkByC,UAAU,sCAG7C,sBAAKA,UAAU,OAAf,UACE,oBAAIA,UAAU,0BAAd,uBACA,sBAAKA,UAAU,sBAAf,UACE,qBAAKA,UAAU,MAAf,SACE,sBAAKA,UAAU,MAAf,UACE,uBAAOE,QAAQ,YAAYF,UAAU,gCAArC,uBACA,qBAAKA,UAAU,eAAf,SACE,uBAAOU,KAAK,OAAOV,UAAU,oCAAoCzC,GAAG,qBAI1E,qBAAKyC,UAAU,MAAf,SACE,sBAAKA,UAAU,MAAf,UACE,uBAAOE,QAAQ,kBAAkBF,UAAU,0BAA3C,yBACA,0BAAUzC,GAAG,kBAAkByC,UAAU,wCAI/C,8BACE,yBAAQU,KAAK,SAASV,UAAU,eAAhC,UACE,qBAAKa,IAAI,uBAAuBD,IAAI,KADtC,iCAON,qBAAKZ,UAAU,wBAAf,SACE,sBAAKA,UAAU,kCAAf,UACE,sBAAKA,UAAU,qBAAf,UACE,oBAAIA,UAAU,qBAAd,0BACA,qBAAIA,UAAU,aAAd,UAA2B,sBAAMA,UAAU,WAAhB,eAA3B,oBACA,mBAAGA,UAAU,kBAAb,SAA+B,0EAEjC,sBAAKA,UAAU,OAAf,UACE,oBAAIA,UAAU,qBAAd,qCACA,qBAAIA,UAAU,aAAd,UAA2B,sBAAMA,UAAU,WAAhB,eAA3B,qBACA,mBAAGA,UAAU,kBAAb,SAA+B,mHAMzC,qBAAKA,UAAU,iBAAf,SACE,sBAAKA,UAAU,8EAAf,UACE,mBAAGA,UAAU,mCAAmCwB,KAAK,UAArD,4BACA,mBAAGxB,UAAU,gEAAgEwB,KAAK,OAAlF,0CAxEZ,GAA8BjB,IAAMC,WCGvBoD,EAAb,kDACE,WAAY/D,GAAuC,IAAD,8BAChD,cAAMA,IAEDE,MAAQ,CAAE8D,aAAa,GAHoB,EADpD,0CAOE,WAAiB,IAAD,OACd,OAAO,sBAAK7D,UAAU,iBAAf,UACP,oBAAIA,UAAU,mBAAd,SACE,yBAAQA,UAAU,6BAA6BU,KAAK,SAASoD,iBAAe,WAAWC,gBAAc,QACnGC,QAAU,WAAQ,EAAK1D,SAAS,CAAEuD,aAAc,EAAK9D,MAAM8D,eAD7D,UAEE,sBAAM7D,UAAU,eAAhB,SAAgCtJ,KAAKmJ,MAAMoE,cAF7C,KAEmEvN,KAAKmJ,MAAMqE,SAF9E,SAKF,qBAAKlE,UAAW,+BAAiCtJ,KAAKqJ,MAAM8D,YAAc,GAAK,SAA/E,SACE,qBAAK7D,UAAU,iBAAf,SAAiCtJ,KAAKmJ,MAAMsE,uBAhBlD,GAA6C5D,IAAMC,WCKtC4D,EAAb,kDAIE,WAAYvE,GAA8B,IAAD,uBACvC,cAAMA,IAJAwE,wBAGiC,IAFjCtB,mBAEiC,EAEvC,IAAMhI,EAASjD,EAAMwM,YACrB,EAAKvE,MAAQ,CAAE3F,QAAoB,OAAXW,EAAkBA,EAAS,GAAIV,QAAS,IAEhE,EAAKgK,mBAAqB,GAC1B,IAAMpD,EAAe7J,EAAY8J,cAAc,gBAC3B,MAAhBD,GACFA,EAAatF,SAAQ,SAAChF,GACR,MAARA,GACF,EAAK0N,mBAAmBlN,KAAKR,MAKnC,EAAKoM,cAAgB,GACrB,IAAMI,EAAkB/L,EAAY8J,cAAc,mBAhBX,OAiBhB,MAAnBiC,GACFA,EAAgBxH,SAAQ,SAAChF,GACX,MAARA,GAAgBA,EAAK4F,WAAajG,EAAqBgI,aACzD,EAAKyE,cAAc5L,KAAKR,MApBS,EAJ3C,0CA8BE,WAAiB,IAAD,OACR4N,EAAWzL,OAAO0G,SAASgF,OAAS,OAAS9N,KAAKqJ,MAAM3F,QAE1D4G,EAAc,gCACdyD,EAAmBrN,EAAYkE,QAAQ,mBAAoB,IAAI/E,EAAe,KACzD,OAArBkO,GAA6BA,EAAiBhO,MAAM8D,SACtDyG,EAAcyD,EAAiBhO,OAGjC,IATc,EASViO,EAAW,GACXC,EAAY,GAVF,cAWcjO,KAAK2N,oBAXnB,IAWd,2BAAqD,CAAC,IAA3ChD,EAA0C,QAC7ChG,EAAajE,EAAYkE,QAAQ+F,EAAcpJ,IAAK,IAAI1B,EAAe,KAC7E,GAAmB,OAAf8E,EAAqB,CACvB,IAAI7E,EAAuB6E,EAAW5E,MACtC,GAAI4K,EAAc9E,WAAajG,EAAqB2G,OAElDzG,EADmB6K,EACAuD,iBAAiBpO,GAGxB,OAAVA,GAAkBA,EAAM+D,OAAS,IACT,iBAAtB8G,EAAcpJ,MAChByM,EAAWlO,IAG6B,IAAtC6K,EAAcwD,OAAO,cACvBF,EAAUxN,KAAK,sBAAK6I,UAAU,iBAAf,UACb,oBAAIA,UAAU,qBAAd,SAAoCqB,EAAc5E,OAClD,mBAAGuD,UAAU,aAAb,SAA2BxJ,WA5BvB,8BAqCd,IADA,IAAIsO,EAAc,GACTzH,EAAI,EAAGA,EAAIsH,EAAUpK,OAAQ8C,GAAK,EACzCyH,EAAY3N,KACV,sBAA6B6I,UAAU,WAAvC,UACG2E,EAAUtH,GACTA,EAAI,EAAKsH,EAAUpK,OAASoK,EAAUtH,EAAI,GAAK,GAC/CA,EAAI,EAAKsH,EAAUpK,OAASoK,EAAUtH,EAAI,GAAK,GAC/CA,EAAI,EAAKsH,EAAUpK,OAASoK,EAAUtH,EAAI,GAAK,KAJzC,cAAgBA,IAQ9B,IA/Cc,EA+CV0H,EAAa,GA/CH,cAgDYrO,KAAKqM,eAhDjB,IAgDd,2BAA8C,CAAC,IAAD,EACxC9D,EADwC,QACnBgD,mBADmB,cAExBhD,GAFwB,IAE5C,2BAA4B,CAAC,IAAlBE,EAAiB,QAAC4F,EAAW5N,KAAKgI,EAAM1C,OAFP,gCAhDhC,8BAqDd,IArDc,EAqDVuI,EAAgB,GArDN,cAsDYtO,KAAKqM,eAtDjB,IAsDd,2BAA8C,CAAC,IAAD,EAAnCK,EAAmC,QACxC1E,EAAY0E,EAAY7E,sBADgB,cAEtBG,GAFsB,IAE5C,2BAAiC,CAAC,IAAvBK,EAAsB,QAC/BiG,EAAc7N,KAAK,cAAC,EAAD,CAAiE+M,SAAUd,EAAY3G,KAAMwH,YAAalF,EAAQtC,KAAM0H,YAAapF,EAAQrC,aAA/G,oBAAsBqC,EAAQ9G,OAHrC,gCAtDhC,8BA6Dd,OACE,qCACE,sBAAK+H,UAAU,oCAAf,UACE,uBAAOA,UAAU,mCAAjB,iCACA,uBACA,wBAAOA,UAAU,mCAAjB,gCAAuE,mBAAGwB,KAAM+C,EAAT,SAAoBA,OAC3F,sBAAKvE,UAAU,MAAf,UACE,qBAAKA,UAAU,WAAf,SACE,sBAAKA,UAAU,mBAAf,UACE,uBAAOA,UAAU,8BAA8BzC,GAAG,eAAlD,2BACA,uBAAOmD,KAAK,OAAOV,UAAU,eAAeiF,YAAY,GAAGC,mBAAiB,eAAe1O,MAAOE,KAAKqJ,MAAM3F,QAAS+F,SAAU,SAACvJ,GAC/H,EAAK0J,SAAS,CAAElG,QAASxD,EAAEwJ,OAAO5J,gBAIxC,qBAAKwJ,UAAU,WAAf,SACE,sBAAKA,UAAU,mBAAf,UACE,uBAAOA,UAAU,8BAA8BzC,GAAG,eAAlD,sBACA,uBAAOmD,KAAK,OAAOV,UAAU,eAAeiF,YAAY,GAAGC,mBAAiB,eAAe1O,MAAOE,KAAKqJ,MAAM1F,QAAS8F,SAAU,SAACvJ,GAC/H,EAAK0J,SAAS,CAAEjG,QAASzD,EAAEwJ,OAAO5J,gBAIxC,qBAAKwJ,UAAU,WAAf,SACE,wBAAQA,UAAU,0BAA0BgE,QAAS,WAAQ,EAAKmB,cAAlE,oBAEF,qBAAKnF,UAAU,WAAf,SACE,wBAAQA,UAAU,iCAAiCgE,QAAS,WAAQ,EAAKoB,cAAzE,uBAGJ,sBAAKpF,UAAU,MAAf,UACE,qBAAKA,UAAU,WAAf,SACE,sBAAKA,UAAU,mBAAf,UACE,wBAAQA,UAAU,oBAAoBU,KAAK,SAASnD,GAAG,gBAAvD,yBACA,uBAAOmD,KAAK,OAAOV,UAAU,eAAeiF,YAAY,GAAGpD,aAAW,iCAAiCqD,mBAAiB,uBAG5H,qBAAKlF,UAAU,WAAf,SACE,wBAAQA,UAAU,0BAAlB,oBAEF,qBAAKA,UAAU,WAAf,SACE,wBAAQA,UAAU,iCAAlB,0BAIN,qBAAKA,UAAU,sBAAf,SACE,sBAAKA,UAAU,MAAf,UACE,sBAAKA,UAAU,WAAf,UACE,qBAAKa,IAAKG,EAAaJ,IAAI,GAAGZ,UAAU,UACxC,sBAAKA,UAAU,uCAAf,UACE,oBAAIA,UAAU,aAAd,mBACA,sBAAKA,UAAU,OAAf,UACE,oBAAIA,UAAU,qBAAd,yBACA,mBAAGA,UAAU,aAAb,2FAIN,sBAAKA,UAAU,WAAf,UACE,sBAAKA,UAAU,uCAAf,UACE,oBAAIA,UAAU,qBAAd,SAAoC0E,IACpC,wBAAQ1E,UAAU,oBAAlB,qBAEF,mBAAGA,UAAU,kBAAb,6bAIA,qBAAIA,UAAU,eAAezC,GAAG,QAAQ8H,KAAK,UAA7C,UACE,oBAAIrF,UAAU,WAAWqF,KAAK,eAA9B,SACE,wBAAQrF,UAAU,kBAAkBzC,GAAG,eAAeuG,iBAAe,MAAMwB,iBAAe,YAAY5E,KAAK,SAAS2E,KAAK,MAAME,gBAAc,WAAWC,gBAAc,OAAtK,wBAEF,oBAAIxF,UAAU,WAAWqF,KAAK,eAA9B,SACE,wBAAQrF,UAAU,WAAWzC,GAAG,kBAAkBuG,iBAAe,MAAMwB,iBAAe,eAAe5E,KAAK,SAAS2E,KAAK,MAAME,gBAAc,cAAcC,gBAAc,QAAxK,oCAEF,oBAAIxF,UAAU,WAAWqF,KAAK,eAA9B,SACE,wBAAQrF,UAAU,WAAWzC,GAAG,aAAauG,iBAAe,MAAMwB,iBAAe,UAAU5E,KAAK,SAAS2E,KAAK,MAAME,gBAAc,SAASC,gBAAc,QAAzJ,kCAIJ,sBAAKxF,UAAU,cAAf,UACE,sBAAKA,UAAU,kBAAkBzC,GAAG,WAAW8H,KAAK,WAAW3D,kBAAgB,WAA/E,UACE,sBAAK1B,UAAU,OAAf,UACE,qBAAKA,UAAU,MAAf,SACE,oBAAIA,UAAU,qBAAd,iCAED8E,KAEH,sBAAK9E,UAAU,OAAf,UACE,qBAAKA,UAAU,MAAf,SACE,oBAAIA,UAAU,qBAAd,gCAEF,qBAAKA,UAAU,wBAAf,SAEI+E,EAAW1E,KAAI,SAACnC,EAAMyE,GACpB,OAAO,mBAAkC3C,UAAU,kBAA5C,SAA+D9B,GAAvD,iBAAmByE,WAK1C,sBAAK3C,UAAU,OAAf,UACE,qBAAKA,UAAU,MAAf,SACE,oBAAIA,UAAU,qBAAd,6BAEF,sBAAKA,UAAU,OAAf,UACE,oBAAIA,UAAU,qBAAd,yBACA,mBAAGA,UAAU,aAAb,yHAEF,sBAAKA,UAAU,OAAf,UACE,oBAAIA,UAAU,qBAAd,wBACA,mBAAGA,UAAU,aAAb,uFAIN,sBAAKA,UAAU,WAAWzC,GAAG,cAAc8H,KAAK,WAAW3D,kBAAgB,kBAA3E,UACE,gCACE,qBAAK1B,UAAU,OAAf,SACE,oBAAIA,UAAU,qBAAd,iCAEF,qBAAKA,UAAU,iCAAiCzC,GAAG,wBAAnD,SACGyH,OAGL,gCACE,qBAAKhF,UAAU,OAAf,SACE,oBAAIA,UAAU,qBAAd,+BAEF,sBAAKA,UAAU,iCAAiCzC,GAAG,qBAAnD,UACE,sBAAKyC,UAAU,iBAAf,UACE,oBAAIA,UAAU,mBAAmBzC,GAAG,mBAApC,SACE,yBAAQyC,UAAU,6BAA6BU,KAAK,SAASoD,iBAAe,WAAWwB,iBAAe,yBAAyBvB,gBAAc,QAAQwB,gBAAc,wBAAnK,UACE,sBAAMvF,UAAU,eAAhB,oBADF,mDAIF,qBAAKzC,GAAG,wBAAwByC,UAAU,8BAA8B0B,kBAAgB,mBAAmB+D,iBAAe,sBAA1H,SACE,qBAAKzF,UAAU,iBAAf,+HAGJ,sBAAKA,UAAU,iBAAf,UACE,oBAAIA,UAAU,mBAAmBzC,GAAG,mBAApC,SACE,yBAAQyC,UAAU,6BAA6BU,KAAK,SAASoD,iBAAe,WAAWwB,iBAAe,yBAAyBvB,gBAAc,QAAQwB,gBAAc,wBAAnK,UACE,sBAAMvF,UAAU,eAAhB,qBADF,uDAIF,qBAAKzC,GAAG,wBAAwByC,UAAU,8BAA8B0B,kBAAgB,mBAAmB+D,iBAAe,sBAA1H,SACE,qBAAKzF,UAAU,iBAAf,oKAKR,gCACE,qBAAKA,UAAU,OAAf,SACE,oBAAIA,UAAU,qBAAd,kCAEF,mBAAGA,UAAU,aAAb,SAA0B,sEAE5B,gCACE,qBAAKA,UAAU,OAAf,SACE,oBAAIA,UAAU,qBAAd,gCAEF,mBAAGA,UAAU,aAAb,SAA0B,sEAE5B,gCACE,qBAAKA,UAAU,OAAf,SACE,oBAAIA,UAAU,qBAAd,gCAEF,mBAAGA,UAAU,aAAb,SAA0B,yEAG9B,qBAAKA,UAAU,WAAWzC,GAAG,SAAS8H,KAAK,WAAW3D,kBAAgB,aAAtE,iBACA,qBAAK1B,UAAU,WAAWzC,GAAG,WAAW8H,KAAK,WAAW3D,kBAAgB,eAAxE,iCAnQhB,wBA4QE,SAAkBgE,GAChBhP,KAAKmJ,MAAM8F,sBAAqB,GAAO,iBA7Q3C,wBAgRE,WAA4B,IAAD,OACnBC,EAAclP,KACpBA,KAAKmJ,MAAM8F,sBAAqB,GAAM,WACpC,IAAIzM,EAAW9B,EAAYyO,cAC3BzO,EAAY0O,eAAe,EAAK/F,MAAM3F,QAAS,EAAK2F,MAAM1F,QAASnB,GAAU,SAAC6M,GAC5EH,EAAYtL,WAAWyL,WArR/B,wBA0RE,WACMrP,KAAKqJ,MAAM3F,QAAQG,OAAS,EAC9BhB,QAAQC,IAAI,yBAIdV,OAAO0G,SAASgC,KAAO,OAAS9K,KAAKqJ,MAAM3F,YAhS/C,GAAoCmG,IAAMC,WCuG3BwF,EAlGf,kDACE,WAAYnG,GAAmB,IAAD,8BAC5B,cAAMA,IACDE,MAAQ,CAAEkG,SAAS,EAAOC,YAAa,IAE5C9O,EAAY+O,uBAJgB,EADhC,qDAQE,WACEzP,KAAK0P,UAAS,GACd,IAAMR,EAAclP,KACpBoC,OAAOuN,iBAAiB,cAAc,SAASzP,GAC7CgP,EAAYQ,gBAZlB,oBAgBE,WAAiB,IAAD,OACVE,EAAiB,yBACjB5P,KAAKqJ,MAAMkG,UACbK,EAAiB,qBAAK/I,GAAG,iBAAR,SACf,6BAAI,kDAIR,IAAI2I,EAAc,KAClB,OAAQxP,KAAKqJ,MAAMmG,aACjB,IAAK,cACHA,EAAc,cAAC,EAAD,IACd,MACF,IAAK,kBACHA,EAAc,cAAC,EAAD,IACd,MACF,IAAK,YACHA,EAAc,cAAC,EAAD,IACd,MACF,IAAK,QACHA,EAAc,cAAC,EAAD,IACd,MACF,IAAK,SACHA,EAAc,cAAC,EAAD,IACd,MACF,IAAK,WACHA,EAAc,cAAC,EAAD,IACd,MACF,IAAK,MACHA,EAAc,cAAC,EAAD,CAAgBP,qBAAuB,SAACY,EAAoBC,GAA6B,EAAKb,qBAAqBY,EAAWC,MAC5I,MACF,IAAK,WACL,QACEN,EAAc,cAAC,EAAD,IAIlB,OACE,qCACE,qBAAKlG,UAAU,6BAAf,SACE,sBAAKA,UAAU,kBAAf,UACE,mBAAGA,UAAU,eAAewB,KAAK,SAAjC,sBAGA,sBAAKxB,UAAU,4BAAf,UACE,mBAAGwB,KAAK,SAASxB,UAAU,kBAA3B,+BACA,mBAAGwB,KAAK,OAAOxB,UAAU,aAAzB,oCAILkG,EACAI,OAnET,sBAwEE,WAA8C,IAA9BG,EAA6B,wDACvCR,EAAUvP,KAAKqJ,MAAMkG,QACzB,GAAIQ,EAAY,CACd,IAAM1L,EAASjD,EAAMwM,YACrB,GAAe,OAAXvJ,EAAiB,CACnB,IAAM6K,EAAclP,KACpBU,EAAYsP,oBAAoB3L,GAAQ,SAACgL,GAA2BH,EAAY5K,WAAW+K,MAC3FE,GAAU,GAId,IAAMU,EAAW7N,OAAO0G,SAASoH,KAAKC,MAAM,KAC5CnQ,KAAK4J,SAAS,CAAE2F,QAASA,EAASC,YAAaS,EAASpM,OAAS,EAAIoM,EAAS,GAAK,OApFvF,wBAuFE,SAAkBZ,GAChBrP,KAAK4J,SAAS,CAAE2F,SAAS,IAAQ,WAC/BnN,OAAO0G,SAASoH,KAAO,YAzF7B,kCA6FE,SAA4BL,EAAoBC,GAC9C9P,KAAK4J,SAAS,CAAE2F,QAASM,IAAY,WAAQC,WA9FjD,GAAyBjG,IAAMC,WClB/BsG,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,U,gBCyyC1BC,EAAOC,QAjzCM,CACT,aAAgB,CACZ,CACInP,IAAK,mBACLsE,SAAU,OACVE,KAAM,yBACNC,YAAa,6BACbgD,KAAM,CACF/C,aAAc,GACdC,UAAU,EACVyK,WAAW,IAGnB,CACIpP,IAAK,eACLsE,SAAU,OACVE,KAAM,iBACNC,YAAa,yBACbgD,KAAM,CACF/C,aAAc,GACdC,UAAU,EACVyK,WAAW,IAGnB,CACIpP,IAAK,gBACLsE,SAAU,OACVE,KAAM,aACNC,YAAa,mCACbgD,KAAM,CACF/C,aAAc,MACdC,UAAU,EACVyK,WAAW,IAGnB,CACIpP,IAAK,cACLsE,SAAU,SACVE,KAAM,UACNC,YAAa,4BACbgD,KAAM,CACFxC,QAAS,CACL,CAACjF,IAAK,kBAAmBxB,MAAO,YAI5C,CACIwB,IAAK,UACLsE,SAAU,SACVE,KAAM,MACNC,YAAa,wBACbgD,KAAM,CACFxC,QAAS,CACL,CAACjF,IAAK,eAAgBxB,MAAO,UAC7B,CAACwB,IAAK,cAAexB,MAAO,SAC5B,CAACwB,IAAK,iBAAkBxB,MAAO,YAC/B,CAACwB,IAAK,mBAAoBxB,MAAO,eACjC,CAACwB,IAAK,cAAexB,MAAO,SAC5B,CAACwB,IAAK,mBAAoBxB,MAAO,eACjC,CAACwB,IAAK,eAAgBxB,MAAO,aAIzC,CACIwB,IAAK,aACLsE,SAAU,SACVE,KAAM,SACNC,YAAa,2BACbgD,KAAM,CACFxC,QAAS,CACL,CAACjF,IAAK,kBAAmBxB,MAAO,UAChC,CAACwB,IAAK,gBAAiBxB,MAAO,QAC9B,CAACwB,IAAK,qBAAsBxB,MAAO,iBAI/C,CACIwB,IAAK,gBACLsE,SAAU,SACVE,KAAM,aACNC,YAAa,+BACbgD,KAAM,CACFxC,QAAS,CACL,CAACjF,IAAK,oBAAqBxB,MAAO,SAClC,CAACwB,IAAK,qBAAsBxB,MAAO,UACnC,CAACwB,IAAK,mBAAoBxB,MAAO,QACjC,CAACwB,IAAK,oBAAqBxB,MAAO,SAClC,CAACwB,IAAK,oBAAqBxB,MAAO,SAClC,CAACwB,IAAK,mBAAoBxB,MAAO,QACjC,CAACwB,IAAK,qBAAsBxB,MAAO,UACnC,CAACwB,IAAK,qBAAsBxB,MAAO,UACnC,CAACwB,IAAK,kBAAmBxB,MAAO,OAChC,CAACwB,IAAK,qBAAsBxB,MAAO,UACnC,CAACwB,IAAK,oBAAqBxB,MAAO,SAClC,CAACwB,IAAK,oBAAqBxB,MAAO,YAI9C,CACIwB,IAAK,eACLsE,SAAU,SACVE,KAAM,YACNC,YAAa,8BACbgD,KAAM,CACFxC,QAAS,CACL,CAACjF,IAAK,mBAAoBxB,MAAO,SACjC,CAACwB,IAAK,kBAAmBxB,MAAO,QAChC,CAACwB,IAAK,mBAAoBxB,MAAO,SACjC,CAACwB,IAAK,mBAAoBxB,MAAO,SACjC,CAACwB,IAAK,kBAAmBxB,MAAO,WAI5C,CACIwB,IAAK,aACLsE,SAAU,SACVE,KAAM,SACNC,YAAa,2BACbgD,KAAM,CACFxC,QAAS,CACL,CAACjF,IAAK,iBAAkBxB,MAAO,SAC/B,CAACwB,IAAK,iBAAkBxB,MAAO,SAC/B,CAACwB,IAAK,mBAAoBxB,MAAO,kBACjC,CAACwB,IAAK,gBAAiBxB,MAAO,QAC9B,CAACwB,IAAK,iBAAkBxB,MAAO,YAI3C,CACIwB,IAAK,YACLsE,SAAU,SACVE,KAAM,QACNC,YAAa,0BACbgD,KAAM,CACFxC,QAAS,CACL,CAACjF,IAAK,oBAAqBxB,MAAO,aAClC,CAACwB,IAAK,oBAAqBxB,MAAO,aAClC,CAACwB,IAAK,oBAAqBxB,MAAO,gBAI9C,CACIwB,IAAK,aACLsE,SAAU,SACVE,KAAM,SACNC,YAAa,2BACbgD,KAAM,CACFxC,QAAS,CACL,CAACjF,IAAK,oBAAqBxB,MAAO,YAClC,CAACwB,IAAK,iBAAkBxB,MAAO,eAC/B,CAACwB,IAAK,kBAAmBxB,MAAO,gBAChC,CAACwB,IAAK,iBAAkBxB,MAAO,eAC/B,CAACwB,IAAK,kBAAmBxB,MAAO,oBAKhD,gBAAmB,CACf,CACIwB,IAAK,eACLsE,SAAU,cACVE,KAAM,WACNC,YAAa,i3BACbgD,KAAM,CACFzB,MAAO,CACH,CACIhG,IAAK,sBACLsE,SAAU,QACVE,KAAM,cACNC,YAAa,cACbgD,KAAM,CACFzB,MAAO,CACH,CACIhG,IAAK,uBACLsE,SAAU,WACVE,KAAM,wBACNC,YAAa,4HACbgD,KAAM,CACF7B,kBAAkB,IAG1B,CACI5F,IAAK,sBACLsE,SAAU,WACVE,KAAM,0BACNC,YAAa,gHACbgD,KAAM,CACF7B,kBAAkB,IAG1B,CACI5F,IAAK,0BACLsE,SAAU,WACVE,KAAM,cACNC,YAAa,mJACbgD,KAAM,CACF7B,kBAAkB,IAG1B,CACI5F,IAAK,yBACLsE,SAAU,WACVE,KAAM,gBACNC,YAAa,2PACbgD,KAAM,CACF7B,kBAAkB,IAG1B,CACI5F,IAAK,qBACLsE,SAAU,QACVE,KAAM,SACNC,YAAa,SACbgD,KAAM,CACFzB,MAAO,CACH,CACIhG,IAAK,6BACLsE,SAAU,WACVE,KAAM,WACNC,YAAa,GACbgD,KAAM,CACF7B,kBAAkB,IAG1B,CACI5F,IAAK,4BACLsE,SAAU,WACVE,KAAM,UACNC,YAAa,GACbgD,KAAM,CACF7B,kBAAkB,IAG1B,CACI5F,IAAK,+BACLsE,SAAU,WACVE,KAAM,aACNC,YAAa,GACbgD,KAAM,CACF7B,kBAAkB,IAG1B,CACI5F,IAAK,kCACLsE,SAAU,WACVE,KAAM,gBACNC,YAAa,GACbgD,KAAM,CACF7B,kBAAkB,IAG1B,CACI5F,IAAK,iCACLsE,SAAU,WACVE,KAAM,eACNC,YAAa,GACbgD,KAAM,CACF7B,kBAAkB,IAG1B,CACI5F,IAAK,0BACLsE,SAAU,WACVE,KAAM,QACNC,YAAa,GACbgD,KAAM,CACF7B,kBAAkB,UASlD,CACI5F,IAAK,sBACLsE,SAAU,QACVE,KAAM,cACNC,YAAa,cACbgD,KAAM,CACFzB,MAAO,CACH,CACIhG,IAAK,0BACLsE,SAAU,WACVE,KAAM,oBACNC,YAAa,+JACbgD,KAAM,CACF7B,kBAAkB,IAG1B,CACI5F,IAAK,2BACLsE,SAAU,WACVE,KAAM,2BACNC,YAAa,4KACbgD,KAAM,CACF7B,kBAAkB,IAG1B,CACI5F,IAAK,0BACLsE,SAAU,WACVE,KAAM,cACNC,YAAa,kMACbgD,KAAM,CACF7B,kBAAkB,IAG1B,CACI5F,IAAK,qBACLsE,SAAU,WACVE,KAAM,SACNC,YAAa,qVACbgD,KAAM,CACF7B,kBAAkB,IAG1B,CACI5F,IAAK,qBACLsE,SAAU,QACVE,KAAM,SACNC,YAAa,SACbgD,KAAM,CACFzB,MAAO,CACH,CACIhG,IAAK,+BACLsE,SAAU,WACVE,KAAM,aACNC,YAAa,GACbgD,KAAM,CACF7B,kBAAkB,IAG1B,CACI5F,IAAK,iCACLsE,SAAU,WACVE,KAAM,eACNC,YAAa,GACbgD,KAAM,CACF7B,kBAAkB,IAG1B,CACI5F,IAAK,+BACLsE,SAAU,WACVE,KAAM,cACNC,YAAa,GACbgD,KAAM,CACF7B,kBAAkB,IAG1B,CACI5F,IAAK,6BACLsE,SAAU,WACVE,KAAM,WACNC,YAAa,GACbgD,KAAM,CACF7B,kBAAkB,IAG1B,CACI5F,IAAK,yBACLsE,SAAU,WACVE,KAAM,OACNC,YAAa,GACbgD,KAAM,CACF7B,kBAAkB,IAG1B,CACI5F,IAAK,gCACLsE,SAAU,WACVE,KAAM,cACNC,YAAa,GACbgD,KAAM,CACF7B,kBAAkB,aAY9D,CACI5F,IAAK,wBACLsE,SAAU,cACVE,KAAM,oBACNC,YAAa,8nBACbgD,KAAM,CACFzB,MAAO,CACH,CACIhG,IAAK,oBACLsE,SAAU,QACVE,KAAM,YACNC,YAAa,YACbgD,KAAM,CACFzB,MAAO,CACH,CACIhG,IAAK,oBACLsE,SAAU,WACVE,KAAM,SACNC,YAAa,8cACbgD,KAAM,CACF7B,kBAAkB,IAG1B,CACI5F,IAAK,kBACLsE,SAAU,WACVE,KAAM,OACNC,YAAa,4GACbgD,KAAM,CACF7B,kBAAkB,IAG1B,CACI5F,IAAK,yBACLsE,SAAU,WACVE,KAAM,mBACNC,YAAa,yOACbgD,KAAM,CACF7B,kBAAkB,IAG1B,CACI5F,IAAK,wBACLsE,SAAU,WACVE,KAAM,aACNC,YAAa,+IACbgD,KAAM,CACF7B,kBAAkB,IAG1B,CACI5F,IAAK,oBACLsE,SAAU,QACVE,KAAM,SACNC,YAAa,SACbgD,KAAM,CACFzB,MAAO,CACH,CACIhG,IAAK,+BACLsE,SAAU,WACVE,KAAM,cACNC,YAAa,GACbgD,KAAM,CACF7B,kBAAkB,IAG1B,CACI5F,IAAK,2BACLsE,SAAU,WACVE,KAAM,UACNC,YAAa,GACbgD,KAAM,CACF7B,kBAAkB,IAG1B,CACI5F,IAAK,4BACLsE,SAAU,WACVE,KAAM,WACNC,YAAa,GACbgD,KAAM,CACF7B,kBAAkB,IAG1B,CACI5F,IAAK,2BACLsE,SAAU,WACVE,KAAM,UACNC,YAAa,GACbgD,KAAM,CACF7B,kBAAkB,IAG1B,CACI5F,IAAK,6BACLsE,SAAU,WACVE,KAAM,YACNC,YAAa,GACbgD,KAAM,CACF7B,kBAAkB,IAG1B,CACI5F,IAAK,8BACLsE,SAAU,WACVE,KAAM,aACNC,YAAa,GACbgD,KAAM,CACF7B,kBAAkB,UASlD,CACI5F,IAAK,mBACLsE,SAAU,QACVE,KAAM,WACNC,YAAa,WACbgD,KAAM,CACFzB,MAAO,CACH,CACIhG,IAAK,yBACLsE,SAAU,WACVE,KAAM,cACNC,YAAa,6TACbgD,KAAM,CACF7B,kBAAkB,IAG1B,CACI5F,IAAK,uBACLsE,SAAU,WACVE,KAAM,mBACNC,YAAa,2LACbgD,KAAM,CACF7B,kBAAkB,IAG1B,CACI5F,IAAK,wBACLsE,SAAU,WACVE,KAAM,iBACNC,YAAa,kSACbgD,KAAM,CACF7B,kBAAkB,IAG1B,CACI5F,IAAK,2BACLsE,SAAU,WACVE,KAAM,eACNC,YAAa,0XACbgD,KAAM,CACF7B,kBAAkB,IAG1B,CACI5F,IAAK,qBACLsE,SAAU,QACVE,KAAM,SACNC,YAAa,SACbgD,KAAM,CACFzB,MAAO,CACH,CACIhG,IAAK,6BACLsE,SAAU,WACVE,KAAM,WACNC,YAAa,GACbgD,KAAM,CACF7B,kBAAkB,IAG1B,CACI5F,IAAK,8BACLsE,SAAU,WACVE,KAAM,aACNC,YAAa,GACbgD,KAAM,CACF7B,kBAAkB,IAG1B,CACI5F,IAAK,gCACLsE,SAAU,WACVE,KAAM,cACNC,YAAa,GACbgD,KAAM,CACF7B,kBAAkB,IAG1B,CACI5F,IAAK,8BACLsE,SAAU,WACVE,KAAM,YACNC,YAAa,GACbgD,KAAM,CACF7B,kBAAkB,IAG1B,CACI5F,IAAK,+BACLsE,SAAU,WACVE,KAAM,aACNC,YAAa,GACbgD,KAAM,CACF7B,kBAAkB,IAG1B,CACI5F,IAAK,6BACLsE,SAAU,WACVE,KAAM,YACNC,YAAa,GACbgD,KAAM,CACF7B,kBAAkB,aAY9D,CACI5F,IAAK,mBACLsE,SAAU,cACVE,KAAM,eACNC,YAAa,g7BACbgD,KAAM,CACFzB,MAAO,CACH,CACIhG,IAAK,mBACLsE,SAAU,QACVE,KAAM,YACNC,YAAa,YACbgD,KAAM,CACFzB,MAAO,CACH,CACIhG,IAAK,uBACLsE,SAAU,WACVE,KAAM,mBACNC,YAAa,gSACbgD,KAAM,CACF7B,kBAAkB,IAG1B,CACI5F,IAAK,sBACLsE,SAAU,WACVE,KAAM,oBACNC,YAAa,iFACbgD,KAAM,CACF7B,kBAAkB,IAG1B,CACI5F,IAAK,yBACLsE,SAAU,WACVE,KAAM,0BACNC,YAAa,yOACbgD,KAAM,CACF7B,kBAAkB,IAG1B,CACI5F,IAAK,4BACLsE,SAAU,WACVE,KAAM,yBACNC,YAAa,mIACbgD,KAAM,CACF7B,kBAAkB,IAG1B,CACI5F,IAAK,mBACLsE,SAAU,QACVE,KAAM,SACNC,YAAa,SACbgD,KAAM,CACFzB,MAAO,CACH,CACIhG,IAAK,2BACLsE,SAAU,WACVE,KAAM,WACNC,YAAa,GACbgD,KAAM,CACF7B,kBAAkB,IAG1B,CACI5F,IAAK,6BACLsE,SAAU,WACVE,KAAM,aACNC,YAAa,GACbgD,KAAM,CACF7B,kBAAkB,IAG1B,CACI5F,IAAK,4BACLsE,SAAU,WACVE,KAAM,YACNC,YAAa,GACbgD,KAAM,CACF7B,kBAAkB,IAG1B,CACI5F,IAAK,yBACLsE,SAAU,WACVE,KAAM,SACNC,YAAa,GACbgD,KAAM,CACF7B,kBAAkB,IAG1B,CACI5F,IAAK,6BACLsE,SAAU,WACVE,KAAM,aACNC,YAAa,GACbgD,KAAM,CACF7B,kBAAkB,IAG1B,CACI5F,IAAK,+BACLsE,SAAU,WACVE,KAAM,eACNC,YAAa,GACbgD,KAAM,CACF7B,kBAAkB,IAG1B,CACI5F,IAAK,4BACLsE,SAAU,WACVE,KAAM,YACNC,YAAa,GACbgD,KAAM,CACF7B,kBAAkB,UASlD,CACI5F,IAAK,mBACLsE,SAAU,QACVE,KAAM,YACNC,YAAa,YACbgD,KAAM,CACFzB,MAAO,CACH,CACIhG,IAAK,0BACLsE,SAAU,WACVE,KAAM,oBACNC,YAAa,sRACbgD,KAAM,CACF7B,kBAAkB,IAG1B,CACI5F,IAAK,sBACLsE,SAAU,WACVE,KAAM,oBACNC,YAAa,kHACbgD,KAAM,CACF7B,kBAAkB,IAG1B,CACI5F,IAAK,yBACLsE,SAAU,WACVE,KAAM,0BACNC,YAAa,kJACbgD,KAAM,CACF7B,kBAAkB,IAG1B,CACI5F,IAAK,qBACLsE,SAAU,WACVE,KAAM,mBACNC,YAAa,uMACbgD,KAAM,CACF7B,kBAAkB,IAG1B,CACI5F,IAAK,mBACLsE,SAAU,QACVE,KAAM,SACNC,YAAa,SACbgD,KAAM,CACFzB,MAAO,CACH,CACIhG,IAAK,wBACLsE,SAAU,WACVE,KAAM,QACNC,YAAa,GACbgD,KAAM,CACF7B,kBAAkB,IAG1B,CACI5F,IAAK,2BACLsE,SAAU,WACVE,KAAM,WACNC,YAAa,GACbgD,KAAM,CACF7B,kBAAkB,IAG1B,CACI5F,IAAK,sBACLsE,SAAU,WACVE,KAAM,MACNC,YAAa,GACbgD,KAAM,CACF7B,kBAAkB,IAG1B,CACI5F,IAAK,6BACLsE,SAAU,WACVE,KAAM,aACNC,YAAa,GACbgD,KAAM,CACF7B,kBAAkB,IAG1B,CACI5F,IAAK,8BACLsE,SAAU,WACVE,KAAM,cACNC,YAAa,GACbgD,KAAM,CACF7B,kBAAkB,IAG1B,CACI5F,IAAK,6BACLsE,SAAU,WACVE,KAAM,aACNC,YAAa,GACbgD,KAAM,CACF7B,kBAAkB,aAY9D,CACI5F,IAAK,oBACLsE,SAAU,cACVE,KAAM,gBACNC,YAAa,kyBACbgD,KAAM,CACFzB,MAAO,CACH,CACIhG,IAAK,mBACLsE,SAAU,QACVE,KAAM,WACNC,YAAa,WACbgD,KAAM,CACFzB,MAAO,CACH,CACIhG,IAAK,sBACLsE,SAAU,WACVE,KAAM,UACNC,YAAa,0XACbgD,KAAM,CACF7B,kBAAkB,IAG1B,CACI5F,IAAK,wBACLsE,SAAU,WACVE,KAAM,gBACNC,YAAa,kMACbgD,KAAM,CACF7B,kBAAkB,IAG1B,CACI5F,IAAK,yBACLsE,SAAU,WACVE,KAAM,aACNC,YAAa,2RACbgD,KAAM,CACF7B,kBAAkB,IAG1B,CACI5F,IAAK,yBACLsE,SAAU,WACVE,KAAM,qBACNC,YAAa,yKACbgD,KAAM,CACF7B,kBAAkB,IAG1B,CACI5F,IAAK,qBACLsE,SAAU,QACVE,KAAM,SACNC,YAAa,SACbgD,KAAM,CACFzB,MAAO,CACH,CACIhG,IAAK,6BACLsE,SAAU,WACVE,KAAM,WACNC,YAAa,GACbgD,KAAM,CACF7B,kBAAkB,IAG1B,CACI5F,IAAK,oCACLsE,SAAU,WACVE,KAAM,kBACNC,YAAa,GACbgD,KAAM,CACF7B,kBAAkB,IAG1B,CACI5F,IAAK,2BACLsE,SAAU,WACVE,KAAM,SACNC,YAAa,GACbgD,KAAM,CACF7B,kBAAkB,IAG1B,CACI5F,IAAK,+BACLsE,SAAU,WACVE,KAAM,aACNC,YAAa,GACbgD,KAAM,CACF7B,kBAAkB,IAG1B,CACI5F,IAAK,8BACLsE,SAAU,WACVE,KAAM,YACNC,YAAa,GACbgD,KAAM,CACF7B,kBAAkB,IAG1B,CACI5F,IAAK,qCACLsE,SAAU,WACVE,KAAM,oBACNC,YAAa,GACbgD,KAAM,CACF7B,kBAAkB,UASlD,CACI5F,IAAK,kBACLsE,SAAU,QACVE,KAAM,UACNC,YAAa,UACbgD,KAAM,CACFzB,MAAO,CACH,CACIhG,IAAK,uBACLsE,SAAU,WACVE,KAAM,mBACNC,YAAa,sGACbgD,KAAM,CACF7B,kBAAkB,IAG1B,CACI5F,IAAK,0BACLsE,SAAU,WACVE,KAAM,uBACNC,YAAa,+KACbgD,KAAM,CACF7B,kBAAkB,IAG1B,CACI5F,IAAK,yBACLsE,SAAU,WACVE,KAAM,cACNC,YAAa,gQACbgD,KAAM,CACF7B,kBAAkB,IAG1B,CACI5F,IAAK,uBACLsE,SAAU,WACVE,KAAM,YACNC,YAAa,sNACbgD,KAAM,CACF7B,kBAAkB,IAG1B,CACI5F,IAAK,oBACLsE,SAAU,QACVE,KAAM,SACNC,YAAa,SACbgD,KAAM,CACFzB,MAAO,CACH,CACIhG,IAAK,2BACLsE,SAAU,WACVE,KAAM,UACNC,YAAa,GACbgD,KAAM,CACF7B,kBAAkB,IAG1B,CACI5F,IAAK,6BACLsE,SAAU,WACVE,KAAM,YACNC,YAAa,GACbgD,KAAM,CACF7B,kBAAkB,IAG1B,CACI5F,IAAK,6BACLsE,SAAU,WACVE,KAAM,YACNC,YAAa,GACbgD,KAAM,CACF7B,kBAAkB,IAG1B,CACI5F,IAAK,0BACLsE,SAAU,WACVE,KAAM,SACNC,YAAa,GACbgD,KAAM,CACF7B,kBAAkB,IAG1B,CACI5F,IAAK,gCACLsE,SAAU,WACVE,KAAM,eACNC,YAAa,GACbgD,KAAM,CACF7B,kBAAkB,IAG1B,CACI5F,IAAK,mCACLsE,SAAU,WACVE,KAAM,mBACNC,YAAa,GACbgD,KAAM,CACF7B,kBAAkB,aAY9D,CACI5F,IAAK,kBACLsE,SAAU,cACVE,KAAM,cACNC,YAAa,k5BACbgD,KAAM,CACFzB,MAAO,CACH,CACIhG,IAAK,oBACLsE,SAAU,QACVE,KAAM,YACNC,YAAa,YACbgD,KAAM,CACFzB,MAAO,CACH,CACIhG,IAAK,4BACLsE,SAAU,WACVE,KAAM,oBACNC,YAAa,mIACbgD,KAAM,CACF7B,kBAAkB,IAG1B,CACI5F,IAAK,uBACLsE,SAAU,WACVE,KAAM,+BACNC,YAAa,iKACbgD,KAAM,CACF7B,kBAAkB,IAG1B,CACI5F,IAAK,yBACLsE,SAAU,WACVE,KAAM,yBACNC,YAAa,mEACbgD,KAAM,CACF7B,kBAAkB,IAG1B,CACI5F,IAAK,yBACLsE,SAAU,WACVE,KAAM,yBACNC,YAAa,0CACbgD,KAAM,CACF7B,kBAAkB,IAG1B,CACI5F,IAAK,qBACLsE,SAAU,QACVE,KAAM,SACNC,YAAa,SACbgD,KAAM,CACFzB,MAAO,CACH,CACIhG,IAAK,4BACLsE,SAAU,WACVE,KAAM,UACNC,YAAa,GACbgD,KAAM,CACF7B,kBAAkB,IAG1B,CACI5F,IAAK,6BACLsE,SAAU,WACVE,KAAM,WACNC,YAAa,GACbgD,KAAM,CACF7B,kBAAkB,IAG1B,CACI5F,IAAK,8BACLsE,SAAU,WACVE,KAAM,YACNC,YAAa,GACbgD,KAAM,CACF7B,kBAAkB,IAG1B,CACI5F,IAAK,8BACLsE,SAAU,WACVE,KAAM,YACNC,YAAa,GACbgD,KAAM,CACF7B,kBAAkB,IAG1B,CACI5F,IAAK,4BACLsE,SAAU,WACVE,KAAM,UACNC,YAAa,GACbgD,KAAM,CACF7B,kBAAkB,IAG1B,CACI5F,IAAK,8BACLsE,SAAU,WACVE,KAAM,YACNC,YAAa,GACbgD,KAAM,CACF7B,kBAAkB,IAG1B,CACI5F,IAAK,8BACLsE,SAAU,WACVE,KAAM,aACNC,YAAa,GACbgD,KAAM,CACF7B,kBAAkB,IAG1B,CACI5F,IAAK,8BACLsE,SAAU,WACVE,KAAM,YACNC,YAAa,GACbgD,KAAM,CACF7B,kBAAkB,UASlD,CACI5F,IAAK,oBACLsE,SAAU,QACVE,KAAM,YACNC,YAAa,YACbgD,KAAM,CACFzB,MAAO,CACH,CACIhG,IAAK,0BACLsE,SAAU,WACVE,KAAM,0BACNC,YAAa,oTACbgD,KAAM,CACF7B,kBAAkB,IAG1B,CACI5F,IAAK,yBACLsE,SAAU,WACVE,KAAM,oBACNC,YAAa,2IACbgD,KAAM,CACF7B,kBAAkB,IAG1B,CACI5F,IAAK,0BACLsE,SAAU,WACVE,KAAM,kBACNC,YAAa,yMACbgD,KAAM,CACF7B,kBAAkB,IAG1B,CACI5F,IAAK,4BACLsE,SAAU,WACVE,KAAM,iBACNC,YAAa,6IACbgD,KAAM,CACF7B,kBAAkB,IAG1B,CACI5F,IAAK,qBACLsE,SAAU,QACVE,KAAM,SACNC,YAAa,SACbgD,KAAM,CACFzB,MAAO,CACH,CACIhG,IAAK,yBACLsE,SAAU,WACVE,KAAM,OACNC,YAAa,GACbgD,KAAM,CACF7B,kBAAkB,IAG1B,CACI5F,IAAK,4BACLsE,SAAU,WACVE,KAAM,UACNC,YAAa,GACbgD,KAAM,CACF7B,kBAAkB,IAG1B,CACI5F,IAAK,2BACLsE,SAAU,WACVE,KAAM,SACNC,YAAa,GACbgD,KAAM,CACF7B,kBAAkB,IAG1B,CACI5F,IAAK,8BACLsE,SAAU,WACVE,KAAM,YACNC,YAAa,GACbgD,KAAM,CACF7B,kBAAkB,IAG1B,CACI5F,IAAK,gCACLsE,SAAU,WACVE,KAAM,cACNC,YAAa,GACbgD,KAAM,CACF7B,kBAAkB,iB","file":"static/js/main.fa8765e5.chunk.js","sourcesContent":["export interface ISavedData {\n    getSaveData(): object;\n    fillFromData(data: object): boolean;\n}\n\nexport enum CustomizableDataType {\n    Text = \"Text\",\n    Select = \"Select\",\n    Checkbox = \"Checkbox\",\n    Group = \"Group\",\n    Personality = \"Personality\",\n}\n\nexport interface ICustomizableData {\n    _id: string;\n    DataType: CustomizableDataType;\n    Name: string;\n    Description: string;\n\n    getArg(key: string): any;\n    calculatePoints(): number;\n}\n\nexport class SavedTextValue implements ISavedData {\n  public Value: string;\n\n  constructor(value: string) {\n    this.Value = value;\n  }\n\n  public getSaveData(): object {\n      return this;\n  }\n\n  public fillFromData(data: object): boolean {\n    try {\n      this.Value = (data as SavedTextValue).Value;\n      return true;\n    } catch (e) {\n      return false;\n    }\n  }\n}\n\nexport class SavedArrayTextValue implements ISavedData {\n  public Values: string[];\n\n  constructor(values: string[]) {\n    this.Values = values;\n  }\n\n  public getSaveData(): object {\n      return this;\n  }\n\n  public fillFromData(data: object): boolean {\n    if (typeof data !== \"object\" || !data.hasOwnProperty(\"Values\") || !Array.isArray((data as any).Values)) {\n      return false;\n    }\n\n    let values: string[] = [];\n    for (const value of (data as any).Values) {\n      if (typeof value !== \"string\") {\n        return false;\n      }\n\n      values.push(value as string);\n    }\n\n    this.Values = values;\n    return true;\n  }\n}","import {ISavedData, ICustomizableData, SavedTextValue} from './Common';\r\nimport {Utils} from './Utils';\r\nimport * as Data from './Data';\r\n\r\nexport class DataManager {\r\n  private static _customData: Map<string, Map<string, ICustomizableData>> = new Map<string, Map<string, ICustomizableData>>();\r\n  private static _data: Map<string, object> = new Map<string, object>();\r\n  private static _maxPoints: number = 150;\r\n  private static _points: number = 0;\r\n\r\n  public static InitializeCustomData(): void {\r\n    if (typeof Data !== \"object\") {\r\n      return;\r\n    }\r\n\r\n    const dataObj = Data as any;\r\n    const keys: string[] = Object.keys(dataObj);\r\n    for (const key of keys) {\r\n      if (!Array.isArray(dataObj[key])) {\r\n        continue;\r\n      }\r\n\r\n      const customData = new Map<string, ICustomizableData>();\r\n      for (const dataItem of dataObj[key]) {\r\n        const customizableData = Utils.GetCustomizableDataFromAny(dataItem);\r\n        if (customizableData !== null) {\r\n          customData.set(customizableData._id, customizableData);\r\n        }\r\n      }\r\n\r\n      if (customData.size > 0) {\r\n        this._customData.set(key, customData);\r\n      }\r\n    }\r\n  }\r\n\r\n  public static SetData(key: string, data: ISavedData): void {\r\n    this._data.set(key, data.getSaveData());\r\n    this.CalculatePoints();\r\n  }\r\n\r\n  public static GetData<T extends ISavedData>(key: string, dataObj: T): T | null {\r\n    if (this._data.has(key) && dataObj.fillFromData(this._data.get(key) as object)) {\r\n      return dataObj;\r\n    }\r\n\r\n    return null;\r\n  }\r\n\r\n  public static GetCustomData(key: string): Map<string, ICustomizableData> | null {\r\n    if (this._customData.has(key)) {\r\n      return this._customData.get(key) as Map<string, ICustomizableData>;\r\n    }\r\n\r\n    return null;\r\n  }\r\n\r\n  public static GetSaveData(): string {\r\n    const jsonStr = JSON.stringify(this._data, DataManager.MapReplacer);\r\n    const saveData = window.btoa(unescape(encodeURIComponent(jsonStr)));\r\n    return saveData;\r\n  }\r\n\r\n  public static SetSaveData(saveData: Map<string, object>, clearOld: boolean = true): void {\r\n    if (!(saveData instanceof Map)) {\r\n      console.log(\"Save data isn't valid\");\r\n      return;\r\n    }\r\n\r\n    if (clearOld) {\r\n      this._data = new Map<string, object>();\r\n    }\r\n\r\n    const dataEntries = Array.from(saveData.entries());\r\n    for (const [key, value] of dataEntries) {\r\n      if (typeof key !== \"string\") {\r\n        continue;\r\n      }\r\n\r\n      if (typeof value !== \"object\") {\r\n        continue;\r\n      }\r\n\r\n      this._data.set(key, value);\r\n    }\r\n  }\r\n\r\n  public static LoadSaveData(savedData: string): Map<string, object> | null {\r\n    try {\r\n      const dataParsed = JSON.parse(savedData);\r\n      if (!!dataParsed && dataParsed.hasOwnProperty(\"success\") && !dataParsed.success) {\r\n        console.log(\"Failed: \" + dataParsed.error);\r\n        return null;\r\n      }\r\n    } catch(e) {}\r\n\r\n    let atobValue = \"\";\r\n    try {\r\n      atobValue = window.atob(savedData);\r\n    }\r\n    catch(e) {\r\n      console.log(\"Invalid content\");\r\n      return null;\r\n    }\r\n\r\n    let value = atobValue;\r\n    try {\r\n      value = decodeURIComponent(escape(atobValue));\r\n      // Parse here just to make sure it s valid\r\n      JSON.parse(value);\r\n    }\r\n    catch(e) {\r\n      value = atobValue;\r\n    }\r\n  \r\n    if (value !== \"\") {\r\n      try {\r\n        const parsed: Map<string, object> = JSON.parse(value, DataManager.MapReviver);\r\n        if (parsed instanceof Map) {\r\n          return parsed;\r\n        }\r\n        else {\r\n          console.log(\"Invalid data type\");\r\n        }\r\n      }\r\n      catch(e) {\r\n        console.log(\"Invalid content\");\r\n      }\r\n    }\r\n    else {\r\n      console.log(\"Invalid content\");\r\n    }\r\n\r\n    return null;\r\n  }\r\n\r\n  public static SaveOnlineData(charUrl: string, authKey: string, saveData: string, onSaveDone: (isSuccesful: boolean) => void): void {\r\n    if (charUrl.length < 3) {\r\n      console.log(\"Invalid Character URL\");\r\n      onSaveDone(false);\r\n    }\r\n    else if (authKey.length < 1) {\r\n      console.log(\"Invalid Auth Key\");\r\n      onSaveDone(false);\r\n    }\r\n    else {\r\n      fetch('https://wgrpg.herokuapp.com/char', {\r\n        method: 'POST',\r\n        body: '{\"id\":\"' + charUrl + '\",\"data\":\"' + saveData + '\",\"authKey\":\"' + authKey + '\"}'\r\n      })\r\n      .then((response) => response.json())\r\n      .then((json) => {\r\n        onSaveDone(json.success);\r\n      })\r\n      .catch((error) => {\r\n        console.log(error);\r\n        onSaveDone(false);\r\n      });\r\n    }\r\n  }\r\n\r\n  public static LoadOnlineCharacter(charId: string, onLoadDone: (isSuccesful: boolean) => void): void {\r\n    if (charId.length < 3) {\r\n      console.log(\"Invalid Character URL\");\r\n      return;\r\n    }\r\n\r\n    fetch('https://wgrpg.herokuapp.com/char/' + charId, {\r\n      method: 'GET'\r\n    })\r\n    .then((response) => response.text())\r\n    .then((text) => {\r\n      try {\r\n        const parsed: ICharFailResponse = JSON.parse(text);\r\n        console.log(parsed);\r\n        onLoadDone(false);\r\n      }\r\n      catch(e) {\r\n        const loaded = this.LoadSaveData(text);\r\n        if (loaded != null) {\r\n          this.SetSaveData(loaded);\r\n          onLoadDone(true);\r\n        }\r\n        else {\r\n          onLoadDone(false);\r\n        }\r\n      }\r\n    })\r\n    .catch((error) => {\r\n      console.log(error);\r\n      onLoadDone(false);\r\n    });\r\n  }\r\n\r\n  public static CalculatePoints(): void {\r\n    const savedValue = DataManager.GetData(\"physMaxPoints\", new SavedTextValue(\"\"));\r\n    if (savedValue !== null) {\r\n      const parsed = parseInt(savedValue.Value);\r\n      if (!isNaN(parsed)) {\r\n        this._maxPoints = parsed;\r\n      }\r\n    }\r\n\r\n    let points = 0;\r\n    this._customData.forEach((val) => {\r\n      val.forEach((data) => {\r\n        points += data.calculatePoints();\r\n      });\r\n    });\r\n    this._points = points;\r\n  }\r\n\r\n  public static GetMaxPoints(): number {\r\n    return this._maxPoints;\r\n  }\r\n\r\n  public static GetPoints(): number {\r\n    return this._points;\r\n  }\r\n\r\n  private static MapReplacer(key: any, value: any) {\r\n    if(value instanceof Map) {\r\n      return {\r\n        dataType: 'Map',\r\n        value: Array.from(value.entries()), // or with spread: value: [...value]\r\n      };\r\n    } else {\r\n      return value;\r\n    }\r\n  }\r\n\r\n  private static MapReviver(key: any, value: any) {\r\n    if(typeof value === 'object' && value !== null) {\r\n      if (value.dataType === 'Map') {\r\n        return new Map(value.value);\r\n      }\r\n    }\r\n    return value;\r\n  }\r\n}\r\n\r\nexport default DataManager;\r\n\r\ninterface ICharFailResponse {\r\n  success: boolean;\r\n  error: string;\r\n}","import {CustomizableDataType, ICustomizableData, SavedTextValue} from '../Common';\nimport {DataManager} from '../DataManager';\n\nexport class TextInputData implements ICustomizableData {\n    private _args: Map<string, any>;\n\n    public readonly _id: string;\n    public readonly DataType = CustomizableDataType.Text;\n    public readonly Name: string;\n    public readonly Description: string;\n    public readonly DefaultValue: string;\n    public readonly IsNumber: boolean;\n\n    constructor(_id: string, name: string, description: string, args: Map<string, any>, defaultValue: string, isNumber: boolean) {\n        this._args = args;\n        this._id = _id;\n        this.Name = name;\n        this.Description = description;\n        this.DefaultValue = defaultValue;\n        this.IsNumber = isNumber;\n    }\n\n    public getArg(key: string): any {\n        if (this._args.has(key)) {\n            return this._args.get(key);\n        }\n\n        return null;\n    }\n\n    public calculatePoints(): number {\n        return 0;\n    }\n\n    public onValueChange(value: string): void {\n        DataManager.SetData(this._id, new SavedTextValue(value));\n    }\n\n    public getDefaultValue(): string {\n        const savedValue = DataManager.GetData(this._id, new SavedTextValue(\"\"));\n        if (savedValue !== null) {\n            return savedValue.Value;\n        }\n\n        return this.DefaultValue;\n    }\n\n    public static CreateFromDataObject(_id: string, name: string, description: string, args: any): TextInputData | null {\n        if (args === null || typeof args !== \"object\"\n            || !args.hasOwnProperty('DefaultValue') || typeof args.DefaultValue !== 'string'\n            || !args.hasOwnProperty('IsNumber') || typeof args.IsNumber !== 'boolean') {\n            return null;\n        }\n\n        const argsMap = new Map<string, any>();\n        for (const key in args) {\n            if (args.hasOwnProperty(key)) {\n                argsMap.set(key, args[key]);\n            }\n        }\n\n        return new TextInputData(_id, name, description, argsMap, args.DefaultValue as string, args.IsNumber as boolean);\n    }\n}\n","import {CustomizableDataType, ICustomizableData, SavedTextValue} from '../Common';\nimport {DataManager} from '../DataManager';\n\nexport interface ISelectDataOption {\n    _id: string;\n    Value: string;\n}\n\nexport class SelectData implements ICustomizableData {\n    private _args: Map<string, any>;\n\n    public readonly _id: string;\n    public readonly DataType = CustomizableDataType.Select;\n    public readonly Name: string;\n    public readonly Description: string;\n    public Options: ReadonlyArray<ISelectDataOption>;\n\n    constructor(_id: string, name: string, description: string, args: Map<string, any>, options: ISelectDataOption[]) {\n        this._args = args;\n        this._id = _id;\n        this.Name = name;\n        this.Description = description;\n\n        const validatedOptions: ISelectDataOption[] = [];\n        if (options !== null) {\n            for (const option of options) {\n                if (option === null || option._id === null || option._id.length < 1 || option.Value === null || option.Value.length < 1) {\n                    continue;\n                }\n\n                for (let i = 0; i < validatedOptions.length; i++) {\n                    if (validatedOptions[i]._id === option._id) {\n                        validatedOptions.splice(i, 1);\n                        break;\n                    }\n                }\n\n                validatedOptions.push(option);\n            }\n        }\n\n        this.Options = validatedOptions;\n    }\n\n    public getValueOfOption(id: string): string | null {\n        for (const option of this.Options) {\n            if (option._id === id) {\n                return option.Value;\n            }\n        }\n\n        return null;\n    }\n\n    public getArg(key: string): any {\n        if (this._args.has(key)) {\n            return this._args.get(key);\n        }\n\n        return null;\n    }\n\n    public calculatePoints(): number {\n        return 0;\n    }\n\n    public onValueChange(value: string): void {\n        DataManager.SetData(this._id, new SavedTextValue(value));\n    }\n\n    public getDefaultValue(): string {\n        const savedValue = DataManager.GetData(this._id, new SavedTextValue(\"\"));\n        let isValid = false;\n        if (savedValue !== null) {\n            for (const option of this.Options) {\n              if (savedValue.Value === option._id) {\n                isValid = true;\n                break;\n              }\n            }\n        }\n    \n        if (isValid && savedValue !== null) {\n            return savedValue.Value;\n        }\n\n        if (this.Options.length > 0) {\n            this.onValueChange(this.Options[0]._id);\n            return this.Options[0]._id;\n        }\n\n        return \"\";\n    }\n\n    public static CreateFromDataObject(_id: string, name: string, description: string, args: any): SelectData | null {\n        if (args === null || typeof args !== \"object\" || !args.hasOwnProperty('Options') || !Array.isArray(args.Options)) {\n            return null;\n        }\n\n        const argsMap = new Map<string, any>();\n        for (const key in args) {\n            if (args.hasOwnProperty(key)) {\n                argsMap.set(key, args[key]);\n            }\n        }\n\n        const options: ISelectDataOption[] = [];\n        for (const option of args.Options) {\n            if (option === null || typeof option !== 'object'\n                || !option.hasOwnProperty('_id') || typeof option._id !== 'string'\n                || !option.hasOwnProperty('Value') || typeof option.Value !== 'string') {\n                return null;\n            }\n\n            options.push({_id: option._id, Value: option.Value});\n        }\n\n        return new SelectData(_id, name, description, argsMap, options);\n    }\n}\n","import {CustomizableDataType, ICustomizableData} from '../Common';\n\nexport class CheckboxData implements ICustomizableData {\n    private _args: Map<string, any>;\n\n    public readonly _id: string;\n    public readonly DataType = CustomizableDataType.Checkbox;\n    public readonly Name: string;\n    public readonly Description: string;\n    public readonly IsDefaultChecked: boolean;\n\n    protected constructor(_id: string, name: string, description: string, args: Map<string, any>, isDefaultChecked: boolean) {\n        this._args = args;\n        this._id = _id;\n        this.Name = name;\n        this.Description = description;\n        this.IsDefaultChecked = isDefaultChecked;\n    }\n\n    public getArg(key: string): any {\n        if (this._args.has(key)) {\n            return this._args.get(key);\n        }\n\n        return null;\n    }\n\n    public calculatePoints(): number {\n        return 0;\n    }\n\n    public static CreateFromDataObject(_id: string, name: string, description: string, args: any): CheckboxData | null {\n        if (args === null || typeof args !== \"object\"\n            || !args.hasOwnProperty('IsDefaultChecked') || typeof args.IsDefaultChecked !== 'boolean') {\n            return null;\n        }\n\n        const argsMap = new Map<string, any>();\n        for (const key in args) {\n            if (args.hasOwnProperty(key)) {\n                argsMap.set(key, args[key]);\n            }\n        }\n\n        return new CheckboxData(_id, name, description, argsMap, args.IsDefaultChecked as boolean);\n    }\n}\n","import {CustomizableDataType, ICustomizableData} from '../Common';\nimport {Utils} from '../Utils';\n\nexport class GroupData implements ICustomizableData {\n    private _args: Map<string, any>;\n\n    public readonly _id: string;\n    public readonly DataType: CustomizableDataType = CustomizableDataType.Group;\n    public readonly Name: string;\n    public readonly Description: string;\n    public readonly Items: ReadonlyArray<ICustomizableData>;\n\n    constructor(_id: string, name: string, description: string, args: Map<string, any>, items: ICustomizableData[]) {\n        this._args = args;\n        this._id = _id;\n        this.Name = name;\n        this.Description = description;\n        this.Items = items;\n    }\n\n    public getArg(key: string): any {\n        if (this._args.has(key)) {\n            return this._args.get(key);\n        }\n\n        return null;\n    }\n\n    public calculatePoints(): number {\n        return 0;\n    }\n\n    public static GetItemsFromArgs(args: any): ICustomizableData[] | null {\n        if (args === null || typeof args !== \"object\"\n            || !args.hasOwnProperty('Items') || !Array.isArray(args.Items)) {\n            return null;\n        }\n\n        const items: ICustomizableData[] = [];\n        for (const item of args.Items as any[]) {\n            const dataItem = Utils.GetCustomizableDataFromAny(item);\n            if (dataItem === null) {\n                return null;\n            }\n\n            items.push(dataItem);\n        }\n\n        return items;\n    }\n\n    public static CreateFromDataObject(_id: string, name: string, description: string, args: any): GroupData | null {\n        const items = GroupData.GetItemsFromArgs(args);\n        if (items === null) {\n            return null;\n        }\n\n        return new GroupData(_id, name, description, Utils.GetArgMap(args), items);\n    }\n}\n\nexport default GroupData;\n","import {CustomizableDataType, ICustomizableData, SavedTextValue, SavedArrayTextValue} from '../Common';\nimport {DataManager} from '../DataManager';\nimport {Utils} from '../Utils';\nimport {GroupData} from './GroupData';\n\nexport class PersonalityData extends GroupData {\n    public readonly DataType = CustomizableDataType.Personality;\n\n    public calculatePoints(): number {\n        const abilities = this.getDefaultAbilities();\n        return abilities.length * 10;\n    }\n\n    public onSelectedChange(selected: string): void {\n        const savedValue = DataManager.GetData(this._id + \"_selected\", new SavedTextValue(\"\"));\n        if (savedValue !== null && selected === savedValue.Value) {\n            return;\n        }\n\n        DataManager.SetData(this._id + \"_traits\", new SavedArrayTextValue([]));\n        DataManager.SetData(this._id + \"_abilities\", new SavedArrayTextValue([]));\n        DataManager.SetData(this._id + \"_selected\", new SavedTextValue(selected));\n    }\n\n    public getDefaultSelected(): string {\n        const savedValue = DataManager.GetData(this._id + \"_selected\", new SavedTextValue(\"\"));\n        let isValid = false;\n        if (savedValue !== null) {\n            for (const item of this.Items) {\n              if (savedValue.Value === item._id) {\n                isValid = true;\n                break;\n              }\n            }\n        }\n    \n        if (isValid && savedValue !== null) {\n            return savedValue.Value;\n        }\n\n        if (this.Items.length > 0) {\n            this.onSelectedChange(this.Items[0]._id);\n            return this.Items[0]._id;\n        }\n\n        return \"\";\n    }\n\n    public onAbilitiesChange(abilities: string[]): void {\n        DataManager.SetData(this._id + \"_abilities\", new SavedArrayTextValue(abilities));\n    }\n\n    public getDefaultAbilities(): ICustomizableData[] {\n        const savedAbilities = DataManager.GetData(this._id + \"_abilities\", new SavedArrayTextValue([]));\n        if (savedAbilities !== null && savedAbilities.Values.length > 0) {\n            const selected = this.getDefaultSelected();\n            for (const item of this.Items) {\n                if (item._id === selected) {\n                    const groupData = item as GroupData;\n                    let validItems: ICustomizableData[] = [];\n                    for (const ability of savedAbilities.Values) {\n                        for (const abilityItem of groupData.Items) {\n                            if (abilityItem.DataType === CustomizableDataType.Checkbox && ability === abilityItem._id) {\n                                validItems.push(abilityItem);\n                                break;\n                            }\n                        }\n                    }\n\n                    return validItems;\n                }\n            }\n        }\n\n        return [];\n    }\n\n    public onTraitsChange(traits: string[]): void {\n        DataManager.SetData(this._id + \"_traits\", new SavedArrayTextValue(traits));\n    }\n\n    public getDefaultTraits(): ICustomizableData[] {\n        const savedTraits = DataManager.GetData(this._id + \"_traits\", new SavedArrayTextValue([]));\n        if (savedTraits !== null && savedTraits.Values.length > 0) {\n            const selected = this.getDefaultSelected();\n            for (const item of this.Items) {\n                if (item._id === selected) {\n                    const groupData = item as GroupData;\n                    let validItems: ICustomizableData[] = [];\n                    for (const trait of savedTraits.Values) {\n                        for (const abilityItem of groupData.Items) {\n                            if (abilityItem.DataType === CustomizableDataType.Group) {\n                                const traitGroup = abilityItem as GroupData;\n                                for (const traitItem of traitGroup.Items) {\n                                    if (trait === traitItem._id) {\n                                        validItems.push(traitItem);\n                                        break;\n                                    }\n                                }\n                            }\n                        }\n                    }\n\n                    return validItems;\n                }\n            }\n        }\n\n        return [];\n    }\n\n    public static CreateFromDataObject(_id: string, name: string, description: string, args: any): PersonalityData | null {\n        const items = GroupData.GetItemsFromArgs(args);\n        if (items === null) {\n            return null;\n        }\n\n        return new PersonalityData(_id, name, description, Utils.GetArgMap(args), items);\n    }\n}\n","import {CustomizableDataType, ICustomizableData} from './Common';\r\nimport {TextInputData} from './Customizable/TextInputData';\r\nimport {SelectData} from './Customizable/SelectData';\r\nimport {CheckboxData} from './Customizable/CheckboxData';\r\nimport {GroupData} from './Customizable/GroupData';\r\nimport {PersonalityData} from './Customizable/PersonalityData';\r\n\r\nexport class Utils {\r\n    public static GetCharId(): string | null {\r\n        const urlParams = new URLSearchParams(window.location.search);\r\n        const charId = urlParams.has(\"c\") ? urlParams.get(\"c\") : \"\";\r\n        if (!!charId && charId.length > 0) {\r\n            return charId;\r\n        }\r\n\r\n        return null;\r\n    }\r\n\r\n    public static GetCustomizableDataFromAny(dataItem: any): ICustomizableData | null {\r\n        if (dataItem === null || typeof dataItem !== 'object'\r\n          || !dataItem.hasOwnProperty('_id') || dataItem._id === null || typeof dataItem._id !== 'string' || dataItem._id.length < 1\r\n          || !dataItem.hasOwnProperty('DataType') || dataItem.DataType === null || typeof dataItem.DataType !== 'string' || dataItem.DataType.length < 1\r\n          || !dataItem.hasOwnProperty('Name') || dataItem.Name === null || typeof dataItem.Name !== 'string' || dataItem.Name.length < 1\r\n          || !dataItem.hasOwnProperty('Description') || dataItem.Description === null || typeof dataItem.Description !== 'string') {\r\n          return null;\r\n        }\r\n\r\n        if (!CustomizableDataType.hasOwnProperty(dataItem.DataType)) {\r\n            return null;\r\n        }\r\n\r\n        const args = dataItem.hasOwnProperty('Args') ? dataItem.Args : null;\r\n        switch(dataItem.DataType) {\r\n            case CustomizableDataType.Text:\r\n                return TextInputData.CreateFromDataObject(dataItem._id, dataItem.Name, dataItem.Description, args);\r\n            case CustomizableDataType.Select:\r\n                return SelectData.CreateFromDataObject(dataItem._id, dataItem.Name, dataItem.Description, args);\r\n            case CustomizableDataType.Checkbox:\r\n                return CheckboxData.CreateFromDataObject(dataItem._id, dataItem.Name, dataItem.Description, args);\r\n            case CustomizableDataType.Group:\r\n                return GroupData.CreateFromDataObject(dataItem._id, dataItem.Name, dataItem.Description, args);\r\n            case CustomizableDataType.Personality:\r\n                return PersonalityData.CreateFromDataObject(dataItem._id, dataItem.Name, dataItem.Description, args);\r\n            default:\r\n                return null;\r\n        }\r\n    }\r\n\r\n    public static GetArgMap(args: any): Map<string, any> {\r\n        const argsMap = new Map<string, any>();\r\n        if (typeof args === \"object\") {\r\n            for (const key in args) {\r\n                if (args.hasOwnProperty(key)) {\r\n                    argsMap.set(key, args[key]);\r\n                }\r\n            }\r\n        }\r\n\r\n        return argsMap;\r\n    }\r\n}","import React from 'react';\r\nimport {SelectData} from '../Customizable/SelectData';\r\n\r\nexport interface ISavedSelectProps {\r\n  data: SelectData;\r\n  contClassName: string;\r\n  onValueChange(value: string): void;\r\n}\r\n\r\ninterface ISavedSelectState {\r\n  value: string;\r\n}\r\n\r\nexport class SavedSelect extends React.Component<ISavedSelectProps, ISavedSelectState> {\r\n  constructor(props: ISavedSelectProps) {\r\n    super(props);\r\n\r\n    const value = this.props.data.getDefaultValue();\r\n    this.state = { value: value };\r\n  }\r\n\r\n  public render() {\r\n    return <div className={this.props.contClassName}>\r\n      <label htmlFor={this.props.data._id} className=\"htmlForm-label text-white fw-bold\">{this.props.data.Name}</label>\r\n      <select className=\"custom-select custom-select-lg mb-3\" id={this.props.data._id} value={this.state.value} onChange={(e) => {this.onChange(e.target.value)}}>\r\n        {\r\n          this.props.data.Options.map((option) => {\r\n            return <option key={option._id} value={option._id}>{option.Value}</option>;\r\n          })\r\n        }\r\n      </select>\r\n    </div>;\r\n  }\r\n\r\n  private onChange(value: string) {\r\n    this.props.data.onValueChange(value);\r\n    this.props.onValueChange(value);\r\n    this.setState({ value: value });\r\n  }\r\n}","import React from 'react';\r\nimport {TextInputData} from '../Customizable/TextInputData';\r\n\r\nexport interface ISavedTextProps {\r\n  data: TextInputData;\r\n  contClassName: string;\r\n  onValueChange(value: string): void;\r\n}\r\n\r\ninterface ISavedTextState {\r\n  value: string;\r\n}\r\n\r\nexport class SavedText extends React.Component<ISavedTextProps, ISavedTextState> {\r\n  constructor(props: ISavedTextProps) {\r\n    super(props);\r\n\r\n    const value = props.data.getDefaultValue();\r\n    this.state = { value: value };\r\n  }\r\n\r\n  public render() {\r\n    return <div className={this.props.contClassName}>\r\n      <label htmlFor={this.props.data._id} className=\"htmlForm-label text-white fw-bold\">{this.props.data.Name}</label>\r\n      <div className=\"input-group \">\r\n        <input type={this.props.data.IsNumber ? \"number\" : \"text\"} className=\"htmlForm-control htmlForm-control-lg mb-3\" id={this.props.data._id} value={this.state.value} onChange={(e) => { this.onChange(e.target.value) }} />\r\n      </div>\r\n    </div>;\r\n  }\r\n\r\n  private onChange(value: string) {\r\n    this.props.data.onValueChange(value);\r\n    this.props.onValueChange(value);\r\n    this.setState({ value: value });\r\n  }\r\n}","import React from 'react';\r\nimport {TextInputData} from '../Customizable/TextInputData';\r\n\r\nexport interface ISavedPortraitProps {\r\n  data: TextInputData;\r\n  contClassName: string;\r\n  onValueChange(value: string): void;\r\n}\r\n\r\ninterface ISavedPortraitState {\r\n  value: string;\r\n}\r\n\r\nexport class SavedPortrait extends React.Component<ISavedPortraitProps, ISavedPortraitState> {\r\n  constructor(props: ISavedPortraitProps) {\r\n    super(props);\r\n\r\n    const value = props.data.getDefaultValue();\r\n    this.state = { value: value };\r\n  }\r\n\r\n  public render() {\r\n    return <div className={this.props.contClassName}>\r\n      <div className=\"col-3 d-flex\">\r\n        <img className=\"col img-fluid\" alt=\"\" src={this.state.value.length > 0 ? this.state.value : \"images/camera-placeholder.svg\"} />\r\n      </div>\r\n      <div className=\"col-8\">\r\n        <label htmlFor={this.props.data._id} className=\"htmlForm-label text-white fw-bold\">{this.props.data.Name}</label>\r\n        <div className=\"input-group \">\r\n          <input type=\"text\" className=\"htmlForm-control htmlForm-control-lg mb-3\" id={this.props.data._id} value={this.state.value} onChange={(e) => { this.onChange(e.target.value) }} />\r\n        </div>\r\n      </div>\r\n    </div>;\r\n  }\r\n\r\n  private onChange(value: string) {\r\n    this.props.data.onValueChange(value);\r\n    this.props.onValueChange(value);\r\n    this.setState({ value: value });\r\n  }\r\n}","import React from 'react';\nimport {DataManager} from './DataManager';\nimport {CustomizableDataType, ICustomizableData} from './Common';\nimport {SelectData} from './Customizable/SelectData';\nimport {TextInputData} from './Customizable/TextInputData';\nimport {SavedSelect} from './Components/SavedSelect';\nimport {SavedText} from './Components/SavedText';\nimport {SavedPortrait} from './Components/SavedPortrait';\n\nexport interface IPhysicalCharProps {\n}\n\ninterface IPhysicalCharState {\n\n}\n\nexport class PhysicalChar extends React.Component<IPhysicalCharProps, IPhysicalCharState> {\n  private customizations: ICustomizableData[];\n  private portraitUrl: ICustomizableData | null;\n\n  constructor(props: IPhysicalCharProps) {\n    super(props);\n    this.state = {};\n\n    this.customizations = [];\n    this.portraitUrl = null;\n    const physicalData = DataManager.GetCustomData(\"PhysicalData\");\n    if (physicalData != null) {\n      physicalData.forEach((data: ICustomizableData) => {\n        if (data != null) {\n          if (data._id === \"physCharPortrait\") {\n            this.portraitUrl = data;\n          }\n          else {\n            this.customizations.push(data);\n          }\n        }\n      });\n    }\n  }\n\n  public render() {\n    let portrait = <span />;\n    if (this.portraitUrl !== null) {\n      const textInputData = this.portraitUrl as TextInputData;\n      portrait = <SavedPortrait key={\"physElement\" + textInputData._id} data={textInputData} contClassName=\"row mb-2 align-items-center justify-content-between\" onValueChange={(value) => { }} />;\n    }\n\n    let items = [];\n    for (const customization of this.customizations) {\n      if (customization.DataType === CustomizableDataType.Select) {\n        const selectData = customization as SelectData;\n        items.push(<SavedSelect key={\"physElement\" + selectData._id} data={selectData} contClassName=\"col-md-6\" onValueChange={(value) => { }} />);\n      }\n      else if (customization.DataType === CustomizableDataType.Text) {\n        const textInputData = customization as TextInputData;\n        items.push(<SavedText key={\"physElement\" + textInputData._id} data={textInputData} contClassName=\"col-md-6\" onValueChange={(value) => { }} />);\n      }\n    }\n\n    let grouped = [];\n    for (let i = 0; i < items.length; i += 2) {\n      grouped.push(\n        <div key={\"physGrouped\" + i} className=\"row mb-2 align-items-center justify-content-between\">\n          {items[i]}\n          {(i + 1) < items.length ? items[i + 1] : \"\"}\n        </div>);\n    }\n\n    return (\n      <>\n        <div className=\"container container-xxs border-bottom mt-5 pb-5\">\n          <h1 className=\"text-white mb-4\">Physical Characteristics</h1>\n          <p className=\"text-light\">This section helps to describe the look and feel of your character making it easier htmlFor you and other players visualise what you look like. </p>\n        </div>\n        <div className=\"container container-xxs border-bottom mt-5 pb-5\">\n          {portrait}\n        </div>\n        <div className=\"container container-xxs mt-5 pb-5\">\n          {grouped}\n          <div className=\"row mb-2 mt-4 float-right\">\n            <div className=\"col\">\n              <a className=\"btn btn-primary d-flex align-items-center justify-content-end mb-5\" href=\"#personality\">Continue to Personality</a>\n            </div>\n          </div>\n        </div>\n\n        <div className=\"modal fade\" id=\"buildModal\" tabIndex={-1} aria-labelledby=\"buildModalLabel\" aria-hidden=\"true\">\n          <div className=\"modal-dialog\">\n            <div className=\"modal-content\">\n              <div className=\"modal-header\">\n                <h5 className=\"modal-title\" id=\"buildModalLabel\">Build types</h5>\n                <button type=\"button\" className=\"btn-close\" data-bs-dismiss=\"modal\" aria-label=\"Close\"></button>\n              </div>\n              <div className=\"modal-body\">\n                <p>There are three main build –or body– types we offer out of the box. Ectomorph, mesomorph, and endomorphs. These body types aren't set in stone, and your character may be a combination of types.</p>\n                <h6>Ectomorph</h6>\n                <p className=\"\">\n                  An ectomorph is a typical skinny person. They have a light build with small joints and lean muscle. Usually ectomorphs have long thin limbs with stringy muscles. Shoulders tend to be thin with little width.\n                </p>\n                <h6>Mesomorph</h6>\n                <p className=\"\">\n                  Mesomorphs have a large bone structure, large muscles, and a naturally athletic physique.\n                </p>\n                <h6>Endomorph</h6>\n                <p className=\"\">\n                  The endomorph body type is solid and generally soft.\n                </p>\n              </div>\n              <div className=\"modal-footer\">\n                <button type=\"button\" data-bs-dismiss=\"modal\" className=\"btn btn-primary\">Okay, got it!</button>\n              </div>\n            </div>\n          </div>\n        </div>\n      </>\n    );\n  }\n}\n","import React from 'react';\r\nimport {CustomizableDataType} from '../Common';\r\nimport {GroupData} from '../Customizable/GroupData';\r\nimport {PersonalityData} from '../Customizable/PersonalityData';\r\n\r\nexport interface ISavedPersonalityProps {\r\n  data: PersonalityData;\r\n  contClassName: string;\r\n  onValueChange(value: string): void;\r\n}\r\n\r\ninterface ISavedPersonalityState {\r\n  selected: string;\r\n  abilities: string[];\r\n  traits: string[];\r\n}\r\n\r\nexport class SavedPersonality extends React.Component<ISavedPersonalityProps, ISavedPersonalityState> {\r\n  constructor(props: ISavedPersonalityProps) {\r\n    super(props);\r\n\r\n    const selected = props.data.getDefaultSelected();\r\n    const abilityItems = props.data.getDefaultAbilities();\r\n    const abilities: string[] = [];\r\n    for (const item of abilityItems) { abilities.push(item._id) }\r\n    const traitItems = props.data.getDefaultTraits();\r\n    const traits: string[] = [];\r\n    for (const item of traitItems) { traits.push(item._id) }\r\n    this.state = { selected: selected, abilities: abilities, traits: traits };\r\n  }\r\n\r\n  public render() {\r\n    let abilities = [];\r\n    let traits = [];\r\n    for (const item of this.props.data.Items) {\r\n      if (item._id === this.state.selected) {\r\n        const abilityGroup = item as GroupData;\r\n        const keyPrefix = this.props.data._id + \"_item_\" + item._id + \"_check_\";\r\n        const traitKeyPrefix = this.props.data._id + \"_item_\" + item._id + \"_trait_\";\r\n        for (const abilityItem of abilityGroup.Items) {\r\n          if (abilityItem.DataType === CustomizableDataType.Checkbox) {\r\n            let isChecked = false;\r\n            for (const ability of this.state.abilities) {\r\n              if (ability === abilityItem._id) {\r\n                isChecked = true;\r\n                break;\r\n              }\r\n            }\r\n  \r\n            abilities.push(<div key={keyPrefix + abilityItem._id} className=\"radio-card d-flex align-items-center p-3 mb-3\">\r\n              <input type=\"checkbox\" aria-label={abilityItem.Name} id={keyPrefix + \"input_\" + abilityItem._id} className=\"form-check-input\" defaultChecked={isChecked}\r\n                onChange={(e) => { this.onAbilityStateChange(abilityItem._id, e.target.checked) }} />\r\n              <label htmlFor={keyPrefix + \"input_\" + abilityItem._id} className=\"text-white form-check-label fw-normal p-3 w-100\">\r\n                <h6 className=\"text-white fw-bold\">{abilityItem.Name}</h6>\r\n                <p className=\"text-light mb-0\">{abilityItem.Description}</p>\r\n              </label>\r\n            </div>);\r\n          }\r\n          else if (abilityItem.DataType === CustomizableDataType.Group) {\r\n            const traitGroup = abilityItem as GroupData;\r\n            for (const traitItem of traitGroup.Items) {\r\n              let isChecked = false;\r\n              for (const trait of this.state.traits) {\r\n                if (trait === traitItem._id) {\r\n                  isChecked = true;\r\n                  break;\r\n                }\r\n              }\r\n    \r\n              traits.push(<div key={traitKeyPrefix + traitItem._id} className=\"custom-control custom-checkbox me-3 mb-3\">\r\n                <input type=\"checkbox\" aria-label={traitItem.Name} id={traitKeyPrefix + \"input_\" + traitItem._id} className=\"me-2 form-check-input\" defaultChecked={isChecked}\r\n                onChange={(e) => { this.onTraitStateChange(traitItem._id, e.target.checked) }} />\r\n                <label htmlFor={traitKeyPrefix + \"input_\" + traitItem._id} className=\"text-white form-check-label fw-normal\">{traitItem.Name}</label>\r\n              </div>);\r\n            }\r\n          }\r\n        }\r\n\r\n        break;\r\n      }\r\n    }\r\n\r\n    return <div className={this.props.contClassName}>\r\n      <h3 className=\"text-white fw-bold mb-3\">{this.props.data.Name}</h3>\r\n      <p className=\"text-light\">{this.props.data.Description}</p>\r\n      <div>\r\n        <h5 className=\"fw-bold text-white mb-4 mt-5\">How open is your character? This will change the abilities and traits available.</h5>\r\n        <div className=\"d-flex\">\r\n          {\r\n            this.props.data.Items.map((item) => {\r\n              return <div key={this.props.data._id + \"_item_\" + item._id} className=\" form-check me-3\">\r\n                <input type=\"radio\" aria-label=\"progressive\" name={this.props.data._id} id={this.props.data._id + \"_item_id_\" + item._id} className=\"me-2 form-check-input\" defaultChecked={this.state.selected === item._id}\r\n                  value={item._id} onChange={(e) => { this.onChange(e.target.value) }} />\r\n                <label htmlFor={this.props.data._id + \"_item_id_\" + item._id} className=\"text-white form-check-label fw-normal\">{item.Name}</label>\r\n              </div>;\r\n            })\r\n          }\r\n        </div>\r\n      </div>\r\n      <div>\r\n        <h5 className=\"fw-bold text-white mb-4 mt-5\">Passive Abilities (10 Points Each)</h5>\r\n        {abilities}\r\n      </div>\r\n      <div>\r\n        <h5 className=\"fw-bold text-white mb-4 mt-5\">Character Traits</h5>\r\n        <div className=\"d-flex flex-wrap\">\r\n          {traits}\r\n        </div>\r\n      </div>\r\n    </div>;\r\n  }\r\n\r\n  private onChange(value: string) {\r\n    this.props.data.onSelectedChange(value);\r\n    this.setState({ selected: value, abilities: this.state.selected !== value ? [] : this.state.abilities }, ()=> { this.props.onValueChange(\"\"); });\r\n  }\r\n\r\n  private onAbilityStateChange(value: string, isChecked: boolean) {\r\n    let abilities = this.state.abilities.slice();\r\n    const index = abilities.indexOf(value);\r\n    if (index >= 0) {\r\n      abilities.splice(index, 1);\r\n    }\r\n\r\n    if (isChecked) {\r\n      abilities.push(value);\r\n    }\r\n\r\n    this.props.data.onAbilitiesChange(abilities);\r\n    this.setState({ abilities: abilities }, ()=> { this.props.onValueChange(\"\"); });\r\n  }\r\n\r\n  private onTraitStateChange(value: string, isChecked: boolean) {\r\n    let traits = this.state.traits.slice();\r\n    const index = traits.indexOf(value);\r\n    if (index >= 0) {\r\n      traits.splice(index, 1);\r\n    }\r\n\r\n    if (isChecked) {\r\n      traits.push(value);\r\n    }\r\n\r\n    this.props.data.onTraitsChange(traits);\r\n    this.setState({ traits: traits });\r\n  }\r\n}","import React from 'react';\nimport {DataManager} from './DataManager';\nimport {CustomizableDataType, ICustomizableData} from './Common';\nimport {PersonalityData} from './Customizable/PersonalityData';\nimport {SavedPersonality} from './Components/SavedPersonality';\n\nexport interface IPersonalityProps {\n}\n\ninterface IPersonalityState {\n  points: number;\n  maxPoints: number;\n}\n\nexport class Personality extends React.Component<IPersonalityProps, IPersonalityState> {\n  private personalities: PersonalityData[];\n  constructor(props: IPersonalityProps) {\n    super(props);\n\n    DataManager.CalculatePoints();\n    const maxPoints = DataManager.GetMaxPoints();\n    const points = DataManager.GetPoints();\n    this.state = { points: points, maxPoints: maxPoints };\n\n    this.personalities = [];\n    const personalityData = DataManager.GetCustomData(\"PersonalityData\");\n    if (personalityData != null) {\n      personalityData.forEach((data: ICustomizableData) => {\n        if (data != null && data.DataType === CustomizableDataType.Personality) {\n          this.personalities.push(data as PersonalityData);\n        }\n      });\n    }\n  }\n\n  public render() {\n    let items = [];\n    for (const personality of this.personalities) {\n      items.push(<SavedPersonality key={\"persElement\" + personality._id} data={personality} contClassName=\"pb-5 border-bottom\" onValueChange={(value) => { this.onRecalculatePoints(); }} />);\n    }\n\n    return (\n      <>\n        <div className=\"container  border-bottom mt-5 pb-5\">\n          <h1 className=\"text-white mb-4\">Personality</h1>\n          <p className=\"text-light\">This section is used to describe how your character acts, what choices they would make and how they would feel in different situations. Need more help getting started? Check out the personality trait section of the character sheet.</p>\n        </div>\n        <div className=\"container border-bottom\">\n          <div className=\"row justify-content-between\">\n            <div className=\"col-md-7 mt-5 pb-5\">\n              {items}\n            </div>\n            <div className=\"col-md-4 mt-5\">\n              <div className=\"p-4 bg-lighter point-calculator\">\n                <h6 className=\"text-white fw-bold\">Total Points Calculator</h6>\n                <h6 className=\"text-white\"><span className=\"utilized\">{this.state.points}</span> / {this.state.maxPoints} Utilized</h6>\n                <p className=\"text-light mb-0\"><small>This will be used for both abilities and skills. Choose wisely!</small></p>\n              </div>\n            </div>\n          </div>\n        </div>\n        <div className=\"container mb-5\">\n          <div className=\"d-flex w-100 no-gutter align-items-center mb-2 mt-4 justify-content-between\">\n            <a className=\"justify-content-start text-white\" href=\"#physical\">Back to Physical</a>\n            <a className=\"btn btn-primary d-flex align-items-center justify-content-end\" href=\"#actionAbilities\">Continue to Action Abilities</a>\n          </div>\n        </div>\n      </>\n    );\n  }\n\n  private onRecalculatePoints() {\n    DataManager.CalculatePoints();\n    const maxPoints = DataManager.GetMaxPoints();\n    const points = DataManager.GetPoints();\n    this.setState({ points: points, maxPoints: maxPoints })\n  }\n}\n","import React from 'react';\n\nexport interface IActionAbilitiesProps {\n}\n\ninterface IActionAbilitiesState {\n\n}\n\nexport class ActionAbilities extends React.Component<IActionAbilitiesProps, IActionAbilitiesState> {\n  constructor(props: IActionAbilitiesProps) {\n    super(props);\n    this.state = {};\n  }\n\n  public render() {\n    return (\n      <>\n        <div className=\"container  border-bottom mt-5 pb-5\">\n          <h1 className=\"text-white mb-4\">Personality</h1>\n          <p className=\"text-light\">This section lists all your action abilities by conflict state. For more detailed information please see the Skills & Abilities sheet such as descriptions of the actions as well as their prerequisites.</p>\n        </div>\n        <div className=\"container\">\n          <div className=\"row border-bottom justify-content-between\">\n            <div className=\"col-md-7 mt-5 pb-5\">\n              <div>\n                <h3 className=\"text-white fw-bold mb-5\">Physical Abilities</h3>\n                <div>\n                  <div className=\"radio-card d-flex align-items-center p-3 mb-3\">\n                    <input type=\"checkbox\" aria-label=\"social butterfly\" id=\"precision\" className=\"form-check-input\" />\n                    <label htmlFor=\"precision\" className=\"text-white custom-control-label fw-normal  p-3 w-100\">\n                      <h6 className=\"text-white fw-bold\">Precision Strike</h6>\n                      <p className=\"text-light mb-0\">Find a weak spot on your opponent and use the difference in skill contest between you and the oppoent as extra damage by targeting their weakenss. Alternatively prevent your opponent from doing damage this round by targeting their ability to attack. Maybe by hitting their weapon hand, or stunning them with a smash to the nose.</p>\n                      <p className=\"text-light mt-2 mb-0\"><small><b>Must have:</b> Resilient</small></p>\n                    </label>\n                  </div>\n                  <div className=\"radio-card d-flex align-items-center p-3 mb-3\">\n                    <input type=\"checkbox\" aria-label=\"Trick Shot\" id=\"trickShot\" className=\"form-check-input\" />\n                    <label htmlFor=\"trickShot\" className=\"text-white custom-control-label fw-normal  p-3 w-100\">\n                      <h6 className=\"text-white fw-bold\">Trick Shot</h6>\n                      <p className=\"text-light mb-0\">Reduce your physical skill by 4; triple your damage.</p>\n                      <div className=\"d-flex mt-2\">\n                        <p className=\"text-light me-3 mb-0\"><small><b>Must have:</b> Careless</small></p>\n                        <p className=\"text-light mb-0\"><small><b>Cannot have:</b> Sensitive</small></p>\n                      </div>\n                    </label>\n                  </div>\n                  <div className=\"radio-card d-flex align-items-center p-3 mb-3\">\n\n                    <input type=\"checkbox\" aria-label=\"Dig Down Deep\" id=\"ddd\" className=\"form-check-input\" disabled />\n                    <label htmlFor=\"ddd\" className=\"text-white custom-control-label fw-normal  p-3 w-100\">\n                      <h6 className=\"text-white fw-bold\">Dig Down Deep <span className=\"fw-normal ml-2\">(Requirements Not Met)</span></h6>\n                      <p className=\"text-light mb-0\">Reduce your physical skill by 4; triple your damage.</p>\n                      <div className=\"d-flex mt-2\">\n                        <p className=\"text-light me-3 mb-0\"><small><b>Must have:</b> Careless</small></p>\n                      </div>\n                    </label>\n                  </div>\n                  <div className=\"radio-card d-flex align-items-center p-3 mb-3\">\n                    <input type=\"checkbox\" aria-label=\"Stalwart Defense\" id=\"sd\" className=\"form-check-input\" />\n                    <label htmlFor=\"sd\" className=\"text-white custom-control-label fw-normal  p-3 w-100\">\n                      <h6 className=\"text-white fw-bold\">Stalwart Defense</h6>\n                      <p className=\"text-light mb-0\">Instead of causing damage, use your damage role and deduct it from your skill roll.</p>\n                    </label>\n                  </div>\n                </div>\n              </div>\n              <div className=\"pb-5 border-bottom\">\n                <h3 className=\"text-white fw-bold mb-5 mt-5\">Emotional Fortitude Abilities</h3>\n                <div>\n                  <div className=\"radio-card d-flex align-items-center p-3 mb-3\">\n                    <input type=\"checkbox\" aria-label=\"social butterfly\" id=\"precision\" className=\"form-check-input\" />\n                    <label htmlFor=\"precision\" className=\"text-white custom-control-label fw-normal  p-3 w-100\">\n                      <h6 className=\"text-white fw-bold\">Precision Strike</h6>\n                      <p className=\"text-light mb-0\">Find a weak spot on your opponent and use the difference in skill contest between you and the oppoent as extra damage by targeting their weakenss. Alternatively prevent your opponent from doing damage this round by targeting their ability to attack. Maybe by hitting their weapon hand, or stunning them with a smash to the nose.</p>\n                      <p className=\"text-light mt-2 mb-0\"><small><b>Must have:</b> Resilient</small></p>\n                    </label>\n                  </div>\n                  <div className=\"radio-card d-flex align-items-center p-3 mb-3\">\n\n                    <input type=\"checkbox\" aria-label=\"Trick Shot\" id=\"trickShot\" className=\"form-check-input\" />\n                    <label htmlFor=\"trickShot\" className=\"text-white custom-control-label fw-normal  p-3 w-100\">\n                      <h6 className=\"text-white fw-bold\">Trick Shot</h6>\n                      <p className=\"text-light mb-0\">Reduce your physical skill by 4; triple your damage.</p>\n                      <div className=\"d-flex mt-2\">\n                        <p className=\"text-light me-3 mb-0\"><small><b>Must have:</b> Careless</small></p>\n                        <p className=\"text-light mb-0\"><small><b>Cannot have:</b> Sensitive</small></p>\n                      </div>\n                    </label>\n                  </div>\n                  <div className=\"radio-card d-flex align-items-center p-3 mb-3\">\n\n                    <input type=\"checkbox\" aria-label=\"Dig Down Deep\" id=\"ddd\" className=\"form-check-input\" disabled />\n                    <label htmlFor=\"ddd\" className=\"text-white custom-control-label fw-normal  p-3 w-100\">\n                      <h6 className=\"text-white fw-bold\">Dig Down Deep <span className=\"fw-normal ml-2\">(Requirements Not Met)</span></h6>\n                      <p className=\"text-light mb-0\">Reduce your physical skill by 4; triple your damage.</p>\n                      <div className=\"d-flex mt-2\">\n                        <p className=\"text-light me-3 mb-0\"><small><b>Must have:</b> Careless</small></p>\n                      </div>\n                    </label>\n                  </div>\n                  <div className=\"radio-card d-flex align-items-center p-3 mb-3\">\n\n                    <input type=\"checkbox\" aria-label=\"Stalwart Defense\" id=\"sd\" className=\"form-check-input\" />\n                    <label htmlFor=\"sd\" className=\"text-white custom-control-label fw-normal  p-3 w-100\">\n                      <h6 className=\"text-white fw-bold\">Stalwart Defense</h6>\n                      <p className=\"text-light mb-0\">Instead of causing damage, use your damage role and deduct it from your skill roll.</p>\n                    </label>\n                  </div>\n                </div>\n              </div>\n              <div>\n                <h3 className=\"text-white fw-bold mb-5 mt-5\">Intellect Abilities</h3>\n                <div>\n                  <div className=\"radio-card d-flex align-items-center p-3 mb-3\">\n\n                    <input type=\"checkbox\" aria-label=\"social butterfly\" id=\"precision\" className=\"form-check-input\" />\n                    <label htmlFor=\"precision\" className=\"text-white custom-control-label fw-normal  p-3 w-100\">\n                      <h6 className=\"text-white fw-bold\">Precision Strike</h6>\n                      <p className=\"text-light mb-0\">Find a weak spot on your opponent and use the difference in skill contest between you and the oppoent as extra damage by targeting their weakenss. Alternatively prevent your opponent from doing damage this round by targeting their ability to attack. Maybe by hitting their weapon hand, or stunning them with a smash to the nose.</p>\n                      <p className=\"text-light mt-2 mb-0\"><small><b>Must have:</b> Resilient</small></p>\n                    </label>\n                  </div>\n                  <div className=\"radio-card d-flex align-items-center p-3 mb-3\">\n\n                    <input type=\"checkbox\" aria-label=\"Trick Shot\" id=\"trickShot\" className=\"form-check-input\" />\n                    <label htmlFor=\"trickShot\" className=\"text-white custom-control-label fw-normal  p-3 w-100\">\n                      <h6 className=\"text-white fw-bold\">Trick Shot</h6>\n                      <p className=\"text-light mb-0\">Reduce your physical skill by 4; triple your damage.</p>\n                      <div className=\"d-flex mt-2\">\n                        <p className=\"text-light me-3 mb-0\"><small><b>Must have:</b> Careless</small></p>\n                        <p className=\"text-light mb-0\"><small><b>Cannot have:</b> Sensitive</small></p>\n                      </div>\n                    </label>\n                  </div>\n                  <div className=\"radio-card d-flex align-items-center p-3 mb-3\">\n\n                    <input type=\"checkbox\" aria-label=\"Dig Down Deep\" id=\"ddd\" className=\"form-check-input\" disabled />\n                    <label htmlFor=\"ddd\" className=\"text-white custom-control-label fw-normal  p-3 w-100\">\n                      <h6 className=\"text-white fw-bold\">Dig Down Deep <span className=\"fw-normal ml-2\">(Requirements Not Met)</span></h6>\n                      <p className=\"text-light mb-0\">Reduce your physical skill by 4; triple your damage.</p>\n                      <div className=\"d-flex mt-2\">\n                        <p className=\"text-light me-3 mb-0\"><small><b>Must have:</b> Careless</small></p>\n                      </div>\n                    </label>\n                  </div>\n                  <div className=\"radio-card d-flex align-items-center p-3 mb-3\">\n\n                    <input type=\"checkbox\" aria-label=\"Stalwart Defense\" id=\"sd\" className=\"form-check-input\" />\n                    <label htmlFor=\"sd\" className=\"text-white custom-control-label fw-normal  p-3 w-100\">\n                      <h6 className=\"text-white fw-bold\">Stalwart Defense</h6>\n                      <p className=\"text-light mb-0\">Instead of causing damage, use your damage role and deduct it from your skill roll.</p>\n                    </label>\n                  </div>\n                </div>\n              </div>\n            </div>\n          </div>\n          <div className=\"col-md-4 mt-md-5 mb-3\">\n            <div className=\"p-4 bg-lighter point-calculator\">\n              <h6 className=\"text-white fw-bold\">Total Points Calculator</h6>\n              <h6 className=\"text-white\"><span className=\"utilized\">0</span> / 150 Utilized</h6>\n              <p className=\"text-light mb-0\"><small>This will be used for both abilities and skills. Choose wisely!</small></p>\n            </div>\n          </div>\n        </div>\n        <div className=\"container mb-5\">\n          <div className=\"d-flex w-100 no-gutter align-items-center mb-2 mt-4 justify-content-between\">\n            <a className=\"justify-content-start text-white\" href=\"#personality\">Back to Personality</a>\n            <a className=\"btn btn-primary d-flex align-items-center justify-content-end\" href=\"#dnaSkills\">Continue to DNA & Skills</a>\n          </div>\n        </div>\n      </>\n    );\n  }\n}\n","import React from 'react';\n\nexport interface IDnaSkillsProps {\n}\n\ninterface IDnaSkillsState {\n\n}\n\nexport class DnaSkills extends React.Component<IDnaSkillsProps, IDnaSkillsState> {\n  constructor(props: IDnaSkillsProps) {\n    super(props);\n    this.state = {};\n  }\n\n  public render() {\n    return (\n      <>\n        <div className=\"container  border-bottom mt-5 pb-5\">\n          <h1 className=\"text-white mb-4\">DNA & Skills</h1>\n          <p className=\"text-light\">Your DNA must always equal 0! Any change in one section has to result in an equal change in another. If its negative one ore more of your DNA traits are too low. If it's positive then one or more of your DNA traits are too high. For more detailed information please see the Skills & Abilities sheet.</p>\n        </div>\n        <div className=\"container border-bottom\">\n          <div className=\"row justify-content-between\">\n            <div className=\"col-md-7 mt-5 pb-5\">\n              <div className=\"pb-5 border-bottom\">\n                <h3 className=\"text-white fw-bold mb-3\">Openness</h3>\n                <p className=\"text-light\">Openness is a general appreciation for art, emotion, adventure, unusual ideas, imagination, curiosity, and variety of experience. People who are open to experience are intellectually curious, open to emotion, sensitive to beauty and willing to try new things.</p>\n                <div>\n                  <h5 className=\"fw-bold text-white mb-4 mt-5\">How open is your character? This will change the abilities and traits available.</h5>\n                  <div className=\"d-flex\">\n                    <div className=\" form-check me-3\">\n                      <input type=\"radio\" aria-label=\"progressive\" name=\"openness\" id=\"progressive\" className=\"me-2 form-check-input\" defaultChecked /><label htmlFor=\"progressive\" className=\"text-white form-check-label fw-normal\">Progressive</label>\n                    </div>\n                    <div className=\"form-check\">\n                      <input type=\"radio\" aria-label=\"progressive\" name=\"openness\" id=\"traditional\" className=\"me-2 form-check-input\" /><label htmlFor=\"traditional\" className=\"text-white form-check-label fw-normal\">Traditional</label>\n                    </div>\n                  </div>\n                </div>\n                <div>\n                  <h5 className=\"fw-bold text-white mb-4 mt-5\">Passive Abilities (10 Points Each)</h5>\n                  <div className=\"radio-card d-flex align-items-center p-3 mb-3\">\n                    <input type=\"checkbox\" aria-label=\"Thinking on your feet\" id=\"thinking-on-feet\" className=\"form-check-input\" />\n                    <label htmlFor=\"thinking-on-feet\" className=\"text-white form-check-label fw-normal p-3 w-100\">\n                      <h6 className=\"text-white fw-bold\">Thinking on Your Feet</h6>\n                      <p className=\"text-light mb-0\">In surprise conflict situations, ones without preparation, roll twice on your first round and take the better of the two.</p>\n                    </label>\n                  </div>\n                  <div className=\"radio-card d-flex align-items-center p-3 mb-3\">\n                    <input type=\"checkbox\" aria-label=\"Thinking on your feet\" id=\"cat-curiosity\" className=\"form-check-input\" />\n                    <label htmlFor=\"cat-curiosity\" className=\"text-white form-check-label fw-normal p-3 w-100\">\n                      <h6 className=\"text-white fw-bold\">No! Curiosity Killed the Cat</h6>\n                      <p className=\"text-light mb-0\">And satisfaction brought it back! Get extra rewards when taking risks in unfamiliar places.</p>\n                    </label>\n                  </div>\n                  <div className=\"radio-card d-flex align-items-center p-3 mb-3\">\n                    <input type=\"checkbox\" aria-label=\"Thinking on your feet\" id=\"progress-passive\" className=\"form-check-input\" />\n                    <label htmlFor=\"progressive-passive\" className=\"text-white form-check-label fw-normal p-3 w-100\">\n                      <h6 className=\"text-white fw-bold\">Progressive</h6>\n                      <p className=\"text-light mb-0\">You're forward thinking, always ready for change and get along best with people who drive society forward. Progressives react positively to you.</p>\n                    </label>\n                  </div>\n                  <div className=\"radio-card d-flex align-items-center p-3 mb-3\">\n                    <input type=\"checkbox\" aria-label=\"Thinking on your feet\" id=\"rock\" className=\"form-check-input\" />\n                    <label htmlFor=\"rock\" className=\"text-white form-check-label fw-normal p-3 w-100\">\n                      <h6 className=\"text-white fw-bold\">Rock 'n Rolla</h6>\n                      <p className=\"text-light mb-0\">Sex drugs and rock and roll! By taking your mind off things, destressing and getting wild you're able to give yourself a break from the monotony. While this might drain other people, you gain back intellectual HP by having fun.</p>\n                    </label>\n                  </div>\n                </div>\n                <div>\n                  <h5 className=\"fw-bold text-white mb-4 mt-5\">Character Traits</h5>\n                  <div className=\"d-flex flex-wrap\">\n                    <div className=\"custom-control custom-checkbox me-3 mb-3\">\n                      <input type=\"checkbox\" aria-label=\"Ceremonial\" name=\"openness-traits\" id=\"ceremonial\" className=\"me-2 form-check-input\" /><label htmlFor=\"ceremonial\" className=\"text-white form-check-label fw-normal\">Ceremonial</label>\n                    </div>\n                    <div className=\"custom-control custom-checkbox me-3\">\n                      <input type=\"checkbox\" aria-label=\"Conventional\" name=\"openness-traits\" id=\"conventional\" className=\"me-2 form-check-input\" /><label htmlFor=\"conventional\" className=\"text-white form-check-label fw-normal\">Conventional</label>\n                    </div>\n                    <div className=\"custom-control custom-checkbox me-3\">\n                      <input type=\"checkbox\" aria-label=\"Data Driven\" name=\"openness-traits\" id=\"dataDriven\" className=\"me-2 form-check-input\" /><label htmlFor=\"dataDriven\" className=\"text-white form-check-label fw-normal\">Data-Driven</label>\n                    </div>\n                    <div className=\"custom-control custom-checkbox me-3\">\n                      <input type=\"checkbox\" aria-label=\"Dogmatic\" name=\"openness-traits\" id=\"dogmatic\" className=\"me-2 form-check-input\" /><label htmlFor=\"dogmatic\" className=\"text-white form-check-label fw-normal\">Dogmatic</label>\n                    </div>\n                    <div className=\"custom-control custom-checkbox me-3\">\n                      <input type=\"checkbox\" aria-label=\"Safe\" name=\"openness-traits\" id=\"safe\" className=\"me-2 form-check-input\" /><label htmlFor=\"safe\" className=\"text-white form-check-label fw-normal\">Safe</label>\n                    </div>\n                    <div>\n                      <input type=\"checkbox\" aria-label=\"Unrelenting\" name=\"openness-traits\" id=\"Unrelenting\" className=\"me-2 form-check-input\" /><label htmlFor=\"Unrelenting\" className=\"text-white form-check-label fw-normal\">Unrelenting</label>\n                    </div>\n                  </div>\n                </div>\n              </div>\n              <div className=\"pb-5 border-bottom\">\n                <h3 className=\"text-white fw-bold mb-3 mt-5\">Extroversion</h3>\n                <p className=\"text-light\">The trait is marked by pronounced engagement with the external world. Extroverts enjoy interacting with people, and are often perceived as full of energy. They tend to be enthusiastic, action-oriented individuals. They possess high group visibility, like to talk, and assert themselves.  Introverts have lower social engagement and energy levels than extroverts. They tend to seem quiet, low-key, deliberate, and less involved in the social world.</p>\n                <div>\n                  <h5 className=\"fw-bold text-white mb-4 mt-5\">Is your character extroverted or introverted? This will change the abilities and traits available.</h5>\n                  <div className=\"d-flex\">\n                    <div className=\"custom-control form-check me-3\">\n                      <input type=\"radio\" aria-label=\"Extroverted\" name=\"extroversion\" id=\"Extroverted\" className=\"me-2 form-check-input\" defaultChecked /><label htmlFor=\"Extroverted\" className=\"text-white form-check-label fw-normal\">Extroverted</label>\n                    </div>\n                    <div className=\"custom-control form-check\">\n                      <input type=\"radio\" aria-label=\"Introverted\" name=\"extroversion\" id=\"Introverted\" className=\"me-2 form-check-input\" /><label htmlFor=\"Introverted\" className=\"text-white form-check-label fw-normal\">Introverted</label>\n                    </div>\n                  </div>\n                </div>\n                <div>\n                  <h5 className=\"fw-bold text-white mb-4 mt-5\">Passive Abilities (10 Points Each)</h5>\n                  <div className=\"radio-card d-flex align-items-center p-3 mb-3\">\n                    <input type=\"checkbox\" aria-label=\"social butterfly\" id=\"social-butterfly\" className=\"form-check-input\" />\n                    <label htmlFor=\"social-butterfly\" className=\"text-white form-check-label fw-normal p-3 w-100\">\n                      <h6 className=\"text-white fw-bold\">Social Butterfly</h6>\n                      <p className=\"text-light mb-0\">Recharge your HP meters through social events and interactions.</p>\n                    </label>\n                  </div>\n                  <div className=\"radio-card d-flex align-items-center p-3 mb-3\">\n                    <input type=\"checkbox\" aria-label=\"Life of the Party\" id=\"life-party\" className=\"form-check-input\" />\n                    <label htmlFor=\"life-party\" className=\"text-white form-check-label fw-normal p-3 w-100\">\n                      <h6 className=\"text-white fw-bold\">Life of the Party</h6>\n                      <p className=\"text-light mb-0\">Receive a bonus to social skills and charm.</p>\n                    </label>\n                  </div>\n                  <div className=\"radio-card d-flex align-items-center p-3 mb-3\">\n                    <input type=\"checkbox\" aria-label=\"Friends in All Places\" id=\"friends\" className=\"form-check-input\" />\n                    <label htmlFor=\"friends\" className=\"text-white form-check-label fw-normal p-3 w-100\">\n                      <h6 className=\"text-white fw-bold\">Friends in [All] Places</h6>\n                      <p className=\"text-light mb-0\">You have a large network of friends in a variety of places but few close friends. It's also quite a bit easier for you to make new friends.</p>\n                    </label>\n                  </div>\n                  <div className=\"radio-card d-flex align-items-center p-3 mb-3\">\n                    <input type=\"checkbox\" aria-label=\"Empassioned Leadership\" id=\"empassioned\" className=\"form-check-input\" />\n                    <label htmlFor=\"empassioned\" className=\"text-white form-check-label fw-normal p-3 w-100\">\n                      <h6 className=\"text-white fw-bold\">Empassioned Leadership</h6>\n                      <p className=\"text-light mb-0\">If you have time to give a speech, your party will get -1 to their first role in that conflict.</p>\n                    </label>\n                  </div>\n                </div>\n                <div>\n                  <h5 className=\"fw-bold text-white mb-4 mt-5\">Character Traits</h5>\n                  <div className=\"d-flex flex-wrap\">\n                    <div className=\"custom-control custom-checkbox me-3 mb-3\">\n                      <input type=\"checkbox\" aria-label=\"Optimist\" name=\"extroversion-traits\" id=\"Optimist\" className=\"me-2 form-check-input\" /><label htmlFor=\"Optimist\" className=\"text-white form-check-label fw-normal\">Optimist</label>\n                    </div>\n                    <div className=\"custom-control custom-checkbox me-3\">\n                      <input type=\"checkbox\" aria-label=\"Flamboyant\" name=\"extroversion-traits\" id=\"Flamboyant\" className=\"me-2 form-check-input\" /><label htmlFor=\"Flamboyant\" className=\"text-white form-check-label fw-normal\">Flamboyant</label>\n                    </div>\n                    <div className=\"custom-control custom-checkbox me-3\">\n                      <input type=\"checkbox\" aria-label=\"Talkative\" name=\"extroversion-traits\" id=\"Talkative\" className=\"me-2 form-check-input\" /><label htmlFor=\"Talkative\" className=\"text-white form-check-label fw-normal\">Talkative</label>\n                    </div>\n                    <div className=\"custom-control custom-checkbox me-3\">\n                      <input type=\"checkbox\" aria-label=\"Bubbly\" name=\"extroversion-traits\" id=\"Bubbly\" className=\"me-2 form-check-input\" /><label htmlFor=\"Bubbly\" className=\"text-white form-check-label fw-normal\">Bubbly</label>\n                    </div>\n                    <div className=\"custom-control custom-checkbox me-3\">\n                      <input type=\"checkbox\" aria-label=\"Gregarious\" name=\"extroversion-traits\" id=\"Gregarious\" className=\"me-2 form-check-input\" /><label htmlFor=\"Gregarious\" className=\"text-white form-check-label fw-normal\">Gregarious</label>\n                    </div>\n                    <div className=\"custom-control custom-checkbox me-3\">\n                      <input type=\"checkbox\" aria-label=\"Enthusiastic\" name=\"extroversion-traits\" id=\"Enthusiastic\" className=\"me-2 form-check-input\" /><label htmlFor=\"Enthusiastic\" className=\"text-white form-check-label fw-normal\">Enthusiastic</label>\n                    </div>\n                    <div>\n                      <input type=\"checkbox\" aria-label=\"Asserting\" name=\"extroversion-traits\" id=\"Asserting\" className=\"me-2 form-check-input\" /><label htmlFor=\"Asserting\" className=\"text-white form-check-label fw-normal\">Asserting</label>\n                    </div>\n                  </div>\n                </div>\n              </div>\n              <div className=\"pb-5 border-bottom\">\n                <h3 className=\"text-white fw-bold mb-3 mt-5\">Agreeableness</h3>\n                <p className=\"text-light\">The agreeableness trait reflects individual differences in general concern for social harmony. Agreeable/selfess individuals value getting along with others. They are generally considerate, kind, generous, trusting and trustworthy, helpful, and willing to compromise their interests with others. Agreeable people also have an optimistic view of human nature. Disagreeable/selfish individuals place self-interest above getting along with others.</p>\n                <div>\n                  <h5 className=\"fw-bold text-white mb-4 mt-5\">Is your character selfless or selfish? This will change the abilities and traits available.</h5>\n                  <div className=\"d-flex\">\n                    <div className=\"custom-control form-check me-3\">\n                      <input type=\"radio\" aria-label=\"Selfless\" name=\"selflessness\" id=\"Selfless\" className=\"me-2 form-check-input\" defaultChecked /><label htmlFor=\"Selfless\" className=\"text-white form-check-label fw-normal\">Selfless</label>\n                    </div>\n                    <div className=\"custom-control form-check\">\n                      <input type=\"radio\" aria-label=\"Selfish\" name=\"selflessness\" id=\"Selfish\" className=\"me-2 form-check-input\" /><label htmlFor=\"Selfish\" className=\"text-white form-check-label fw-normal\">Selfish</label>\n                    </div>\n                  </div>\n                </div>\n                <div>\n                  <h5 className=\"fw-bold text-white mb-4 mt-5\">Passive Abilities (10 Points Each)</h5>\n                  <div className=\"radio-card d-flex align-items-center p-3 mb-3\">\n                    <input type=\"checkbox\" aria-label=\"social butterfly\" id=\"kinship\" className=\"form-check-input\" />\n                    <label htmlFor=\"kinship\" className=\"text-white form-check-label fw-normal p-3 w-100\">\n                      <h6 className=\"text-white fw-bold\">Kinship</h6>\n                      <p className=\"text-light mb-0\">You care for your people and they care for you. Or so it feels. Any time you sacrifice for the party you can receive emotional HP back. Sacrificing can include giving/buying gifts, taking hits for other people, putting yourself in a precarious situation to help a team mate, etc.</p>\n                    </label>\n                  </div>\n                  <div className=\"radio-card d-flex align-items-center p-3 mb-3\">\n                    <input type=\"checkbox\" aria-label=\"Lead by Doing\" id=\"lead-by-doing\" className=\"form-check-input\" />\n                    <label htmlFor=\"lead-by-doing\" className=\"text-white form-check-label fw-normal p-3 w-100\">\n                      <h6 className=\"text-white fw-bold\">Lead By Doing</h6>\n                      <p className=\"text-light mb-0\">When you lead the charge, take on risk for the group or put others before you in a conflict situation, subtract 1 to everyone else's rolls.</p>\n                    </label>\n                  </div>\n                  <div className=\"radio-card d-flex align-items-center p-3 mb-3\">\n                    <input type=\"checkbox\" aria-label=\"Minimalism\" id=\"Minimalism\" className=\"form-check-input\" />\n                    <label htmlFor=\"Minimalism\" className=\"text-white form-check-label fw-normal p-3 w-100\">\n                      <h6 className=\"text-white fw-bold\">Minimalism</h6>\n                      <p className=\"text-light mb-0\">You have removed yourself from material attachment. You can survive off very little and have no issues with giving up valuable items. You have the ability to find use in reusable items, take no emotional damage from poor accommodations, rations or any other quality of life items.</p>\n                    </label>\n                  </div>\n                  <div className=\"radio-card d-flex align-items-center p-3 mb-3\">\n                    <input type=\"checkbox\" aria-label=\"Empassioned Leadership\" id=\"empassioned\" className=\"form-check-input\" />\n                    <label htmlFor=\"empassioned\" className=\"text-white form-check-label fw-normal p-3 w-100\">\n                      <h6 className=\"text-white fw-bold\">Empassioned Leadership</h6>\n                      <p className=\"text-light mb-0\">If you have time to give a speech, your party will get -1 to their first role in that conflict.</p>\n                    </label>\n                  </div>\n                </div>\n                <div>\n                  <h5 className=\"fw-bold text-white mb-4 mt-5\">Character Traits</h5>\n                  <div className=\"d-flex flex-wrap\">\n                    <div className=\"custom-control custom-checkbox me-3 mb-3\">\n                      <input type=\"checkbox\" aria-label=\"Optimist\" name=\"extroversion-traits\" id=\"Optimist\" className=\"me-2 form-check-input\" /><label htmlFor=\"Optimist\" className=\"text-white form-check-label fw-normal\">Optimist</label>\n                    </div>\n                    <div className=\"custom-control custom-checkbox me-3\">\n                      <input type=\"checkbox\" aria-label=\"Flamboyant\" name=\"extroversion-traits\" id=\"Flamboyant\" className=\"me-2 form-check-input\" /><label htmlFor=\"Flamboyant\" className=\"text-white form-check-label fw-normal\">Flamboyant</label>\n                    </div>\n                    <div className=\"custom-control custom-checkbox me-3\">\n                      <input type=\"checkbox\" aria-label=\"Talkative\" name=\"extroversion-traits\" id=\"Talkative\" className=\"me-2 form-check-input\" /><label htmlFor=\"Talkative\" className=\"text-white form-check-label fw-normal\">Talkative</label>\n                    </div>\n                    <div className=\"custom-control custom-checkbox me-3\">\n                      <input type=\"checkbox\" aria-label=\"Bubbly\" name=\"extroversion-traits\" id=\"Bubbly\" className=\"me-2 form-check-input\" /><label htmlFor=\"Bubbly\" className=\"text-white form-check-label fw-normal\">Bubbly</label>\n                    </div>\n                    <div className=\"custom-control custom-checkbox me-3\">\n                      <input type=\"checkbox\" aria-label=\"Gregarious\" name=\"extroversion-traits\" id=\"Gregarious\" className=\"me-2 form-check-input\" /><label htmlFor=\"Gregarious\" className=\"text-white form-check-label fw-normal\">Gregarious</label>\n                    </div>\n                    <div className=\"custom-control custom-checkbox me-3\">\n                      <input type=\"checkbox\" aria-label=\"Enthusiastic\" name=\"extroversion-traits\" id=\"Enthusiastic\" className=\"me-2 form-check-input\" /><label htmlFor=\"Enthusiastic\" className=\"text-white form-check-label fw-normal\">Enthusiastic</label>\n                    </div>\n                    <div>\n                      <input type=\"checkbox\" aria-label=\"Asserting\" name=\"extroversion-traits\" id=\"Asserting\" className=\"me-2 form-check-input\" /><label htmlFor=\"Asserting\" className=\"text-white form-check-label fw-normal\">Asserting</label>\n                    </div>\n                  </div>\n                </div>\n              </div>\n              <div className=\"pb-3\">\n                <h3 className=\"text-white fw-bold mb-3 mt-5\">Neuroticism</h3>\n                <p className=\"text-light\">The trait is marked by pronounced engagement with the external world. Extroverts enjoy interacting with people, and are often perceived as full of energy. They tend to be enthusiastic, action-oriented individuals. They possess high group visibility, like to talk, and assert themselves.  Introverts have lower social engagement and energy levels than extroverts. They tend to seem quiet, low-key, deliberate, and less involved in the social world.</p>\n                <div>\n                  <h5 className=\"fw-bold text-white mb-4 mt-5\">Is your character extroverted or introverted? This will change the abilities and traits available.</h5>\n                  <div className=\"d-flex\">\n                    <div className=\"custom-control form-check me-3\">\n                      <input type=\"radio\" aria-label=\"Extroverted\" name=\"extroversion\" id=\"Extroverted\" className=\"me-2 form-check-input\" defaultChecked /><label htmlFor=\"Extroverted\" className=\"text-white form-check-label fw-normal\">Extroverted</label>\n                    </div>\n                    <div className=\"custom-control form-check\">\n                      <input type=\"radio\" aria-label=\"Introverted\" name=\"extroversion\" id=\"Introverted\" className=\"me-2 form-check-input\" /><label htmlFor=\"Introverted\" className=\"text-white form-check-label fw-normal\">Introverted</label>\n                    </div>\n                  </div>\n                </div>\n                <div>\n                  <h5 className=\"fw-bold text-white mb-4 mt-5\">Passive Abilities (10 Points Each)</h5>\n                  <div className=\"radio-card d-flex align-items-center p-3 mb-3\">\n                    <input type=\"checkbox\" aria-label=\"social butterfly\" id=\"social-butterfly\" className=\"form-check-input\" />\n                    <label htmlFor=\"social-butterfly\" className=\"text-white form-check-label fw-normal p-3 w-100\">\n                      <h6 className=\"text-white fw-bold\">Social Butterfly</h6>\n                      <p className=\"text-light mb-0\">Recharge your HP meters through social events and interactions.</p>\n                    </label>\n                  </div>\n                  <div className=\"radio-card d-flex align-items-center p-3 mb-3\">\n                    <input type=\"checkbox\" aria-label=\"Life of the Party\" id=\"life-party\" className=\"form-check-input\" />\n                    <label htmlFor=\"life-party\" className=\"text-white form-check-label fw-normal p-3 w-100\">\n                      <h6 className=\"text-white fw-bold\">Life of the Party</h6>\n                      <p className=\"text-light mb-0\">Receive a bonus to social skills and charm.</p>\n                    </label>\n                  </div>\n                  <div className=\"radio-card d-flex align-items-center p-3 mb-3\">\n                    <input type=\"checkbox\" aria-label=\"Friends in All Places\" id=\"friends\" className=\"form-check-input\" />\n                    <label htmlFor=\"friends\" className=\"text-white form-check-label fw-normal p-3 w-100\">\n                      <h6 className=\"text-white fw-bold\">Friends in [All] Places</h6>\n                      <p className=\"text-light mb-0\">You have a large network of friends in a variety of places but few close friends. It's also quite a bit easier for you to make new friends.</p>\n                    </label>\n                  </div>\n                  <div className=\"radio-card d-flex align-items-center p-3 mb-3\">\n                    <input type=\"checkbox\" aria-label=\"Empassioned Leadership\" id=\"empassioned\" className=\"form-check-input\" />\n                    <label htmlFor=\"empassioned\" className=\"text-white form-check-label fw-normal p-3 w-100\">\n                      <h6 className=\"text-white fw-bold\">Empassioned Leadership</h6>\n                      <p className=\"text-light mb-0\">If you have time to give a speech, your party will get -1 to their first role in that conflict.</p>\n                    </label>\n                  </div>\n                </div>\n                <div>\n                  <h5 className=\"fw-bold text-white mb-4 mt-5\">Character Traits</h5>\n                  <div className=\"d-flex flex-wrap\">\n                    <div className=\"custom-control custom-checkbox me-3 mb-3\">\n                      <input type=\"checkbox\" aria-label=\"Optimist\" name=\"extroversion-traits\" id=\"Optimist\" className=\"me-2 form-check-input\" /><label htmlFor=\"Optimist\" className=\"text-white form-check-label fw-normal\">Optimist</label>\n                    </div>\n                    <div className=\"custom-control custom-checkbox me-3\">\n                      <input type=\"checkbox\" aria-label=\"Flamboyant\" name=\"extroversion-traits\" id=\"Flamboyant\" className=\"me-2 form-check-input\" /><label htmlFor=\"Flamboyant\" className=\"text-white form-check-label fw-normal\">Flamboyant</label>\n                    </div>\n                    <div className=\"custom-control custom-checkbox me-3\">\n                      <input type=\"checkbox\" aria-label=\"Talkative\" name=\"extroversion-traits\" id=\"Talkative\" className=\"me-2 form-check-input\" /><label htmlFor=\"Talkative\" className=\"text-white form-check-label fw-normal\">Talkative</label>\n                    </div>\n                    <div className=\"custom-control custom-checkbox me-3\">\n                      <input type=\"checkbox\" aria-label=\"Bubbly\" name=\"extroversion-traits\" id=\"Bubbly\" className=\"me-2 form-check-input\" /><label htmlFor=\"Bubbly\" className=\"text-white form-check-label fw-normal\">Bubbly</label>\n                    </div>\n                    <div className=\"custom-control custom-checkbox me-3\">\n                      <input type=\"checkbox\" aria-label=\"Gregarious\" name=\"extroversion-traits\" id=\"Gregarious\" className=\"me-2 form-check-input\" /><label htmlFor=\"Gregarious\" className=\"text-white form-check-label fw-normal\">Gregarious</label>\n                    </div>\n                    <div className=\"custom-control custom-checkbox me-3\">\n                      <input type=\"checkbox\" aria-label=\"Enthusiastic\" name=\"extroversion-traits\" id=\"Enthusiastic\" className=\"me-2 form-check-input\" /><label htmlFor=\"Enthusiastic\" className=\"text-white form-check-label fw-normal\">Enthusiastic</label>\n                    </div>\n                    <div>\n                      <input type=\"checkbox\" aria-label=\"Asserting\" name=\"extroversion-traits\" id=\"Asserting\" className=\"me-2 form-check-input\" /><label htmlFor=\"Asserting\" className=\"text-white form-check-label fw-normal\">Asserting</label>\n                    </div>\n                  </div>\n                </div>\n              </div>\n            </div>\n            <div className=\"col-md-4 mt-5\">\n              <div className=\"p-4 bg-lighter point-calculator\">\n                <h6 className=\"text-white fw-bold\">Total Points Calculator</h6>\n                <h6 className=\"text-white\"><span className=\"utilized\">0</span> / 150 Utilized</h6>\n                <p className=\"text-light mb-0\"><small>This will be used for both abilities and skills. Choose wisely!</small></p>\n              </div>\n            </div>\n          </div>\n        </div>\n        <div className=\"container mb-5\">\n          <div className=\"d-flex w-100 no-gutter align-items-center mb-2 mt-4 justify-content-between\">\n            <a className=\"justify-content-start text-white\" href=\"#actionAbilities\">Back to Action Abilities</a>\n            <a className=\"btn btn-primary d-flex align-items-center justify-content-end\" href=\"#flaws\">Continue to Flaws</a>\n          </div>\n        </div>\n      </>\n    );\n  }\n}\n","import React from 'react';\n\nexport interface IFlawsProps {\n}\n\ninterface IFlawsState {\n\n}\n\nexport class Flaws extends React.Component<IFlawsProps, IFlawsState> {\n  constructor(props: IFlawsProps) {\n    super(props);\n    this.state = {};\n  }\n\n  public render() {\n    return (\n      <>\n        <div className=\"container  border-bottom mt-5 pb-5\">\n          <h1 className=\"text-white mb-4\">Flaws</h1>\n          <p className=\"text-light\">This section describes flawed aspects of your character. For every Affliction you take, select the effect that affliction has on your character.</p>\n        </div>\n        <div className=\"container border-bottom\">\n          <div className=\"row justify-content-between\">\n            <div className=\"col-md-7 mt-5 pb-md-5\">\n              <div>\n                <h5 className=\"fw-bold text-white mb-4\">Add Flaws</h5>\n                <div className=\"radio-card mb-4 p-3\">\n                  <div className=\"row\">\n                    <div className=\"col\">\n                      <label htmlFor=\"flaw-name\" className=\"form-label text-white fw-bold\">Flaw Name</label>\n                      <div className=\"input-group \">\n                        <input type=\"text\" className=\"form-control form-control-lg mb-3\" id=\"flaw-name\" />\n                      </div>\n                    </div>\n                  </div>\n                  <div className=\"row\">\n                    <div className=\"col-md-4\">\n                      <label htmlFor=\"species\" className=\"form-label text-white fw-bold\">Skill</label>\n                      <select className=\"form-select form-select-lg \" id=\"skill\">\n                        <option disabled>Select Category</option>\n                        <option>Bias</option>\n                        <option>Limitation</option>\n                        <option>Imperfection</option>\n                        <option>Problem</option>\n                        <option>Personality Disorder</option>\n                        <option>Vice</option>\n                        <option>Phobia</option>\n                        <option>Prejudice</option>\n                        <option>Deficiency</option>\n                      </select>\n                    </div>\n                    <div className=\"col-md-4\">\n                      <label htmlFor=\"species\" className=\"form-label text-white fw-bold\">DNA Affection</label>\n                      <select className=\"form-select form-select-lg \" id=\"skill\">\n                        <option disabled>Select DNA</option>\n                        <option>Physical</option>\n                        <option>Emotional</option>\n                        <option>Intellectual</option>\n                      </select>\n                    </div>\n                    <div className=\"col-md-4\">\n                      <label htmlFor=\"species\" className=\"form-label text-white fw-bold\">Intensity</label>\n                      <select className=\"form-select form-select-lg \" id=\"skill\">\n                        <option disabled>Select Intensity</option>\n                        <option>Minor (-10 Points)</option>\n                        <option>Major (-20 Points)</option>\n                        <option>Fatal (-30 Points)</option>\n                      </select>\n                    </div>\n                  </div>\n                  <div className=\"row mt-3\">\n                    <div className=\"col\">\n                      <label htmlFor=\"species\" className=\"form-label text-white fw-bold\">Effect</label>\n                      <select className=\"form-select form-select-lg \" id=\"skill\">\n                        <option disabled>Select Effect</option>\n                        <option>Start of the Session: The GM rolls a 6-sided die. If it lands on 1, then you will have to deal with this affliction throughout the session.</option>\n                        <option>Every Roll: Every time you roll in the affected DNA category and fail, your affliction causes 1 extra damage.</option>\n                        <option>When Encountering: If your character encouters your affliction then they suffer -1 to all skill checks in the DNA category.</option>\n                        <option>Skill Effect: This affliction affects a skill by lowering it -1.</option>\n                        <option>Special Effect: Roll willpower check, on failure you are affected by your affliction.</option>\n                      </select>\n                    </div>\n                  </div>\n                </div>\n                <div>\n                  <button type=\"button\" className=\"btn btn-link\">\n                    <img src=\"images/add_white.svg\" alt=\"\" />\n                    Add Additional Flaw\n                  </button>\n                </div>\n              </div>\n            </div>\n            <div className=\"col-md-4 mt-5\">\n              <div className=\"p-4 bg-lighter point-calculator mb-5\">\n                <div className=\"border-bottom pb-4\">\n                  <h6 className=\"text-white fw-bold\">DNA Balancer</h6>\n                  <h6 className=\"text-white\"><span className=\"utilized\">0</span> Balance Level</h6>\n                  <p className=\"text-light mb-0\"><small>Your balance level must equal 0.</small></p>\n                </div>\n                <div className=\"mt-4\">\n                  <h6 className=\"text-white fw-bold\">Total Points Calculator</h6>\n                  <h6 className=\"text-white\"><span className=\"utilized\">0</span> / 150 Utilized</h6>\n                  <p className=\"text-light mb-0\"><small>This will be used for both abilities and skills. Choose wisely!</small></p>\n                </div>\n              </div>\n            </div>\n          </div>\n        </div>\n        <div className=\"container mb-5\">\n          <div className=\"d-flex w-100 no-gutter align-items-center mb-2 mt-4 justify-content-between\">\n            <a className=\"justify-content-start text-white\" href=\"#dnaSkills\">Back to DNA & Skills</a>\n            <a className=\"btn btn-primary d-flex align-items-center justify-content-end\" href=\"#motive\">Continue to Motive</a>\n          </div>\n        </div>\n      </>\n    );\n  }\n}\n","import React from 'react';\n\nexport interface IMotiveProps {\n}\n\ninterface IMotiveState {\n\n}\n\nexport class Motive extends React.Component<IMotiveProps, IMotiveState> {\n  constructor(props: IMotiveProps) {\n    super(props);\n    this.state = {};\n  }\n\n  public render() {\n    return (\n      <>\n        <div className=\"container  border-bottom mt-5 pb-5\">\n          <h1 className=\"text-white mb-4\">Motive</h1>\n          <p className=\"text-light\">This section describes the motivation of your character.</p>\n        </div>\n        <div className=\"container border-bottom\">\n          <div className=\"row justify-content-between\">\n            <div className=\"col-md-7 mt-5 pb-5\">\n              <div>\n                <h5 className=\"fw-bold text-white mb-4\">Create Motivation</h5>\n                <div className=\"row\">\n                  <div className=\"col\">\n                    <label htmlFor=\"species\" className=\"form-label text-white fw-bold\">Motivation Type</label>\n                    <select className=\"form-select form-select-lg\" id=\"skill\">\n                      <option disabled>Select Motivation</option>\n                      <option>CUSTOM</option>\n                      <option>ACHIEVING DOMINION OVER ANOTHER (DARK)</option>\n                      <option>ACHIEVING SPIRITUAL ENLIGHTENMENT</option>\n                      <option>AVOIDING CERTAIN DEATH</option>\n                      <option>AVOIDING FINANCIAL RUIN</option>\n                      <option>BEATING A DIAGNOSIS OR CONDITION</option>\n                      <option>BECOMING A LEADER OF OTHERS</option>\n                      <option>BECOMING THE SOLE POWER OR AUTHORITY (DARK)</option>\n                      <option>BEING ACCEPTED BY OTHERS</option>\n                      <option>BEING ACKNOWLEDGED OR APPRECIATED BY FAMILY</option>\n                      <option>BEING A PHILANTHROPIST</option>\n                      <option>BEING THE BEST AT SOMETHING</option>\n                      <option>BREAKING PEOPLE SO THEY ABANDON THEIR BELIEFS (DARK)</option>\n                      <option>CARING FOR AN AGING PARENT</option>\n                      <option>CARRYING ON A LEGACY</option>\n                      <option>CATCHING THE BAD GUY OR GIRL</option>\n                      <option>CAUSING SOMEONE PAIN (DARK)</option>\n                      <option>COMING TO GRIPS WITH A MENTAL DISORDER</option>\n                      <option>CONTROLLING OTHERS (DARK)</option>\n                      <option>COPING WITH A LEARNING DISABILITY OR ILLNESS (KIDLIT)</option>\n                      <option>CORRECTING A PERCEIVED MISTAKE (DARK)</option>\n                      <option>CREATING OR DISCOVERING SOMETHING IMPORTANT</option>\n                      <option>DEALING WITH BULLIES (KIDLIT)</option>\n                      <option>DISCOVERING ONE'S TRUE SELF</option>\n                      <option>DOING THE RIGHT THING</option>\n                      <option>DOING THE RIGHT THING (KIDLIT)</option>\n                      <option>EMBRACING A PERSONAL IDENTITY (KIDLIT)</option>\n                      <option>ESCAPING A DANGEROUS LIFE ONE NO LONGER WANTS TO LIVE</option>\n                      <option>ESCAPING A KILLER</option>\n                      <option>ESCAPING CONFINEMENT</option>\n                      <option>ESCAPING DANGER (KIDLIT)</option>\n                      <option>ESCAPING HOMELESSNESS</option>\n                      <option>ESCAPING INVADERS</option>\n                      <option>ESCAPING WIDESPREAD DISASTER</option>\n                      <option>EVADING RESPONSIBILITY (DARK)</option>\n                      <option>EXPLORING ONE'S BIOLOGICAL ROOTS</option>\n                      <option>FINDING A LIFELONG PARTNER</option>\n                      <option>FINDING FRIENDSHIP OR COMPANIONSHIP</option>\n                      <option>FINDING ONE'S PURPOSE</option>\n                      <option>FINDING SOMETHING LOST</option>\n                      <option>FITTING IN (KIDLIT)</option>\n                      <option>FORCING A BIG CHANGE (DARK)</option>\n                      <option>FORCING CONVERSION (DARK)</option>\n                      <option>FORGIVING ONESELF</option>\n                      <option>GAINING CONTROL OVER ONE'S OWN LIFE</option>\n                      <option>GETTING REVENGE (DARK)</option>\n                      <option>GIVING UP A CHILD</option>\n                      <option>HAVING A CHILD</option>\n                      <option>HAVING IT ALL (DARK)</option>\n                      <option>HELPING A LOVED ONE RECOGNIZE THEY ARE HURTING THEMSELVES AND OTHERS</option>\n                      <option>KEEPING WHAT ONE HAS NO MATTER WHAT (DARK)</option>\n                      <option>LEARNING TO TRUST (KIDLIT)</option>\n                      <option>MAKING SOMEONE PROUD</option>\n                      <option>NAVIGATING A CHANGING FAMILY SITUATION (KIDLIT)</option>\n                      <option>OBLITERATING AN ENEMY (DARK)</option>\n                      <option>OBSESSIVELY PURSUING A RELATIONSHIP (DARK)</option>\n                      <option>OBTAINING GLORY WHATEVER THE COST (DARK)</option>\n                      <option>OBTAINING SHELTER FROM THE ELEMENTS</option>\n                      <option>OVERCOMING ABUSE AND LEARNING TO TRUST</option>\n                      <option>OVERCOMING ADDICTION</option>\n                      <option>OVERCOMING A DEBILITATING FEAR</option>\n                      <option>OVERCOMING A FEAR (KIDLIT)</option>\n                      <option>OVERTHROWING GOOD WITH EVIL (DARK)</option>\n                      <option>PROFITEERING (DARK)</option>\n                      <option>PROMOTING CHAOS (DARK)</option>\n                      <option>PROTECTING A LOVED ONE</option>\n                      <option>PROTECTING ONE'S HOME OR PROPERTY</option>\n                      <option>PROVIDING FOR ONE'S FAMILY</option>\n                      <option>PROVIDING SECURITY FOR FUTURE GENERATIONS</option>\n                      <option>PROVING SOMEONE WRONG</option>\n                      <option>PURSUING A PASSION</option>\n                      <option>PURSUING A TOXIC DESIRE (DARK)</option>\n                      <option>PURSUING JUSTICE FOR ONESELF OR OTHERS</option>\n                      <option>PURSUING KNOWLEDGE</option>\n                      <option>PURSUING MASTERY OF A SKILL OR TALENT</option>\n                      <option>REALIZING A DREAM</option>\n                      <option>RECONCILING WITH AN ESTRANGED FAMILY MEMBER</option>\n                      <option>REPAYING A DEBT</option>\n                      <option>RESCUING A LOVED ONE FROM A CAPTOR</option>\n                      <option>RESISTING PEER PRESSURE (KIDLIT)</option>\n                      <option>RESTORING ONE'S NAME OR REPUTATION</option>\n                      <option>RIGHTING A DEEP WRONG</option>\n                      <option>RUINING SOMEONE'S LIFE (DARK)</option>\n                      <option>RUINING SOMEONE'S REPUTATION (DARK)</option>\n                      <option>SAVING THE WORLD</option>\n                      <option>SEEKING DEATH (DARK)</option>\n                      <option>SERVING OTHERS</option>\n                      <option>SOLVING A PROBLEM (KIDLIT)</option>\n                      <option>STOPPING AN EVENT FROM HAPPENING</option>\n                      <option>SUPPORTING ONESELF FINANCIALLY</option>\n                      <option>SURVIVING LOSS</option>\n                      <option>SURVIVING THE DEATH OF A LOVED ONE</option>\n                      <option>TAKING WHAT ONE IS OWED (DARK)</option>\n                      <option>TRYING SOMETHING NEW (KIDLIT)</option>\n                      <option>TRYING TO SUCCEED WHERE ONE HAS PREVIOUSLY FAILED</option>\n                      <option>WINNING A COMPETITION</option>\n                    </select>\n                  </div>\n                </div>\n                <div className=\"mt-4\">\n                  <label htmlFor=\"motiveDescription\" className=\"fw-bold text-white mb-2\">Description</label>\n                  <textarea id=\"motiveDescription\" className=\"col form-control\"></textarea>\n                </div>\n                <div className=\"mt-4\">\n                  <label htmlFor=\"resolution\" className=\"fw-bold text-white mb-2\">Resolution</label>\n                  <textarea id=\"resolution\" className=\"col form-control\"></textarea>\n                </div>\n              </div>\n            </div>\n            <div className=\"col-md-4 mt-md-5 mb-5\">\n              <div className=\"p-4 bg-lighter point-calculator\">\n                <div className=\"border-bottom pb-4\">\n                  <h6 className=\"text-white fw-bold\">DNA Balancer</h6>\n                  <h6 className=\"text-white\"><span className=\"utilized\">0</span> Balance Level</h6>\n                  <p className=\"text-light mb-0\"><small>Your balance level must equal 0.</small></p>\n                </div>\n                <div className=\"mt-4\">\n                  <h6 className=\"text-white fw-bold\">Total Points Calculator</h6>\n                  <h6 className=\"text-white\"><span className=\"utilized\">0</span> / 150 Utilized</h6>\n                  <p className=\"text-light mb-0\"><small>This will be used for both abilities and skills. Choose wisely!</small></p>\n                </div>\n              </div>\n            </div>\n          </div>\n        </div>\n        <div className=\"container mb-5\">\n          <div className=\"d-flex w-100 no-gutter align-items-center mb-2 mt-4 justify-content-between\">\n            <a className=\"justify-content-start text-white\" href=\"#flaws\">Back to Flaws</a>\n            <a className=\"btn btn-primary d-flex align-items-center justify-content-end\" href=\"#bioItems\">Continue to Bio & Items</a>\n          </div>\n        </div>\n      </>\n    );\n  }\n}\n","import React from 'react';\n\nexport interface IBioItemsProps {\n}\n\ninterface IBioItemsState {\n\n}\n\nexport class BioItems extends React.Component<IBioItemsProps, IBioItemsState> {\n  constructor(props: IBioItemsProps) {\n    super(props);\n    this.state = {};\n  }\n\n  public render() {\n    return (\n      <>\n        <div className=\"container  border-bottom mt-5 pb-5\">\n          <h1 className=\"text-white mb-4\">Biography & items</h1>\n          <p className=\"text-light\">Tell us more about your character and what items they have.</p>\n        </div>\n        <div className=\"container border-bottom\">\n          <div className=\"row justify-content-between\">\n            <div className=\"col-md-7 pb-5\">\n              <div className=\"row pb-5 border-bottom\">\n                <h5 className=\"fw-bold text-white mb-4 mt-5\">Biographical Information</h5>\n                <div className=\"container\">\n                  <label htmlFor=\"itemDescription\" className=\"fw-bold text-white mb-2\">Short Biography</label>\n                  <textarea id=\"itemDescription\" className=\"col form-control text-white\"></textarea>\n                </div>\n                <div className=\"container mt-4\">\n                  <label htmlFor=\"itemDescription\" className=\"fw-bold text-white mb-2\">Extended Biography</label>\n                  <textarea id=\"itemDescription\" className=\"col form-control text-white\"></textarea>\n                </div>\n              </div>\n              <div className=\"pt-5\">\n                <h5 className=\"fw-bold text-white mb-4\">Add Items</h5>\n                <div className=\"radio-card mb-4 p-3\">\n                  <div className=\"row\">\n                    <div className=\"col\">\n                      <label htmlFor=\"flaw-name\" className=\"form-label text-white fw-bold\">Item Name</label>\n                      <div className=\"input-group \">\n                        <input type=\"text\" className=\"form-control form-control-lg mb-3\" id=\"item-name\" />\n                      </div>\n                    </div>\n                  </div>\n                  <div className=\"row\">\n                    <div className=\"col\">\n                      <label htmlFor=\"itemDescription\" className=\"fw-bold text-white mb-2\">Description</label>\n                      <textarea id=\"itemDescription\" className=\"col form-control text-white\"></textarea>\n                    </div>\n                  </div>\n                </div>\n                <div>\n                  <button type=\"button\" className=\"btn btn-link\">\n                    <img src=\"images/add_white.svg\" alt=\"\" />\n                    Add Additional Item\n                  </button>\n                </div>\n              </div>\n            </div>\n            <div className=\"col-md-4 mt-md-5 mb-5\">\n              <div className=\"p-4 bg-lighter point-calculator\">\n                <div className=\"border-bottom pb-4\">\n                  <h6 className=\"text-white fw-bold\">DNA Balancer</h6>\n                  <h6 className=\"text-white\"><span className=\"utilized\">0</span> Balance Level</h6>\n                  <p className=\"text-light mb-0\"><small>Your balance level must equal 0.</small></p>\n                </div>\n                <div className=\"mt-4\">\n                  <h6 className=\"text-white fw-bold\">Total Points Calculator</h6>\n                  <h6 className=\"text-white\"><span className=\"utilized\">0</span> / 150 Utilized</h6>\n                  <p className=\"text-light mb-0\"><small>This will be used for both abilities and skills. Choose wisely!</small></p>\n                </div>\n              </div>\n            </div>\n          </div>\n        </div>\n        <div className=\"container mb-5\">\n          <div className=\"d-flex w-100 no-gutter align-items-center mb-2 mt-4 justify-content-between\">\n            <a className=\"justify-content-start text-white\" href=\"#motive\">Back to Motive</a>\n            <a className=\"btn btn-primary d-flex align-items-center justify-content-end\" href=\"#mgs\">Finish Character</a>\n          </div>\n        </div>\n      </>\n    );\n  }\n}\n","import React from 'react';\r\n\r\nexport interface IPassiveAbilityAccordionProps {\r\n  persName: string;\r\n  abilityName: string;\r\n  abilityDesc: string;\r\n}\r\n\r\ninterface IPassiveAbilityAccordionState {\r\n  isCollapsed: boolean;\r\n}\r\n\r\nexport class PassiveAbilityAccordion extends React.Component<IPassiveAbilityAccordionProps, IPassiveAbilityAccordionState> {\r\n  constructor(props: IPassiveAbilityAccordionProps) {\r\n    super(props);\r\n\r\n    this.state = { isCollapsed: true };\r\n  }\r\n\r\n  public render() {\r\n    return <div className=\"accordion-item\">\r\n    <h2 className=\"accordion-header\">\r\n      <button className=\"accordion-button collapsed\" type=\"button\" data-bs-toggle=\"collapse\" aria-expanded=\"false\"\r\n        onClick={ () => { this.setState({ isCollapsed: !this.state.isCollapsed }); } } >\r\n        <span className=\"fw-bold me-2\">{this.props.abilityName}</span> ({this.props.persName})\r\n      </button>\r\n    </h2>\r\n    <div className={\"accordion-collapse collapse\" + (this.state.isCollapsed ? \"\" : \" show\")} >\r\n      <div className=\"accordion-body\">{this.props.abilityDesc}</div>\r\n    </div>\r\n  </div>;\r\n  }\r\n}","import React from 'react';\nimport {Utils} from './Utils';\nimport {DataManager} from './DataManager';\nimport {CustomizableDataType, ICustomizableData, SavedTextValue} from './Common';\nimport {SelectData} from './Customizable/SelectData';\nimport {PersonalityData} from './Customizable/PersonalityData';\nimport {PassiveAbilityAccordion} from './Components/PassiveAbilityAccordion';\n\nexport interface ICharacterSheetProps {\n  onLoadingStateChange(isLoading: boolean, onComplete: () => void): void;\n}\n\ninterface ICharacterSheetState {\n  charUrl: string;\n  authKey: string;\n}\n\nexport class CharacterSheet extends React.Component<ICharacterSheetProps, ICharacterSheetState> {\n  private physCustomizations: ICustomizableData[];\n  private personalities: PersonalityData[];\n\n  constructor(props: ICharacterSheetProps) {\n    super(props);\n    const charId = Utils.GetCharId();\n    this.state = { charUrl: charId !== null ? charId : \"\", authKey: \"\" };\n\n    this.physCustomizations = [];\n    const physicalData = DataManager.GetCustomData(\"PhysicalData\");\n    if (physicalData != null) {\n      physicalData.forEach((data: ICustomizableData) => {\n        if (data != null) {\n          this.physCustomizations.push(data);\n        }\n      });\n    }\n\n    this.personalities = [];\n    const personalityData = DataManager.GetCustomData(\"PersonalityData\");\n    if (personalityData != null) {\n      personalityData.forEach((data: ICustomizableData) => {\n        if (data != null && data.DataType === CustomizableDataType.Personality) {\n          this.personalities.push(data as PersonalityData);\n        }\n      });\n    }\n  }\n\n  public render() {\n    const charLink = window.location.origin + \"/?c=\" + this.state.charUrl;\n\n    let portraitUrl = \"images/camera-placeholder.svg\";\n    let portraitUrlSaved = DataManager.GetData(\"physCharPortrait\", new SavedTextValue(\"\"));\n    if (portraitUrlSaved !== null && portraitUrlSaved.Value.length) {\n      portraitUrl = portraitUrlSaved.Value;\n    }\n\n    let charName = \"\";\n    let physItems = [];\n    for (const customization of this.physCustomizations) {\n      const savedValue = DataManager.GetData(customization._id, new SavedTextValue(\"\"));\n      if (savedValue !== null) {\n        let value: string | null = savedValue.Value;\n        if (customization.DataType === CustomizableDataType.Select) {\n          const selectData = customization as SelectData;\n          value = selectData.getValueOfOption(value);\n        }\n\n        if (value !== null && value.length > 0) {\n          if (customization._id === \"physCharName\") {\n            charName = value;\n          }\n\n          if (customization.getArg(\"HideOnMGS\") !== true) {\n            physItems.push(<div className=\"col-6 col-md-3\">\n              <h6 className=\"fw-bold text-white\">{customization.Name}</h6>\n              <p className=\"text-light\">{value}</p>\n            </div>);\n          }\n        }\n      }\n\n    }\n\n    let physGrouped = [];\n    for (let i = 0; i < physItems.length; i += 4) {\n      physGrouped.push(\n        <div key={\"physGrouped\" + i} className=\"row mt-4\">\n          {physItems[i]}\n          {(i + 1) < physItems.length ? physItems[i + 1] : \"\"}\n          {(i + 2) < physItems.length ? physItems[i + 2] : \"\"}\n          {(i + 3) < physItems.length ? physItems[i + 3] : \"\"}\n        </div>);\n    }\n\n    let charTraits = [];\n    for (const personality of this.personalities) {\n      let traits = personality.getDefaultTraits();\n      for (const trait of traits) {charTraits.push(trait.Name); }\n    }\n\n    let charAbilities = [];\n    for (const personality of this.personalities) {\n      let abilities = personality.getDefaultAbilities();\n      for (const ability of abilities) {\n        charAbilities.push(<PassiveAbilityAccordion key={\"charSheetAbility_\" + ability._id} persName={personality.Name} abilityName={ability.Name} abilityDesc={ability.Description} />);\n      }\n    }\n\n    return (\n      <>\n        <div className=\"container border-bottom mt-5 pb-5\">\n          <label className=\"form-input-label text-white mb-3\">Load Your Character</label>\n          <br />\n          <label className=\"form-input-label text-white mb-3\">Link to Character: <a href={charLink}>{charLink}</a></label>\n          <div className=\"row\">\n            <div className=\"col-md-4\">\n              <div className=\"input-group mb-3\">\n                <label className=\"form-input-label text-white\" id=\"charUrlLabel\">Character URL</label>\n                <input type=\"text\" className=\"form-control\" placeholder=\"\" aria-describedby=\"charUrlLabel\" value={this.state.charUrl} onChange={(e) => {\n                  this.setState({ charUrl: e.target.value });\n                }} />\n              </div>\n            </div>\n            <div className=\"col-md-4\">\n              <div className=\"input-group mb-3\">\n                <label className=\"form-input-label text-white\" id=\"authKeyLabel\">Auth Key</label>\n                <input type=\"text\" className=\"form-control\" placeholder=\"\" aria-describedby=\"authKeyLabel\" value={this.state.authKey} onChange={(e) => {\n                  this.setState({ authKey: e.target.value });\n                }} />\n              </div>\n            </div>\n            <div className=\"col-md-2\">\n              <button className=\"btn btn-secondary w-100\" onClick={() => { this.loadOnline(); }}>Load</button>\n            </div>\n            <div className=\"col-md-2\">\n              <button className=\"btn btn-primary col-md-2 w-100\" onClick={() => { this.saveOnline(); }}>Save</button>\n            </div>\n          </div>\n          <div className=\"row\">\n            <div className=\"col-md-8\">\n              <div className=\"input-group mb-3\">\n                <button className=\"btn btn-secondary\" type=\"button\" id=\"button-addon1\">Choose File</button>\n                <input type=\"text\" className=\"form-control\" placeholder=\"\" aria-label=\"Example text with button addon\" aria-describedby=\"button-addon1\" />\n              </div>\n            </div>\n            <div className=\"col-md-2\">\n              <button className=\"btn btn-secondary w-100\">Load</button>\n            </div>\n            <div className=\"col-md-2\">\n              <button className=\"btn btn-primary col-md-2 w-100\">Save</button>\n            </div>\n          </div>\n        </div>\n        <div className=\"container mt-5 mb-5\">\n          <div className=\"row\">\n            <div className=\"col-md-4\">\n              <img src={portraitUrl} alt=\"\" className=\"w-100\" />\n              <div className=\"bg-lighter point-calculator p-4 mt-5\">\n                <h5 className=\"text-white\">Items</h5>\n                <div className=\"mt-4\">\n                  <h6 className=\"text-white fw-bold\">Dévoiler</h6>\n                  <p className=\"text-light\">Mastercraft sword rewarded for his duty as a Les Dévotés agent</p>\n                </div>\n              </div>\n            </div>\n            <div className=\"col-md-8\">\n              <div className=\"d-flex justify-content-between w-100\">\n                <h1 className=\"text-white fw-bold\">{charName}</h1>\n                <button className=\"btn btn-secondary\">Edit</button>\n              </div>\n              <p className=\"text-light mt-3\">\n                \"Merovech is a man of integrity, honor and devout devotion to his king, country and religious order: Les Dévotés. His morals are guided by the gods and his religious sect. When given a command he is unrelenting in his dedication to completing the task pushing the limits of his code of honor. He travels with his wife, Radagund, two squired sons Otto and Lothaire as well as a squad of soldiers: Chlotar, Pepin and Segibert.\"\n              </p>\n\n              <ul className=\"nav nav-tabs\" id=\"myTab\" role=\"tablist\">\n                <li className=\"nav-item\" role=\"presentation\">\n                  <button className=\"nav-link active\" id=\"overview-tab\" data-bs-toggle=\"tab\" data-bs-target=\"#overview\" type=\"button\" role=\"tab\" aria-controls=\"overview\" aria-selected=\"true\">Overview</button>\n                </li>\n                <li className=\"nav-item\" role=\"presentation\">\n                  <button className=\"nav-link\" id=\"personality-tab\" data-bs-toggle=\"tab\" data-bs-target=\"#personality\" type=\"button\" role=\"tab\" aria-controls=\"personality\" aria-selected=\"false\">Personality & Skills</button>\n                </li>\n                <li className=\"nav-item\" role=\"presentation\">\n                  <button className=\"nav-link\" id=\"skills-tab\" data-bs-toggle=\"tab\" data-bs-target=\"#skills\" type=\"button\" role=\"tab\" aria-controls=\"skills\" aria-selected=\"false\">Skills & Action</button>\n                </li>\n              </ul>\n\n              <div className=\"tab-content\">\n                <div className=\"tab-pane active\" id=\"overview\" role=\"tabpanel\" aria-labelledby=\"home-tab\">\n                  <div className=\"mt-5\">\n                    <div className=\"row\">\n                      <h5 className=\"fw-bold text-white\">Basic Information</h5>\n                    </div>\n                    {physGrouped}\n                  </div>\n                  <div className=\"mt-5\">\n                    <div className=\"row\">\n                      <h5 className=\"fw-bold text-white\">Character Traits</h5>\n                    </div>\n                    <div className=\"d-flex flex-wrap mt-4\">\n                      {\n                        charTraits.map((item, index) => {\n                          return <p key={\"charSheetTrait\" + index} className=\"text-light me-3\">{item}</p>;\n                        })\n                      }\n                    </div>\n                  </div>\n                  <div className=\"mt-5\">\n                    <div className=\"row\">\n                      <h5 className=\"fw-bold text-white\">Custom Motive</h5>\n                    </div>\n                    <div className=\"mt-4\">\n                      <h6 className=\"fw-bold text-white\">Description</h6>\n                      <p className=\"text-light\">Merovech is hell bent on moving up the ranks of Les Dévotés and acquire land to go with his title.</p>\n                    </div>\n                    <div className=\"mt-4\">\n                      <h6 className=\"fw-bold text-white\">Resolution</h6>\n                      <p className=\"text-light\">Moving up a rank and acquiring an estate will fulfill this need.</p>\n                    </div>\n                  </div>\n                </div>\n                <div className=\"tab-pane\" id=\"personality\" role=\"tabpanel\" aria-labelledby=\"personality-tab\">\n                  <div>\n                    <div className=\"mt-5\">\n                      <h5 className=\"fw-bold text-white\">Passive Abilities</h5>\n                    </div>\n                    <div className=\"accordion accordion-flush mt-4\" id=\"accordionFlushExample\">\n                      {charAbilities}\n                    </div>\n                  </div>\n                  <div>\n                    <div className=\"mt-5\">\n                      <h5 className=\"fw-bold text-white\">Character Flaws</h5>\n                    </div>\n                    <div className=\"accordion accordion-flush mt-4\" id=\"accordionFlushFlaw\">\n                      <div className=\"accordion-item\">\n                        <h2 className=\"accordion-header\" id=\"flush-headingOne\">\n                          <button className=\"accordion-button collapsed\" type=\"button\" data-bs-toggle=\"collapse\" data-bs-target=\"#flush-flawCollapseOne\" aria-expanded=\"false\" aria-controls=\"flush-flawCollapseOne\">\n                            <span className=\"fw-bold me-2\">Temper</span> (Personality Disorder - Emotional - Major)\n                          </button>\n                        </h2>\n                        <div id=\"flush-flawCollapseOne\" className=\"accordion-collapse collapse\" aria-labelledby=\"flush-headingOne\" data-bs-parent=\"#accordionFlushFlaw\">\n                          <div className=\"accordion-body\">Every Roll: Each time you roll in the affected DNA category and fail, your affliction causes 2 extra damage.</div>\n                        </div>\n                      </div>\n                      <div className=\"accordion-item\">\n                        <h2 className=\"accordion-header\" id=\"flush-headingTwo\">\n                          <button className=\"accordion-button collapsed\" type=\"button\" data-bs-toggle=\"collapse\" data-bs-target=\"#flush-flawCollapseTwo\" aria-expanded=\"false\" aria-controls=\"flush-flawCollapseTwo\">\n                            <span className=\"fw-bold me-2\">Fanatic</span> ((Personality Disorder - Intellectual - Major)\n                          </button>\n                        </h2>\n                        <div id=\"flush-flawCollapseTwo\" className=\"accordion-collapse collapse\" aria-labelledby=\"flush-headingTwo\" data-bs-parent=\"#accordionFlushFlaw\">\n                          <div className=\"accordion-body\">Start of the Session: The GM rolls a 6-sided die. If it lands on 1 or 2, you will have to deal with this affliction throughout the session.</div>\n                        </div>\n                      </div>\n                    </div>\n                  </div>\n                  <div>\n                    <div className=\"mt-5\">\n                      <h5 className=\"fw-bold text-white\">Progressive Skills</h5>\n                    </div>\n                    <p className=\"text-light\"><i>No progressive skills available.</i></p>\n                  </div>\n                  <div>\n                    <div className=\"mt-5\">\n                      <h5 className=\"fw-bold text-white\">Sensitive Skills</h5>\n                    </div>\n                    <p className=\"text-light\"><i>No progressive skills available.</i></p>\n                  </div>\n                  <div>\n                    <div className=\"mt-5\">\n                      <h5 className=\"fw-bold text-white\">Introvert Skills</h5>\n                    </div>\n                    <p className=\"text-light\"><i>No progressive skills available.</i></p>\n                  </div>\n                </div>\n                <div className=\"tab-pane\" id=\"skills\" role=\"tabpanel\" aria-labelledby=\"skills-tab\">...</div>\n                <div className=\"tab-pane\" id=\"settings\" role=\"tabpanel\" aria-labelledby=\"settings-tab\">...</div>\n              </div>\n            </div>\n          </div>\n        </div>\n      </>\n    );\n  }\n\n  public onSaveDone(isSuccessful: boolean): void {\n    this.props.onLoadingStateChange(false, () => {});\n  }\n\n  private saveOnline(): void {\n    const appInstance = this;\n    this.props.onLoadingStateChange(true, () => {\n      var saveData = DataManager.GetSaveData();\n      DataManager.SaveOnlineData(this.state.charUrl, this.state.authKey, saveData, (isSuccesful: boolean) => {\n        appInstance.onSaveDone(isSuccesful);\n      });\n    });\n  }\n\n  private loadOnline(): void {\n    if (this.state.charUrl.length < 3) {\n      console.log(\"Invalid Character URL\");\n      return;\n    }\n\n    window.location.href = \"/?c=\" + this.state.charUrl;\n  }\n}","import React from 'react';\nimport './App.css';\nimport {Utils} from './Utils';\nimport {DataManager} from './DataManager';\nimport {PhysicalChar} from './PhysicalChar';\nimport {Personality} from './Personality';\nimport {ActionAbilities} from './ActionAbilities';\nimport {DnaSkills} from './DnaSkills';\nimport {Flaws} from './Flaws';\nimport {Motive} from './Motive';\nimport {BioItems} from './BioItems';\nimport {CharacterSheet} from './CharacterSheet';\n\nexport interface IAppProps {\n\n}\n\ninterface IAppState {\n  loading: boolean;\n  currentPage: string;\n}\n\nexport class App extends React.Component<IAppProps, IAppState> {\n  constructor(props: IAppProps) {\n    super(props);\n    this.state = { loading: false, currentPage: \"\" };\n\n    DataManager.InitializeCustomData();\n  }\n\n  componentDidMount() {\n    this.parseURL(true);\n    const appInstance = this;\n    window.addEventListener(\"hashchange\", function(e){\n      appInstance.parseURL();\n    });\n  }\n\n  public render() {\n    let loadingOverlay = <span />;\n    if (this.state.loading) {\n      loadingOverlay = <div id=\"loadingOverlay\">\n        <h1><span>Loading..</span></h1>\n      </div>;\n    }\n\n    let currentPage = null;\n    switch (this.state.currentPage) {\n      case \"personality\":\n        currentPage = <Personality />;\n        break;\n      case \"actionAbilities\":\n        currentPage = <ActionAbilities />;\n        break;\n      case \"dnaSkills\":\n        currentPage = <DnaSkills />;\n        break;\n      case \"flaws\":\n        currentPage = <Flaws />;\n        break;\n      case \"motive\":\n        currentPage = <Motive />;\n        break;\n      case \"bioItems\":\n        currentPage = <BioItems />;\n        break;\n      case \"mgs\":\n        currentPage = <CharacterSheet onLoadingStateChange={ (isLoading: boolean, onComplete: () => void) => { this.onLoadingStateChange(isLoading, onComplete) } } />;\n        break;\n      case \"physical\":\n      default:\n        currentPage = <PhysicalChar />;\n        break;\n    }\n\n    return (\n      <>\n        <nav className=\"navbar navbar-dark bg-dark\">\n          <div className=\"container-fluid\">\n            <a className=\"navbar-brand\" href=\"#index\">\n              WEGO RPG\n            </a>\n            <div className=\"d-flex align-items-center\">\n              <a href=\"#index\" className=\"me-3 text-white\">Character Builder</a>\n              <a href=\"#mgs\" className=\"text-white\">Your Character</a>\n            </div>\n          </div>\n        </nav>\n        {currentPage}\n        {loadingOverlay}\n      </>\n    );\n  }\n\n  public parseURL(firstParse: boolean = false) {\n    let loading = this.state.loading;\n    if (firstParse) {\n      const charId = Utils.GetCharId();\n      if (charId !== null) {\n        const appInstance = this;\n        DataManager.LoadOnlineCharacter(charId, (isSuccesful: boolean) => { appInstance.onLoadDone(isSuccesful); });\n        loading = true;\n      }\n    }\n\n    const urlSplit = window.location.hash.split(\"#\");\n    this.setState({ loading: loading, currentPage: urlSplit.length > 1 ? urlSplit[1] : \"\" });\n  }\n\n  public onLoadDone(isSuccesful: boolean): void {\n    this.setState({ loading: false}, () => {\n      window.location.hash = \"#mgs\";\n    });\n  }\n\n  public onLoadingStateChange(isLoading: boolean, onComplete: () => void): void {\n    this.setState({ loading: isLoading}, () => { onComplete(); });\n  }\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n","const Data = {\r\n    \"PhysicalData\": [\r\n        {\r\n            _id: \"physCharPortrait\",\r\n            DataType: \"Text\",\r\n            Name: \"Character Portrait URL\",\r\n            Description: \"Portrait of your character\",\r\n            Args: {\r\n                DefaultValue: \"\",\r\n                IsNumber: false,\r\n                HideOnMGS: true,\r\n            }\r\n        },\r\n        {\r\n            _id: \"physCharName\",\r\n            DataType: \"Text\",\r\n            Name: \"Character Name\",\r\n            Description: \"Name of your character\",\r\n            Args: {\r\n                DefaultValue: \"\",\r\n                IsNumber: false,\r\n                HideOnMGS: true,\r\n            }\r\n        },\r\n        {\r\n            _id: \"physMaxPoints\",\r\n            DataType: \"Text\",\r\n            Name: \"Max Points\",\r\n            Description: \"Maximum points of your character\",\r\n            Args: {\r\n                DefaultValue: \"150\",\r\n                IsNumber: true,\r\n                HideOnMGS: true,\r\n            }\r\n        },\r\n        {\r\n            _id: \"physSpecies\",\r\n            DataType: \"Select\",\r\n            Name: \"Species\",\r\n            Description: \"Species of your character\",\r\n            Args: {\r\n                Options: [\r\n                    {_id: \"speciesOptHuman\", Value: \"Human\"},\r\n                ]\r\n            }\r\n        },\r\n        {\r\n            _id: \"physAge\",\r\n            DataType: \"Select\",\r\n            Name: \"Age\",\r\n            Description: \"Age of your character\",\r\n            Args: {\r\n                Options: [\r\n                    {_id: \"ageOptInfant\", Value: \"Infant\"},\r\n                    {_id: \"ageOptChild\", Value: \"Child\"},\r\n                    {_id: \"ageOptTeenager\", Value: \"Teenager\"},\r\n                    {_id: \"ageOptYoungAdult\", Value: \"Young Adult\"},\r\n                    {_id: \"ageOptAdult\", Value: \"Adult\"},\r\n                    {_id: \"ageOptOlderAdult\", Value: \"Older Adult\"},\r\n                    {_id: \"ageOptSenior\", Value: \"Senior\"},\r\n                ]\r\n            }\r\n        },\r\n        {\r\n            _id: \"physGender\",\r\n            DataType: \"Select\",\r\n            Name: \"Gender\",\r\n            Description: \"Gender of your character\",\r\n            Args: {\r\n                Options: [\r\n                    {_id: \"genderOptFemale\", Value: \"Female\"},\r\n                    {_id: \"genderOptMale\", Value: \"Male\"},\r\n                    {_id: \"genderOptNonBinary\", Value: \"Non-binary\"},\r\n                ]\r\n            }\r\n        },\r\n        {\r\n            _id: \"physHairColor\",\r\n            DataType: \"Select\",\r\n            Name: \"Hair Color\",\r\n            Description: \"Hair Color of your character\",\r\n            Args: {\r\n                Options: [\r\n                    {_id: \"hairColorOptBlack\", Value: \"Black\"},\r\n                    {_id: \"hairColorOptBlonde\", Value: \"Blonde\"},\r\n                    {_id: \"hairColorOptBlue\", Value: \"Blue\"},\r\n                    {_id: \"hairColorOptBrown\", Value: \"Brown\"},\r\n                    {_id: \"hairColorOptGreen\", Value: \"Green\"},\r\n                    {_id: \"hairColorOptGrey\", Value: \"Grey\"},\r\n                    {_id: \"hairColorOptOrange\", Value: \"Orange\"},\r\n                    {_id: \"hairColorOptPurple\", Value: \"Purple\"},\r\n                    {_id: \"hairColorOptRed\", Value: \"Red\"},\r\n                    {_id: \"hairColorOptYellow\", Value: \"Yellow\"},\r\n                    {_id: \"hairColorOptWhite\", Value: \"White\"},\r\n                    {_id: \"hairColorOptOther\", Value: \"Other\"},\r\n                ]\r\n            }\r\n        },\r\n        {\r\n            _id: \"physEyeColor\",\r\n            DataType: \"Select\",\r\n            Name: \"Eye Color\",\r\n            Description: \"Eye Color of your character\",\r\n            Args: {\r\n                Options: [\r\n                    {_id: \"eyeColorOptBlack\", Value: \"Black\"},\r\n                    {_id: \"eyeColorOptBlue\", Value: \"Blue\"},\r\n                    {_id: \"eyeColorOptBrown\", Value: \"Brown\"},\r\n                    {_id: \"eyeColorOptGreen\", Value: \"Green\"},\r\n                    {_id: \"eyeColorOptGrey\", Value: \"Grey\"},\r\n                ]\r\n            }\r\n        },\r\n        {\r\n            _id: \"physHeight\",\r\n            DataType: \"Select\",\r\n            Name: \"Height\",\r\n            Description: \"Height of your character\",\r\n            Args: {\r\n                Options: [\r\n                    {_id: \"heightOptDwarf\", Value: \"Dwarf\"},\r\n                    {_id: \"heightOptShort\", Value: \"Short\"},\r\n                    {_id: \"heightOptAverage\", Value: \"Average Height\"},\r\n                    {_id: \"heightOptTall\", Value: \"Tall\"},\r\n                    {_id: \"heightOptGiant\", Value: \"Giant\"},\r\n                ]\r\n            }\r\n        },\r\n        {\r\n            _id: \"physBuild\",\r\n            DataType: \"Select\",\r\n            Name: \"Build\",\r\n            Description: \"Build of your character\",\r\n            Args: {\r\n                Options: [\r\n                    {_id: \"buildOptEctomorph\", Value: \"Ectomorph\"},\r\n                    {_id: \"buildOptMesomorph\", Value: \"Mesomorph\"},\r\n                    {_id: \"buildOptEndomorph\", Value: \"Endomorph\"},\r\n                ]\r\n            }\r\n        },\r\n        {\r\n            _id: \"physWealth\",\r\n            DataType: \"Select\",\r\n            Name: \"Wealth\",\r\n            Description: \"Wealth of your character\",\r\n            Args: {\r\n                Options: [\r\n                    {_id: \"wealthOptHomeless\", Value: \"Homeless\"},\r\n                    {_id: \"wealthOptLower\", Value: \"Lower class\"},\r\n                    {_id: \"wealthOptMiddle\", Value: \"Middle class\"},\r\n                    {_id: \"wealthOptUpper\", Value: \"Upper class\"},\r\n                    {_id: \"wealthOptRuling\", Value: \"Ruling class\"},\r\n                ]\r\n            }\r\n        }\r\n    ],\r\n    \"PersonalityData\": [\r\n        {\r\n            _id: \"persOpenness\",\r\n            DataType: \"Personality\",\r\n            Name: \"Openness\",\r\n            Description: \"Openness is a general appreciation for art, emotion, adventure, unusual ideas, imagination, curiosity, and variety of experience. People who are open to experience are intellectually curious, open to emotion, sensitive to beauty and willing to try new things. They tend to be, when compared to closed people, more creative and more aware of their feelings. They are also more likely to hold unconventional beliefs. High openness can be perceived as unpredictability or lack of focus, and more likely to engage in risky behavior or drug-taking. Moreover, individuals with high openness are said to pursue self-actualization specifically by seeking out intense, euphoric experiences. Conversely, those with low openness seek to gain fulfillment through perseverance and are characterized as pragmatic and data-driven—sometimes even perceived to be dogmatic and closed-minded.\",\r\n            Args: {\r\n                Items: [\r\n                    {\r\n                        _id: \"persOpenProgressive\",\r\n                        DataType: \"Group\",\r\n                        Name: \"Progressive\",\r\n                        Description: \"Progressive\",\r\n                        Args: {\r\n                            Items: [\r\n                                {\r\n                                    _id: \"persOpenProgThinking\",\r\n                                    DataType: \"Checkbox\",\r\n                                    Name: \"Thinking on Your Feet\",\r\n                                    Description: \"In surprise conflict situations, ones without preparation, roll twice on your first round and take the better of the two.\",\r\n                                    Args: {\r\n                                        IsDefaultChecked: false,\r\n                                    }\r\n                                },\r\n                                {\r\n                                    _id: \"persOpenProgCareCat\",\r\n                                    DataType: \"Checkbox\",\r\n                                    Name: \"No! Care killed the Cat\",\r\n                                    Description: \"And satisfaction brought it back! Go up a skill category for 3 rounds when taking risks in unfamiliar places.\",\r\n                                    Args: {\r\n                                        IsDefaultChecked: false,\r\n                                    }\r\n                                },\r\n                                {\r\n                                    _id: \"persOpenProgProgressive\",\r\n                                    DataType: \"Checkbox\",\r\n                                    Name: \"Progressive\",\r\n                                    Description: \"You're forward thinking, always ready for change and get along best with people who drive society forward. Progressives react positively to you.\",\r\n                                    Args: {\r\n                                        IsDefaultChecked: false,\r\n                                    }\r\n                                },\r\n                                {\r\n                                    _id: \"persOpenProgRockNRolla\",\r\n                                    DataType: \"Checkbox\",\r\n                                    Name: \"Rock N' Rolla\",\r\n                                    Description: \"Sex drugs and rock and roll!  By taking your mind off things, destressing and getting wild you're able to give yourself a break from the monotony.While this might drain other people, once per session you may gain a state of existence by having fun.\",\r\n                                    Args: {\r\n                                        IsDefaultChecked: false,\r\n                                    }\r\n                                },\r\n                                {\r\n                                    _id: \"persOpenProgTraits\",\r\n                                    DataType: \"Group\",\r\n                                    Name: \"Traits\",\r\n                                    Description: \"Traits\",\r\n                                    Args: {\r\n                                        Items: [\r\n                                            {\r\n                                                _id: \"persOpenProgTraitsCreative\",\r\n                                                DataType: \"Checkbox\",\r\n                                                Name: \"Creative\",\r\n                                                Description: \"\",\r\n                                                Args: {\r\n                                                    IsDefaultChecked: false,\r\n                                                }\r\n                                            },\r\n                                            {\r\n                                                _id: \"persOpenProgTraitsCurious\",\r\n                                                DataType: \"Checkbox\",\r\n                                                Name: \"Curious\",\r\n                                                Description: \"\",\r\n                                                Args: {\r\n                                                    IsDefaultChecked: false,\r\n                                                }\r\n                                            },\r\n                                            {\r\n                                                _id: \"persOpenProgTraitsUnorthodox\",\r\n                                                DataType: \"Checkbox\",\r\n                                                Name: \"Unorthodox\",\r\n                                                Description: \"\",\r\n                                                Args: {\r\n                                                    IsDefaultChecked: false,\r\n                                                }\r\n                                            },\r\n                                            {\r\n                                                _id: \"persOpenProgTraitsUnpredictable\",\r\n                                                DataType: \"Checkbox\",\r\n                                                Name: \"Unpredictable\",\r\n                                                Description: \"\",\r\n                                                Args: {\r\n                                                    IsDefaultChecked: false,\r\n                                                }\r\n                                            },\r\n                                            {\r\n                                                _id: \"persOpenProgTraitsExperimental\",\r\n                                                DataType: \"Checkbox\",\r\n                                                Name: \"Experimental\",\r\n                                                Description: \"\",\r\n                                                Args: {\r\n                                                    IsDefaultChecked: false,\r\n                                                }\r\n                                            },\r\n                                            {\r\n                                                _id: \"persOpenProgTraitsRisky\",\r\n                                                DataType: \"Checkbox\",\r\n                                                Name: \"Risky\",\r\n                                                Description: \"\",\r\n                                                Args: {\r\n                                                    IsDefaultChecked: false,\r\n                                                }\r\n                                            }\r\n                                        ],\r\n                                    }\r\n                                }\r\n                            ],\r\n                        }\r\n                    },\r\n                    {\r\n                        _id: \"persOpenTraditional\",\r\n                        DataType: \"Group\",\r\n                        Name: \"Traditional\",\r\n                        Description: \"Traditional\",\r\n                        Args: {\r\n                            Items: [\r\n                                {\r\n                                    _id: \"persOpenTradRoutinePrec\",\r\n                                    DataType: \"Checkbox\",\r\n                                    Name: \"Routine Precision\",\r\n                                    Description: \"You thrive in routine! Any conflict where you use the same skill 3 times in a row gives a bonus to your third roll and every third roll in the streak after.\",\r\n                                    Args: {\r\n                                        IsDefaultChecked: false,\r\n                                    }\r\n                                },\r\n                                {\r\n                                    _id: \"persOpenTradCuriosityCat\",\r\n                                    DataType: \"Checkbox\",\r\n                                    Name: \"Curiosity Killed the Cat\",\r\n                                    Description: \"Avoiding risky situations makes you feel safe, comfortable... efficient. When in a familiar setting the GM should offer you a bit extra information on your surroundings.\",\r\n                                    Args: {\r\n                                        IsDefaultChecked: false,\r\n                                    }\r\n                                },\r\n                                {\r\n                                    _id: \"persOpenTradTraditional\",\r\n                                    DataType: \"Checkbox\",\r\n                                    Name: \"Traditional\",\r\n                                    Description: \"You share the values of old and people who share those similar values fit in with you and vice versa. Reactions from conservative and traditionaly minded people should be positively affected.\",\r\n                                    Args: {\r\n                                        IsDefaultChecked: false,\r\n                                    }\r\n                                },\r\n                                {\r\n                                    _id: \"persOpenTradDevout\",\r\n                                    DataType: \"Checkbox\",\r\n                                    Name: \"Devout\",\r\n                                    Description: \"By retreating back into your faith you are able to gain back the stability you've been missing and regain your thoughts. Prolonged peaceful prayer from dogmatic religions, participating in religious practices and ceremony replenish your special, if you have more than one special, pick one to replenish. Can only be used once per session.\",\r\n                                    Args: {\r\n                                        IsDefaultChecked: false,\r\n                                    }\r\n                                },\r\n                                {\r\n                                    _id: \"persOpenTradTraits\",\r\n                                    DataType: \"Group\",\r\n                                    Name: \"Traits\",\r\n                                    Description: \"Traits\",\r\n                                    Args: {\r\n                                        Items: [\r\n                                            {\r\n                                                _id: \"persOpenTradTraitsCeremonial\",\r\n                                                DataType: \"Checkbox\",\r\n                                                Name: \"Ceremonial\",\r\n                                                Description: \"\",\r\n                                                Args: {\r\n                                                    IsDefaultChecked: false,\r\n                                                }\r\n                                            },\r\n                                            {\r\n                                                _id: \"persOpenTradTraitsConventional\",\r\n                                                DataType: \"Checkbox\",\r\n                                                Name: \"Conventional\",\r\n                                                Description: \"\",\r\n                                                Args: {\r\n                                                    IsDefaultChecked: false,\r\n                                                }\r\n                                            },\r\n                                            {\r\n                                                _id: \"persOpenTradTraitsDataDriven\",\r\n                                                DataType: \"Checkbox\",\r\n                                                Name: \"Data-Driven\",\r\n                                                Description: \"\",\r\n                                                Args: {\r\n                                                    IsDefaultChecked: false,\r\n                                                }\r\n                                            },\r\n                                            {\r\n                                                _id: \"persOpenTradTraitsDogmatic\",\r\n                                                DataType: \"Checkbox\",\r\n                                                Name: \"Dogmatic\",\r\n                                                Description: \"\",\r\n                                                Args: {\r\n                                                    IsDefaultChecked: false,\r\n                                                }\r\n                                            },\r\n                                            {\r\n                                                _id: \"persOpenTradTraitsSafe\",\r\n                                                DataType: \"Checkbox\",\r\n                                                Name: \"Safe\",\r\n                                                Description: \"\",\r\n                                                Args: {\r\n                                                    IsDefaultChecked: false,\r\n                                                }\r\n                                            },\r\n                                            {\r\n                                                _id: \"persOpenTradTraitsUnrelenting\",\r\n                                                DataType: \"Checkbox\",\r\n                                                Name: \"Unrelenting\",\r\n                                                Description: \"\",\r\n                                                Args: {\r\n                                                    IsDefaultChecked: false,\r\n                                                }\r\n                                            }\r\n                                        ],\r\n                                    }\r\n                                }\r\n                            ],\r\n                        }\r\n                    }\r\n                ],\r\n            }\r\n        },\r\n        {\r\n            _id: \"persConscientiousness\",\r\n            DataType: \"Personality\",\r\n            Name: \"Conscientiousness\",\r\n            Description: \"Conscientiousness is a tendency to display self-discipline, act dutifully, and strive for achievement against measures or outside expectations. It is related to the way in which people control, regulate, and direct their impulses. High conscientiousness is often perceived as being stubborn and focused. Low conscientiousness is associated with flexibility and spontaneity, but can also appear as sloppiness and lack of reliability. High scores on conscientiousness indicate a preference for planned rather than spontaneous behavior. The average level of conscientiousness rises among young adults and then declines among older adults.\",\r\n            Args: {\r\n                Items: [\r\n                    {\r\n                        _id: \"persConsOrganized\",\r\n                        DataType: \"Group\",\r\n                        Name: \"Organized\",\r\n                        Description: \"Organized\",\r\n                        Args: {\r\n                            Items: [\r\n                                {\r\n                                    _id: \"persConsOrgZealot\",\r\n                                    DataType: \"Checkbox\",\r\n                                    Name: \"Zealot\",\r\n                                    Description: \"Driven, disciplined, and deliberate. You will take any and all measures to achieve your goals. When working towards a minor motivation take one less emotional and intellectual damage per round. Conflicts must be directly related to the motivation ie. If your motivation is to find your missing daughter you would take a reduction in damage if you were finding clues to her dissapperance but not if you were helping someone that would eventually reveal a clue.\",\r\n                                    Args: {\r\n                                        IsDefaultChecked: false,\r\n                                    }\r\n                                },\r\n                                {\r\n                                    _id: \"persConsOrgNeat\",\r\n                                    DataType: \"Checkbox\",\r\n                                    Name: \"Neat\",\r\n                                    Description: \"You're never absent minded so you you always have what you need. You never forget important items behind.\",\r\n                                    Args: {\r\n                                        IsDefaultChecked: false,\r\n                                    }\r\n                                },\r\n                                {\r\n                                    _id: \"persConsOrgWhiteCollar\",\r\n                                    DataType: \"Checkbox\",\r\n                                    Name: \"White Collar Man\",\r\n                                    Description: \"You lived a life that brought you across the higher echelons of society. Local businessmen, nobles, priests and politicians, you know your ways around them all and get a bonus during Emotional and Intellectual conflicts with them.\",\r\n                                    Args: {\r\n                                        IsDefaultChecked: false,\r\n                                    }\r\n                                },\r\n                                {\r\n                                    _id: \"persConsOrgDiplomatic\",\r\n                                    DataType: \"Checkbox\",\r\n                                    Name: \"Diplomatic\",\r\n                                    Description: \"You know how to hold back and bite your tongue, respond appropriately and listen when you need to. Receive a bonus when befriending someone.\",\r\n                                    Args: {\r\n                                        IsDefaultChecked: false,\r\n                                    }\r\n                                },\r\n                                {\r\n                                    _id: \"persConsOrgTraits\",\r\n                                    DataType: \"Group\",\r\n                                    Name: \"Traits\",\r\n                                    Description: \"Traits\",\r\n                                    Args: {\r\n                                        Items: [\r\n                                            {\r\n                                                _id: \"persConsOrgTraitsDisicplined\",\r\n                                                DataType: \"Checkbox\",\r\n                                                Name: \"Disicplined\",\r\n                                                Description: \"\",\r\n                                                Args: {\r\n                                                    IsDefaultChecked: false,\r\n                                                }\r\n                                            },\r\n                                            {\r\n                                                _id: \"persConsOrgTraitsDutiful\",\r\n                                                DataType: \"Checkbox\",\r\n                                                Name: \"Dutiful\",\r\n                                                Description: \"\",\r\n                                                Args: {\r\n                                                    IsDefaultChecked: false,\r\n                                                }\r\n                                            },\r\n                                            {\r\n                                                _id: \"persConsOrgTraitsStubborn\",\r\n                                                DataType: \"Checkbox\",\r\n                                                Name: \"Stubborn\",\r\n                                                Description: \"\",\r\n                                                Args: {\r\n                                                    IsDefaultChecked: false,\r\n                                                }\r\n                                            },\r\n                                            {\r\n                                                _id: \"persConsOrgTraitsFocused\",\r\n                                                DataType: \"Checkbox\",\r\n                                                Name: \"Focused\",\r\n                                                Description: \"\",\r\n                                                Args: {\r\n                                                    IsDefaultChecked: false,\r\n                                                }\r\n                                            },\r\n                                            {\r\n                                                _id: \"persConsOrgTraitsAmbitious\",\r\n                                                DataType: \"Checkbox\",\r\n                                                Name: \"Ambitious\",\r\n                                                Description: \"\",\r\n                                                Args: {\r\n                                                    IsDefaultChecked: false,\r\n                                                }\r\n                                            },\r\n                                            {\r\n                                                _id: \"persConsOrgTraitsDependable\",\r\n                                                DataType: \"Checkbox\",\r\n                                                Name: \"Dependable\",\r\n                                                Description: \"\",\r\n                                                Args: {\r\n                                                    IsDefaultChecked: false,\r\n                                                }\r\n                                            }\r\n                                        ],\r\n                                    }\r\n                                }\r\n                            ],\r\n                        }\r\n                    },\r\n                    {\r\n                        _id: \"persConsCareless\",\r\n                        DataType: \"Group\",\r\n                        Name: \"Careless\",\r\n                        Description: \"Careless\",\r\n                        Args: {\r\n                            Items: [\r\n                                {\r\n                                    _id: \"persConsCareFreeSpirit\",\r\n                                    DataType: \"Checkbox\",\r\n                                    Name: \"Free Spirit\",\r\n                                    Description: \"Go as you will, go as you please, a free spirit thrives in non traditional roles and environments. Reduce negative effects of being in unfamiliar spaces and situations. Not only that but things seem to just go your way by sheer luck and you should expect random luck to occur when you're exploring such situations.\",\r\n                                    Args: {\r\n                                        IsDefaultChecked: false,\r\n                                    }\r\n                                },\r\n                                {\r\n                                    _id: \"persConsCareWithFlow\",\r\n                                    DataType: \"Checkbox\",\r\n                                    Name: \"Go With the Flow\",\r\n                                    Description: \"You are used to making it up as you go and making due with what you got! Who cares if you lost your job or you're in a sticky situation. You are highly resistant to adverse situations.\",\r\n                                    Args: {\r\n                                        IsDefaultChecked: false,\r\n                                    }\r\n                                },\r\n                                {\r\n                                    _id: \"persConsCareOnStreets\",\r\n                                    DataType: \"Checkbox\",\r\n                                    Name: \"On the Streets\",\r\n                                    Description: \"You've got connections! All that time growing up with the wrong crowd on the wrong streets going the wrong way. Maybe you've moved on from that now but you can still reach out. You know how to find those seedy bars and shady connections. They also know how to find you from time to time.\",\r\n                                    Args: {\r\n                                        IsDefaultChecked: false,\r\n                                    }\r\n                                },\r\n                                {\r\n                                    _id: \"persConsCareHakunamatata\",\r\n                                    DataType: \"Checkbox\",\r\n                                    Name: \"Hakunamatata\",\r\n                                    Description: \"You've got a gang. Not a violent one, just a little one. A couple of pals, maybe stoner friends, or buds down at the pub. They might not be bad ass but they don't work so you can always call them in a pinch. They can be reasonably helpful but also are able to pick you up when you're down. If they are around, once per session they are able to pick you up when incapacitated.\",\r\n                                    Args: {\r\n                                        IsDefaultChecked: false,\r\n                                    }\r\n                                },\r\n                                {\r\n                                    _id: \"persConsCareTraits\",\r\n                                    DataType: \"Group\",\r\n                                    Name: \"Traits\",\r\n                                    Description: \"Traits\",\r\n                                    Args: {\r\n                                        Items: [\r\n                                            {\r\n                                                _id: \"persConsCareTraitsFlexible\",\r\n                                                DataType: \"Checkbox\",\r\n                                                Name: \"Flexible\",\r\n                                                Description: \"\",\r\n                                                Args: {\r\n                                                    IsDefaultChecked: false,\r\n                                                }\r\n                                            },\r\n                                            {\r\n                                                _id: \"persConsCareTraitsEasyGoing\",\r\n                                                DataType: \"Checkbox\",\r\n                                                Name: \"Easy Going\",\r\n                                                Description: \"\",\r\n                                                Args: {\r\n                                                    IsDefaultChecked: false,\r\n                                                }\r\n                                            },\r\n                                            {\r\n                                                _id: \"persConsCareTraitsSpontaneous\",\r\n                                                DataType: \"Checkbox\",\r\n                                                Name: \"Spontaneous\",\r\n                                                Description: \"\",\r\n                                                Args: {\r\n                                                    IsDefaultChecked: false,\r\n                                                }\r\n                                            },\r\n                                            {\r\n                                                _id: \"persConsCareTraitsAdaptable\",\r\n                                                DataType: \"Checkbox\",\r\n                                                Name: \"Adaptable\",\r\n                                                Description: \"\",\r\n                                                Args: {\r\n                                                    IsDefaultChecked: false,\r\n                                                }\r\n                                            },\r\n                                            {\r\n                                                _id: \"persConsCareTraitsUnreliable\",\r\n                                                DataType: \"Checkbox\",\r\n                                                Name: \"Unreliable\",\r\n                                                Description: \"\",\r\n                                                Args: {\r\n                                                    IsDefaultChecked: false,\r\n                                                }\r\n                                            },\r\n                                            {\r\n                                                _id: \"persConsCareTraitsLaidBack\",\r\n                                                DataType: \"Checkbox\",\r\n                                                Name: \"Laid Back\",\r\n                                                Description: \"\",\r\n                                                Args: {\r\n                                                    IsDefaultChecked: false,\r\n                                                }\r\n                                            }\r\n                                        ],\r\n                                    }\r\n                                }\r\n                            ],\r\n                        }\r\n                    }\r\n                ],\r\n            }\r\n        },\r\n        {\r\n            _id: \"persExtroversion\",\r\n            DataType: \"Personality\",\r\n            Name: \"Extroversion\",\r\n            Description: \"Extroert is characterized by breadth of activities (as opposed to depth), surgency from external activity/situations, and energy creation from external means. The trait is marked by pronounced engagement with the external world. Extraverts enjoy interacting with people, and are often perceived as full of energy. They tend to be enthusiastic, action-oriented individuals. They possess high group visibility, like to talk, and assert themselves. Introverts have lower social engagement and energy levels than extraverts. They tend to seem quiet, low-key, deliberate, and less involved in the social world. Their lack of social involvement should not be interpreted as shyness or depression; instead they are more independent of their social world than extraverts. Introverts need less stimulation, and more time alone than extraverts. This does not mean that they are unfriendly or antisocial; rather, they are reserved in social situations.\",\r\n            Args: {\r\n                Items: [\r\n                    {\r\n                        _id: \"persExtExtrovert\",\r\n                        DataType: \"Group\",\r\n                        Name: \"Extrovert\",\r\n                        Description: \"Extrovert\",\r\n                        Args: {\r\n                            Items: [\r\n                                {\r\n                                    _id: \"persExtExtSocialButt\",\r\n                                    DataType: \"Checkbox\",\r\n                                    Name: \"Social Butterfly\",\r\n                                    Description: \"You are one of those people that will go out on the night and make a dozen new friends. Your character has the ability to befriend random people and strangers not in direct opposition to you. NPC's should react positively to you after a reasonable amount of time socialising with them.\",\r\n                                    Args: {\r\n                                        IsDefaultChecked: false,\r\n                                    }\r\n                                },\r\n                                {\r\n                                    _id: \"persExtExtLifeParty\",\r\n                                    DataType: \"Checkbox\",\r\n                                    Name: \"Life of the Party\",\r\n                                    Description: \"Receive a bonus to social skills and charm when partying or in party settings.\",\r\n                                    Args: {\r\n                                        IsDefaultChecked: false,\r\n                                    }\r\n                                },\r\n                                {\r\n                                    _id: \"persExtExtFriendPlaces\",\r\n                                    DataType: \"Checkbox\",\r\n                                    Name: \"Friends in [all] Places\",\r\n                                    Description: \"You have a large network of friends in a variety of places. They are typically people who would like to help you if they can, but aren't close enough to make large sacrifices for your goals. The GM will rule on what is reasonable.\",\r\n                                    Args: {\r\n                                        IsDefaultChecked: false,\r\n                                    }\r\n                                },\r\n                                {\r\n                                    _id: \"persExtExtEmpassionedLead\",\r\n                                    DataType: \"Checkbox\",\r\n                                    Name: \"Empassioned Leadership\",\r\n                                    Description: \"If you have time to give a speech, your entire party will get a bonus to their first role in the conflict immediately following.\",\r\n                                    Args: {\r\n                                        IsDefaultChecked: false,\r\n                                    }\r\n                                },\r\n                                {\r\n                                    _id: \"persExtExtTraits\",\r\n                                    DataType: \"Group\",\r\n                                    Name: \"Traits\",\r\n                                    Description: \"Traits\",\r\n                                    Args: {\r\n                                        Items: [\r\n                                            {\r\n                                                _id: \"persExtExtTraitsOptimist\",\r\n                                                DataType: \"Checkbox\",\r\n                                                Name: \"Optimist\",\r\n                                                Description: \"\",\r\n                                                Args: {\r\n                                                    IsDefaultChecked: false,\r\n                                                }\r\n                                            },\r\n                                            {\r\n                                                _id: \"persExtExtTraitsFlamboyant\",\r\n                                                DataType: \"Checkbox\",\r\n                                                Name: \"Flamboyant\",\r\n                                                Description: \"\",\r\n                                                Args: {\r\n                                                    IsDefaultChecked: false,\r\n                                                }\r\n                                            },\r\n                                            {\r\n                                                _id: \"persExtExtTraitsTalkative\",\r\n                                                DataType: \"Checkbox\",\r\n                                                Name: \"Talkative\",\r\n                                                Description: \"\",\r\n                                                Args: {\r\n                                                    IsDefaultChecked: false,\r\n                                                }\r\n                                            },\r\n                                            {\r\n                                                _id: \"persExtExtTraitsBubbly\",\r\n                                                DataType: \"Checkbox\",\r\n                                                Name: \"Bubbly\",\r\n                                                Description: \"\",\r\n                                                Args: {\r\n                                                    IsDefaultChecked: false,\r\n                                                }\r\n                                            },\r\n                                            {\r\n                                                _id: \"persExtExtTraitsGregarious\",\r\n                                                DataType: \"Checkbox\",\r\n                                                Name: \"Gregarious\",\r\n                                                Description: \"\",\r\n                                                Args: {\r\n                                                    IsDefaultChecked: false,\r\n                                                }\r\n                                            },\r\n                                            {\r\n                                                _id: \"persExtExtTraitsEnthusiastic\",\r\n                                                DataType: \"Checkbox\",\r\n                                                Name: \"Enthusiastic\",\r\n                                                Description: \"\",\r\n                                                Args: {\r\n                                                    IsDefaultChecked: false,\r\n                                                }\r\n                                            },\r\n                                            {\r\n                                                _id: \"persExtExtTraitsAssertive\",\r\n                                                DataType: \"Checkbox\",\r\n                                                Name: \"Assertive\",\r\n                                                Description: \"\",\r\n                                                Args: {\r\n                                                    IsDefaultChecked: false,\r\n                                                }\r\n                                            }\r\n                                        ],\r\n                                    }\r\n                                }\r\n                            ],\r\n                        }\r\n                    },\r\n                    {\r\n                        _id: \"persExtIntrovert\",\r\n                        DataType: \"Group\",\r\n                        Name: \"Introvert\",\r\n                        Description: \"Introvert\",\r\n                        Args: {\r\n                            Items: [\r\n                                {\r\n                                    _id: \"persExtIntPeaceSolitude\",\r\n                                    DataType: \"Checkbox\",\r\n                                    Name: \"Peace in Solitude\",\r\n                                    Description: \"By taking time for yourself, through things like mediation, solitude or other solo activities that are calm and peaceful, you are able to recharge. Once per session you can go up a state of existence if your character is able to find a few hours of peaceful time to themself.\",\r\n                                    Args: {\r\n                                        IsDefaultChecked: false,\r\n                                    }\r\n                                },\r\n                                {\r\n                                    _id: \"persExtIntPenMighty\",\r\n                                    DataType: \"Checkbox\",\r\n                                    Name: \"The Pen is Mighty\",\r\n                                    Description: \"Receive a bonus to any written social interactions , this can be letters, texts, prepared speeches or dialogue.\",\r\n                                    Args: {\r\n                                        IsDefaultChecked: false,\r\n                                    }\r\n                                },\r\n                                {\r\n                                    _id: \"persExtIntFriendsClose\",\r\n                                    DataType: \"Checkbox\",\r\n                                    Name: \"Keep your friends close\",\r\n                                    Description: \"You have a small tight nit group of friends that are very loyal. They often have a single skill that can be useful and called upon when needed.\",\r\n                                    Args: {\r\n                                        IsDefaultChecked: false,\r\n                                    }\r\n                                },\r\n                                {\r\n                                    _id: \"persExtIntFadeBack\",\r\n                                    DataType: \"Checkbox\",\r\n                                    Name: \"Fade to the back\",\r\n                                    Description: \"Through your reserved demeanor and low profile you tend to blend into crowds. Get a bonus when hiding, losing a tail, avoiding being seen, and other such events when in a crowd or social function.\",\r\n                                    Args: {\r\n                                        IsDefaultChecked: false,\r\n                                    }\r\n                                },\r\n                                {\r\n                                    _id: \"persExtIntTraits\",\r\n                                    DataType: \"Group\",\r\n                                    Name: \"Traits\",\r\n                                    Description: \"Traits\",\r\n                                    Args: {\r\n                                        Items: [\r\n                                            {\r\n                                                _id: \"persExtIntTraitsQuiet\",\r\n                                                DataType: \"Checkbox\",\r\n                                                Name: \"Quiet\",\r\n                                                Description: \"\",\r\n                                                Args: {\r\n                                                    IsDefaultChecked: false,\r\n                                                }\r\n                                            },\r\n                                            {\r\n                                                _id: \"persExtIntTraitsReserved\",\r\n                                                DataType: \"Checkbox\",\r\n                                                Name: \"Reserved\",\r\n                                                Description: \"\",\r\n                                                Args: {\r\n                                                    IsDefaultChecked: false,\r\n                                                }\r\n                                            },\r\n                                            {\r\n                                                _id: \"persExtIntTraitsShy\",\r\n                                                DataType: \"Checkbox\",\r\n                                                Name: \"Shy\",\r\n                                                Description: \"\",\r\n                                                Args: {\r\n                                                    IsDefaultChecked: false,\r\n                                                }\r\n                                            },\r\n                                            {\r\n                                                _id: \"persExtIntTraitsAnalytical\",\r\n                                                DataType: \"Checkbox\",\r\n                                                Name: \"Analytical\",\r\n                                                Description: \"\",\r\n                                                Args: {\r\n                                                    IsDefaultChecked: false,\r\n                                                }\r\n                                            },\r\n                                            {\r\n                                                _id: \"persExtIntTraitsIndependent\",\r\n                                                DataType: \"Checkbox\",\r\n                                                Name: \"Independent\",\r\n                                                Description: \"\",\r\n                                                Args: {\r\n                                                    IsDefaultChecked: false,\r\n                                                }\r\n                                            },\r\n                                            {\r\n                                                _id: \"persExtIntTraitsReflective\",\r\n                                                DataType: \"Checkbox\",\r\n                                                Name: \"Reflective\",\r\n                                                Description: \"\",\r\n                                                Args: {\r\n                                                    IsDefaultChecked: false,\r\n                                                }\r\n                                            }\r\n                                        ],\r\n                                    }\r\n                                }\r\n                            ],\r\n                        }\r\n                    }\r\n                ],\r\n            }\r\n        },\r\n        {\r\n            _id: \"persAgreeableness\",\r\n            DataType: \"Personality\",\r\n            Name: \"Agreeableness\",\r\n            Description: \"The agreeableness trait reflects individual differences in general concern for social harmony. Agreeable/selfess individuals value getting along with others. They are generally considerate, kind, generous, trusting and trustworthy, helpful, and willing to compromise their interests with others. Agreeable people also have an optimistic view of human nature. Disagreeable/selfish individuals place self-interest above getting along with others. They are generally unconcerned with others' well-being, and are less likely to extend themselves for other people. Sometimes their skepticism about others' motives causes them to be suspicious, unfriendly, and uncooperative. Low agreeableness personalities are often competitive or challenging people, which can be seen as argumentative or untrustworthy.\",\r\n            Args: {\r\n                Items: [\r\n                    {\r\n                        _id: \"persAgreSelfless\",\r\n                        DataType: \"Group\",\r\n                        Name: \"Selfless\",\r\n                        Description: \"Selfless\",\r\n                        Args: {\r\n                            Items: [\r\n                                {\r\n                                    _id: \"persAgreSelfKinship\",\r\n                                    DataType: \"Checkbox\",\r\n                                    Name: \"Kinship\",\r\n                                    Description: \"You care for your people and they care for you. Or so it feels. Any big sacrifice for the party results in you gaining a state of existence. This sacrifice must be significant to the character and the GM has the final verdict. Sacrificing can including giving/buying gifts, taking hits for other people, putting yourself in a pricarious situation to help a team mate etc etc.\",\r\n                                    Args: {\r\n                                        IsDefaultChecked: false,\r\n                                    }\r\n                                },\r\n                                {\r\n                                    _id: \"persAgreSelfLeadDoing\",\r\n                                    DataType: \"Checkbox\",\r\n                                    Name: \"Lead by doing\",\r\n                                    Description: \"When you lead the charge, take on risk for the group or put others before you in a conflict situation, everyone in the party receives a bonus, if you drop a state of existence, for one round.\",\r\n                                    Args: {\r\n                                        IsDefaultChecked: false,\r\n                                    }\r\n                                },\r\n                                {\r\n                                    _id: \"persAgreSelfMinimalism\",\r\n                                    DataType: \"Checkbox\",\r\n                                    Name: \"Minimalism\",\r\n                                    Description: \"You have removed yourself from material attachment. You can survive off very little and have no issues with giving up valuable items. You have the ability to find use in reusable items, take no emotional damage from poor accommodations, rations or any other quality of life items.\",\r\n                                    Args: {\r\n                                        IsDefaultChecked: false,\r\n                                    }\r\n                                },\r\n                                {\r\n                                    _id: \"persAgreSelfGoodPeople\",\r\n                                    DataType: \"Checkbox\",\r\n                                    Name: \"The good in people\",\r\n                                    Description: \"You believe people are good by nature and  are willing to trust them easily.  Take intellectual damage when trusting someone doesn't work in your favor but gain 1 XP.\",\r\n                                    Args: {\r\n                                        IsDefaultChecked: false,\r\n                                    }\r\n                                },\r\n                                {\r\n                                    _id: \"persAgreSelfTraits\",\r\n                                    DataType: \"Group\",\r\n                                    Name: \"Traits\",\r\n                                    Description: \"Traits\",\r\n                                    Args: {\r\n                                        Items: [\r\n                                            {\r\n                                                _id: \"persAgreSelfTraitsTrusting\",\r\n                                                DataType: \"Checkbox\",\r\n                                                Name: \"Trusting\",\r\n                                                Description: \"\",\r\n                                                Args: {\r\n                                                    IsDefaultChecked: false,\r\n                                                }\r\n                                            },\r\n                                            {\r\n                                                _id: \"persAgreSelfTraitsStraightforward\",\r\n                                                DataType: \"Checkbox\",\r\n                                                Name: \"Straightforward\",\r\n                                                Description: \"\",\r\n                                                Args: {\r\n                                                    IsDefaultChecked: false,\r\n                                                }\r\n                                            },\r\n                                            {\r\n                                                _id: \"persAgreSelfTraitsModest\",\r\n                                                DataType: \"Checkbox\",\r\n                                                Name: \"Modest\",\r\n                                                Description: \"\",\r\n                                                Args: {\r\n                                                    IsDefaultChecked: false,\r\n                                                }\r\n                                            },\r\n                                            {\r\n                                                _id: \"persAgreSelfTraitsAltruistic\",\r\n                                                DataType: \"Checkbox\",\r\n                                                Name: \"Altruistic\",\r\n                                                Description: \"\",\r\n                                                Args: {\r\n                                                    IsDefaultChecked: false,\r\n                                                }\r\n                                            },\r\n                                            {\r\n                                                _id: \"persAgreSelfTraitsCompliant\",\r\n                                                DataType: \"Checkbox\",\r\n                                                Name: \"Compliant\",\r\n                                                Description: \"\",\r\n                                                Args: {\r\n                                                    IsDefaultChecked: false,\r\n                                                }\r\n                                            },\r\n                                            {\r\n                                                _id: \"persAgreSelfTraitsTenderMindedness\",\r\n                                                DataType: \"Checkbox\",\r\n                                                Name: \"Tender-Mindedness\",\r\n                                                Description: \"\",\r\n                                                Args: {\r\n                                                    IsDefaultChecked: false,\r\n                                                }\r\n                                            }\r\n                                        ],\r\n                                    }\r\n                                }\r\n                            ],\r\n                        }\r\n                    },\r\n                    {\r\n                        _id: \"persAgreSelfish\",\r\n                        DataType: \"Group\",\r\n                        Name: \"Selfish\",\r\n                        Description: \"Selfish\",\r\n                        Args: {\r\n                            Items: [\r\n                                {\r\n                                    _id: \"persAgreSelNoRemorse\",\r\n                                    DataType: \"Checkbox\",\r\n                                    Name: \"Kill; No Remorse\",\r\n                                    Description: \"Death has very little effect on you. Take no Emotional damage for killing or people dying near you.\",\r\n                                    Args: {\r\n                                        IsDefaultChecked: false,\r\n                                    }\r\n                                },\r\n                                {\r\n                                    _id: \"persAgreSelMachevellian\",\r\n                                    DataType: \"Checkbox\",\r\n                                    Name: \"Machevellian Tactics\",\r\n                                    Description: \"You'll do whatever it takes to get to your goals. You have no remorse when manipulating people to your bidding. Use and abuse people without receiving any emotional damage.\",\r\n                                    Args: {\r\n                                        IsDefaultChecked: false,\r\n                                    }\r\n                                },\r\n                                {\r\n                                    _id: \"persAgreSelMaterialism\",\r\n                                    DataType: \"Checkbox\",\r\n                                    Name: \"Materialism\",\r\n                                    Description: \"Your desire for the material world is never ending! You derive great pleasure from acquiring things of value. From that you have a knack for making money, bartering and finding a good deal. Receive a bonus when involved in commerce conflict resolutions.\",\r\n                                    Args: {\r\n                                        IsDefaultChecked: false,\r\n                                    }\r\n                                },\r\n                                {\r\n                                    _id: \"persAgreSelNarcisism\",\r\n                                    DataType: \"Checkbox\",\r\n                                    Name: \"Narcisism\",\r\n                                    Description: \"You are so self absorbed you just know you're better than everyone else, and you look it too! Get a bonus to physical appearance and sex appeal. Reduce the difficulty of charming someone through appearance by 2.\",\r\n                                    Args: {\r\n                                        IsDefaultChecked: false,\r\n                                    }\r\n                                },\r\n                                {\r\n                                    _id: \"persAgreSelTraits\",\r\n                                    DataType: \"Group\",\r\n                                    Name: \"Traits\",\r\n                                    Description: \"Traits\",\r\n                                    Args: {\r\n                                        Items: [\r\n                                            {\r\n                                                _id: \"persAgreSelTraitsCynical\",\r\n                                                DataType: \"Checkbox\",\r\n                                                Name: \"Cynical\",\r\n                                                Description: \"\",\r\n                                                Args: {\r\n                                                    IsDefaultChecked: false,\r\n                                                }\r\n                                            },\r\n                                            {\r\n                                                _id: \"persAgreSelTraitsDeceitful\",\r\n                                                DataType: \"Checkbox\",\r\n                                                Name: \"Deceitful\",\r\n                                                Description: \"\",\r\n                                                Args: {\r\n                                                    IsDefaultChecked: false,\r\n                                                }\r\n                                            },\r\n                                            {\r\n                                                _id: \"persAgreSelTraitsConceited\",\r\n                                                DataType: \"Checkbox\",\r\n                                                Name: \"Conceited\",\r\n                                                Description: \"\",\r\n                                                Args: {\r\n                                                    IsDefaultChecked: false,\r\n                                                }\r\n                                            },\r\n                                            {\r\n                                                _id: \"persAgreSelTraitsGreedy\",\r\n                                                DataType: \"Checkbox\",\r\n                                                Name: \"Greedy\",\r\n                                                Description: \"\",\r\n                                                Args: {\r\n                                                    IsDefaultChecked: false,\r\n                                                }\r\n                                            },\r\n                                            {\r\n                                                _id: \"persAgreSelTraitsAntagonistic\",\r\n                                                DataType: \"Checkbox\",\r\n                                                Name: \"Antagonistic\",\r\n                                                Description: \"\",\r\n                                                Args: {\r\n                                                    IsDefaultChecked: false,\r\n                                                }\r\n                                            },\r\n                                            {\r\n                                                _id: \"persAgreSelTraitsToughMindedness\",\r\n                                                DataType: \"Checkbox\",\r\n                                                Name: \"Tough-Mindedness\",\r\n                                                Description: \"\",\r\n                                                Args: {\r\n                                                    IsDefaultChecked: false,\r\n                                                }\r\n                                            }\r\n                                        ],\r\n                                    }\r\n                                }\r\n                            ],\r\n                        }\r\n                    }\r\n                ],\r\n            }\r\n        },\r\n        {\r\n            _id: \"persNeuroticism\",\r\n            DataType: \"Personality\",\r\n            Name: \"Neuroticism\",\r\n            Description: \"Neuroticism is the tendency to experience negative emotions, such as anger, anxiety, or depression. It is sometimes called emotional instability, or is reversed and referred to as emotional stability. Those who score high in neuroticism are emotionally reactive and vulnerable to stress, also tending to be flippant in the way they express emotion. They are more likely to interpret ordinary situations as threatening, and minor frustrations as hopelessly difficult. Their negative emotional reactions tend to persist for unusually long periods of time, which means they are often in a bad mood. At the other end of the scale, individuals who score low in neuroticism are less easily upset and are less emotionally reactive. They tend to be calm, emotionally stable, and free from persistent negative feelings. Freedom from negative feelings does not mean that low-scorers experience a lot of positive feelings.\",\r\n            Args: {\r\n                Items: [\r\n                    {\r\n                        _id: \"persNeurSensitive\",\r\n                        DataType: \"Group\",\r\n                        Name: \"Sensitive\",\r\n                        Description: \"Sensitive\",\r\n                        Args: {\r\n                            Items: [\r\n                                {\r\n                                    _id: \"persNeurSensRiskyBusiness\",\r\n                                    DataType: \"Checkbox\",\r\n                                    Name: \"No Risky Business\",\r\n                                    Description: \"If the player has some time to think then the GM should offer a small warning if the player is about to enter a risky situation.\",\r\n                                    Args: {\r\n                                        IsDefaultChecked: false,\r\n                                    }\r\n                                },\r\n                                {\r\n                                    _id: \"persNeurSensNoGhosts\",\r\n                                    DataType: \"Checkbox\",\r\n                                    Name: \"I don't believe in no ghosts\",\r\n                                    Description: \"You are so anxious you have borderline trust issues, and so you don't believe a word anyone tells you without proof. Get a bonus when avoiding being deceived.\",\r\n                                    Args: {\r\n                                        IsDefaultChecked: false,\r\n                                    }\r\n                                },\r\n                                {\r\n                                    _id: \"persNeurSensWhatForget\",\r\n                                    DataType: \"Checkbox\",\r\n                                    Name: \"What if I forget my...\",\r\n                                    Description: \"You don't forget any items, but you also tend to bring too much.\",\r\n                                    Args: {\r\n                                        IsDefaultChecked: false,\r\n                                    }\r\n                                },\r\n                                {\r\n                                    _id: \"persNeurSensBestCritic\",\r\n                                    DataType: \"Checkbox\",\r\n                                    Name: \"I'm my own best critic\",\r\n                                    Description: \"Gain 1 xp when rolling a critical fail.\",\r\n                                    Args: {\r\n                                        IsDefaultChecked: false,\r\n                                    }\r\n                                },\r\n                                {\r\n                                    _id: \"persNeurSensTraits\",\r\n                                    DataType: \"Group\",\r\n                                    Name: \"Traits\",\r\n                                    Description: \"Traits\",\r\n                                    Args: {\r\n                                        Items: [\r\n                                            {\r\n                                                _id: \"persNeurSensTraitsAnxious\",\r\n                                                DataType: \"Checkbox\",\r\n                                                Name: \"Anxious\",\r\n                                                Description: \"\",\r\n                                                Args: {\r\n                                                    IsDefaultChecked: false,\r\n                                                }\r\n                                            },\r\n                                            {\r\n                                                _id: \"persNeurSensTraitsCautious\",\r\n                                                DataType: \"Checkbox\",\r\n                                                Name: \"Cautious\",\r\n                                                Description: \"\",\r\n                                                Args: {\r\n                                                    IsDefaultChecked: false,\r\n                                                }\r\n                                            },\r\n                                            {\r\n                                                _id: \"persNeurSensTraitsPessimist\",\r\n                                                DataType: \"Checkbox\",\r\n                                                Name: \"Pessimist\",\r\n                                                Description: \"\",\r\n                                                Args: {\r\n                                                    IsDefaultChecked: false,\r\n                                                }\r\n                                            },\r\n                                            {\r\n                                                _id: \"persNeurSensTraitsDepressed\",\r\n                                                DataType: \"Checkbox\",\r\n                                                Name: \"Depressed\",\r\n                                                Description: \"\",\r\n                                                Args: {\r\n                                                    IsDefaultChecked: false,\r\n                                                }\r\n                                            },\r\n                                            {\r\n                                                _id: \"persNeurSensTraitsJealous\",\r\n                                                DataType: \"Checkbox\",\r\n                                                Name: \"Jealous\",\r\n                                                Description: \"\",\r\n                                                Args: {\r\n                                                    IsDefaultChecked: false,\r\n                                                }\r\n                                            },\r\n                                            {\r\n                                                _id: \"persNeurSensTraitsProviding\",\r\n                                                DataType: \"Checkbox\",\r\n                                                Name: \"Providing\",\r\n                                                Description: \"\",\r\n                                                Args: {\r\n                                                    IsDefaultChecked: false,\r\n                                                }\r\n                                            },\r\n                                            {\r\n                                                _id: \"persNeurSensTraitsSelfAware\",\r\n                                                DataType: \"Checkbox\",\r\n                                                Name: \"Self-Aware\",\r\n                                                Description: \"\",\r\n                                                Args: {\r\n                                                    IsDefaultChecked: false,\r\n                                                }\r\n                                            },\r\n                                            {\r\n                                                _id: \"persNeurSensTraitsRealistic\",\r\n                                                DataType: \"Checkbox\",\r\n                                                Name: \"Realistic\",\r\n                                                Description: \"\",\r\n                                                Args: {\r\n                                                    IsDefaultChecked: false,\r\n                                                }\r\n                                            }\r\n                                        ],\r\n                                    }\r\n                                }\r\n                            ],\r\n                        }\r\n                    },\r\n                    {\r\n                        _id: \"persNeurResilient\",\r\n                        DataType: \"Group\",\r\n                        Name: \"Resilient\",\r\n                        Description: \"Resilient\",\r\n                        Args: {\r\n                            Items: [\r\n                                {\r\n                                    _id: \"persNeurResiFortuneBold\",\r\n                                    DataType: \"Checkbox\",\r\n                                    Name: \"Fortune Favors the bold\",\r\n                                    Description: \"When this character charges forward into a situation bravely, not to be confused with recklessly, they get a bonus for one round. This could be running after captors of a kidnap situation, rushing towards a predator that has attacked a friend, or perhaps driving onto a battlefield to pick up the wounded.\",\r\n                                    Args: {\r\n                                        IsDefaultChecked: false,\r\n                                    }\r\n                                },\r\n                                {\r\n                                    _id: \"persNeurResiGiftedLead\",\r\n                                    DataType: \"Checkbox\",\r\n                                    Name: \"Gifted leadership\",\r\n                                    Description: \"Being calm under pressure means people look to you for leadership and guidance. Gain a bonus when trying to recruit NPC's to your cause.\",\r\n                                    Args: {\r\n                                        IsDefaultChecked: false,\r\n                                    }\r\n                                },\r\n                                {\r\n                                    _id: \"persNeurResiNervesSteel\",\r\n                                    DataType: \"Checkbox\",\r\n                                    Name: \"Nerves of Steel\",\r\n                                    Description: \"You don't crack under pressure! A person with this trait has a resistance to high tense situations or stress. Gain a bonus on the first round of conflict involving high emotional stakes or pressure.\",\r\n                                    Args: {\r\n                                        IsDefaultChecked: false,\r\n                                    }\r\n                                },\r\n                                {\r\n                                    _id: \"persNeurResiEmotionalRock\",\r\n                                    DataType: \"Checkbox\",\r\n                                    Name: \"Emotional Rock\",\r\n                                    Description: \"When reaching 0 in emotional health roll a 6 sided die. If it lands on odd, add that back to your HP and do not drop a state of existence.\",\r\n                                    Args: {\r\n                                        IsDefaultChecked: false,\r\n                                    }\r\n                                },\r\n                                {\r\n                                    _id: \"persNeurResiTraits\",\r\n                                    DataType: \"Group\",\r\n                                    Name: \"Traits\",\r\n                                    Description: \"Traits\",\r\n                                    Args: {\r\n                                        Items: [\r\n                                            {\r\n                                                _id: \"persNeurResiTraitsCalm\",\r\n                                                DataType: \"Checkbox\",\r\n                                                Name: \"Calm\",\r\n                                                Description: \"\",\r\n                                                Args: {\r\n                                                    IsDefaultChecked: false,\r\n                                                }\r\n                                            },\r\n                                            {\r\n                                                _id: \"persNeurResiTraitsRealist\",\r\n                                                DataType: \"Checkbox\",\r\n                                                Name: \"Realist\",\r\n                                                Description: \"\",\r\n                                                Args: {\r\n                                                    IsDefaultChecked: false,\r\n                                                }\r\n                                            },\r\n                                            {\r\n                                                _id: \"persNeurResiTraitsStable\",\r\n                                                DataType: \"Checkbox\",\r\n                                                Name: \"Stable\",\r\n                                                Description: \"\",\r\n                                                Args: {\r\n                                                    IsDefaultChecked: false,\r\n                                                }\r\n                                            },\r\n                                            {\r\n                                                _id: \"persNeurResiTraitsResilient\",\r\n                                                DataType: \"Checkbox\",\r\n                                                Name: \"Resilient\",\r\n                                                Description: \"\",\r\n                                                Args: {\r\n                                                    IsDefaultChecked: false,\r\n                                                }\r\n                                            },\r\n                                            {\r\n                                                _id: \"persNeurResiTraitsUnintuitive\",\r\n                                                DataType: \"Checkbox\",\r\n                                                Name: \"Unintuitive\",\r\n                                                Description: \"\",\r\n                                                Args: {\r\n                                                    IsDefaultChecked: false,\r\n                                                }\r\n                                            }\r\n                                        ],\r\n                                    }\r\n                                }\r\n                            ],\r\n                        }\r\n                    }\r\n                ],\r\n            }\r\n        }\r\n    ]\r\n};\r\n\r\nmodule.exports = Data;"],"sourceRoot":""}